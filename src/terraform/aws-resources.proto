syntax = "proto3";

package terraform.aws.resources;

import "terraform/meta.proto";

//AwsAccessanalyzerAnalyzer version is 0
message AwsAccessanalyzerAnalyzer {
  string analyzer_name = 1 [json_name = "analyzer_name"];

  string arn = 2;

  string id = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  string type = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsAccountAlternateContact version is 0
message AwsAccountAlternateContact {
  string account_id = 1 [json_name = "account_id"];

  string alternate_contact_type = 2 [json_name = "alternate_contact_type"];

  string email_address = 3 [json_name = "email_address"];

  string id = 4;

  string name = 5;

  string phone_number = 6 [json_name = "phone_number"];

  string title = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsAcmCertificate version is 0
message AwsAcmCertificate {
  string arn = 1;

  string certificate_authority_arn = 2 [json_name = "certificate_authority_arn"];

  string certificate_body = 3 [json_name = "certificate_body"];

  string certificate_chain = 4 [json_name = "certificate_chain"];

  string domain_name = 5 [json_name = "domain_name"];

  repeated DomainValidationOptions domain_validation_options = 6 [json_name = "domain_validation_options"];

  string id = 7;

  string private_key = 8 [json_name = "private_key"];

  string status = 9;

  repeated string subject_alternative_names = 10 [json_name = "subject_alternative_names"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  repeated string validation_emails = 13 [json_name = "validation_emails"];

  string validation_method = 14 [json_name = "validation_method"];

  Options options = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message DomainValidationOptions {
    //domain_name: string
    string domain_name = 1 [json_name = "domain_name"];

    //resource_record_name: string
    string resource_record_name = 2 [json_name = "resource_record_name"];

    //resource_record_type: string
    string resource_record_type = 3 [json_name = "resource_record_type"];

    //resource_record_value: string
    string resource_record_value = 4 [json_name = "resource_record_value"];
  }

  message Options {
    string certificate_transparency_logging_preference = 1 [json_name = "certificate_transparency_logging_preference"];
  }
}

//AwsAcmCertificateValidation version is 0
message AwsAcmCertificateValidation {
  string certificate_arn = 1 [json_name = "certificate_arn"];

  string id = 2;

  repeated string validation_record_fqdns = 3 [json_name = "validation_record_fqdns"];

  repeated Timeouts timeouts = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;
  }
}

//AwsAcmpcaCertificate version is 0
message AwsAcmpcaCertificate {
  string arn = 1;

  string certificate = 2;

  string certificate_authority_arn = 3 [json_name = "certificate_authority_arn"];

  string certificate_chain = 4 [json_name = "certificate_chain"];

  string certificate_signing_request = 5 [json_name = "certificate_signing_request"];

  string id = 6;

  string signing_algorithm = 7 [json_name = "signing_algorithm"];

  string template_arn = 8 [json_name = "template_arn"];

  Validity validity = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Validity {
    string type = 1;

    string value = 2;
  }
}

//AwsAcmpcaCertificateAuthority version is 1
message AwsAcmpcaCertificateAuthority {
  string arn = 1;

  string certificate = 2;

  string certificate_chain = 3 [json_name = "certificate_chain"];

  string certificate_signing_request = 4 [json_name = "certificate_signing_request"];

  bool enabled = 5;

  string id = 6;

  string not_after = 7 [json_name = "not_after"];

  string not_before = 8 [json_name = "not_before"];

  int64 permanent_deletion_time_in_days = 9 [json_name = "permanent_deletion_time_in_days"];

  string serial = 10;

  string status = 11;

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string type = 14;

  CertificateAuthorityConfiguration certificate_authority_configuration = 15 [json_name = "certificate_authority_configuration"];

  RevocationConfiguration revocation_configuration = 16 [json_name = "revocation_configuration"];

  repeated Timeouts timeouts = 17;

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message CertificateAuthorityConfiguration {
    string key_algorithm = 1 [json_name = "key_algorithm"];

    string signing_algorithm = 2 [json_name = "signing_algorithm"];

    Subject subject = 3;

    message Subject {
      string common_name = 1 [json_name = "common_name"];

      string country = 2;

      string distinguished_name_qualifier = 3 [json_name = "distinguished_name_qualifier"];

      string generation_qualifier = 4 [json_name = "generation_qualifier"];

      string given_name = 5 [json_name = "given_name"];

      string initials = 6;

      string locality = 7;

      string organization = 8;

      string organizational_unit = 9 [json_name = "organizational_unit"];

      string pseudonym = 10;

      string state = 11;

      string surname = 12;

      string title = 13;
    }
  }

  message RevocationConfiguration {
    CrlConfiguration crl_configuration = 1 [json_name = "crl_configuration"];

    message CrlConfiguration {
      string custom_cname = 1 [json_name = "custom_cname"];

      bool enabled = 2;

      int64 expiration_in_days = 3 [json_name = "expiration_in_days"];

      string s3_bucket_name = 4 [json_name = "s3_bucket_name"];

      string s3_object_acl = 5 [json_name = "s3_object_acl"];
    }
  }

  message Timeouts {
    string create = 1;
  }
}

//AwsAcmpcaCertificateAuthorityCertificate version is 0
message AwsAcmpcaCertificateAuthorityCertificate {
  string certificate = 1;

  string certificate_authority_arn = 2 [json_name = "certificate_authority_arn"];

  string certificate_chain = 3 [json_name = "certificate_chain"];

  string id = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsAlb version is 0
message AwsAlb {
  string arn = 1;

  string arn_suffix = 2 [json_name = "arn_suffix"];

  string customer_owned_ipv4_pool = 3 [json_name = "customer_owned_ipv4_pool"];

  string desync_mitigation_mode = 4 [json_name = "desync_mitigation_mode"];

  string dns_name = 5 [json_name = "dns_name"];

  bool drop_invalid_header_fields = 6 [json_name = "drop_invalid_header_fields"];

  bool enable_cross_zone_load_balancing = 7 [json_name = "enable_cross_zone_load_balancing"];

  bool enable_deletion_protection = 8 [json_name = "enable_deletion_protection"];

  bool enable_http2 = 9 [json_name = "enable_http2"];

  bool enable_waf_fail_open = 10 [json_name = "enable_waf_fail_open"];

  string id = 11;

  int64 idle_timeout = 12 [json_name = "idle_timeout"];

  bool internal = 13;

  string ip_address_type = 14 [json_name = "ip_address_type"];

  string load_balancer_type = 15 [json_name = "load_balancer_type"];

  string name = 16;

  string name_prefix = 17 [json_name = "name_prefix"];

  repeated string security_groups = 18 [json_name = "security_groups"];

  repeated string subnets = 19;

  map<string, string> tags = 20;

  map<string, string> tags_all = 21 [json_name = "tags_all"];

  string vpc_id = 22 [json_name = "vpc_id"];

  string zone_id = 23 [json_name = "zone_id"];

  AccessLogs access_logs = 24 [json_name = "access_logs"];

  repeated SubnetMapping subnet_mapping = 25 [json_name = "subnet_mapping"];

  repeated Timeouts timeouts = 26;

  repeated string depends_on = 27;

  int32 count = 28;

  map<string, string> for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message AccessLogs {
    string bucket = 1;

    bool enabled = 2;

    string prefix = 3;
  }

  message SubnetMapping {
    string allocation_id = 1 [json_name = "allocation_id"];

    string ipv6_address = 2 [json_name = "ipv6_address"];

    string outpost_id = 3 [json_name = "outpost_id"];

    string private_ipv4_address = 4 [json_name = "private_ipv4_address"];

    string subnet_id = 5 [json_name = "subnet_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsAlbListener version is 0
message AwsAlbListener {
  string alpn_policy = 1 [json_name = "alpn_policy"];

  string arn = 2;

  string certificate_arn = 3 [json_name = "certificate_arn"];

  string id = 4;

  string load_balancer_arn = 5 [json_name = "load_balancer_arn"];

  int64 port = 6;

  string protocol = 7;

  string ssl_policy = 8 [json_name = "ssl_policy"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated DefaultAction default_action = 11 [json_name = "default_action"];

  repeated Timeouts timeouts = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message DefaultAction {
    int64 order = 1;

    string target_group_arn = 2 [json_name = "target_group_arn"];

    string type = 3;

    AuthenticateCognito authenticate_cognito = 4 [json_name = "authenticate_cognito"];

    AuthenticateOidc authenticate_oidc = 5 [json_name = "authenticate_oidc"];

    FixedResponse fixed_response = 6 [json_name = "fixed_response"];

    Forward forward = 7;

    Redirect redirect = 8;

    message AuthenticateCognito {
      map<string, string> authentication_request_extra_params = 1 [json_name = "authentication_request_extra_params"];

      string on_unauthenticated_request = 2 [json_name = "on_unauthenticated_request"];

      string scope = 3;

      string session_cookie_name = 4 [json_name = "session_cookie_name"];

      int64 session_timeout = 5 [json_name = "session_timeout"];

      string user_pool_arn = 6 [json_name = "user_pool_arn"];

      string user_pool_client_id = 7 [json_name = "user_pool_client_id"];

      string user_pool_domain = 8 [json_name = "user_pool_domain"];
    }

    message AuthenticateOidc {
      map<string, string> authentication_request_extra_params = 1 [json_name = "authentication_request_extra_params"];

      string authorization_endpoint = 2 [json_name = "authorization_endpoint"];

      string client_id = 3 [json_name = "client_id"];

      string client_secret = 4 [json_name = "client_secret"];

      string issuer = 5;

      string on_unauthenticated_request = 6 [json_name = "on_unauthenticated_request"];

      string scope = 7;

      string session_cookie_name = 8 [json_name = "session_cookie_name"];

      int64 session_timeout = 9 [json_name = "session_timeout"];

      string token_endpoint = 10 [json_name = "token_endpoint"];

      string user_info_endpoint = 11 [json_name = "user_info_endpoint"];
    }

    message FixedResponse {
      string content_type = 1 [json_name = "content_type"];

      string message_body = 2 [json_name = "message_body"];

      string status_code = 3 [json_name = "status_code"];
    }

    message Forward {
      Stickiness stickiness = 1;

      repeated TargetGroup target_group = 2 [json_name = "target_group"];

      message Stickiness {
        int64 duration = 1;

        bool enabled = 2;
      }

      message TargetGroup {
        string arn = 1;

        int64 weight = 2;
      }
    }

    message Redirect {
      string host = 1;

      string path = 2;

      string port = 3;

      string protocol = 4;

      string query = 5;

      string status_code = 6 [json_name = "status_code"];
    }
  }

  message Timeouts {
    string read = 1;
  }
}

//AwsAlbListenerCertificate version is 0
message AwsAlbListenerCertificate {
  string certificate_arn = 1 [json_name = "certificate_arn"];

  string id = 2;

  string listener_arn = 3 [json_name = "listener_arn"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsAlbListenerRule version is 0
message AwsAlbListenerRule {
  string arn = 1;

  string id = 2;

  string listener_arn = 3 [json_name = "listener_arn"];

  int64 priority = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated Action action = 7;

  repeated Condition condition = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Action {
    int64 order = 1;

    string target_group_arn = 2 [json_name = "target_group_arn"];

    string type = 3;

    AuthenticateCognito authenticate_cognito = 4 [json_name = "authenticate_cognito"];

    AuthenticateOidc authenticate_oidc = 5 [json_name = "authenticate_oidc"];

    FixedResponse fixed_response = 6 [json_name = "fixed_response"];

    Forward forward = 7;

    Redirect redirect = 8;

    message AuthenticateCognito {
      map<string, string> authentication_request_extra_params = 1 [json_name = "authentication_request_extra_params"];

      string on_unauthenticated_request = 2 [json_name = "on_unauthenticated_request"];

      string scope = 3;

      string session_cookie_name = 4 [json_name = "session_cookie_name"];

      int64 session_timeout = 5 [json_name = "session_timeout"];

      string user_pool_arn = 6 [json_name = "user_pool_arn"];

      string user_pool_client_id = 7 [json_name = "user_pool_client_id"];

      string user_pool_domain = 8 [json_name = "user_pool_domain"];
    }

    message AuthenticateOidc {
      map<string, string> authentication_request_extra_params = 1 [json_name = "authentication_request_extra_params"];

      string authorization_endpoint = 2 [json_name = "authorization_endpoint"];

      string client_id = 3 [json_name = "client_id"];

      string client_secret = 4 [json_name = "client_secret"];

      string issuer = 5;

      string on_unauthenticated_request = 6 [json_name = "on_unauthenticated_request"];

      string scope = 7;

      string session_cookie_name = 8 [json_name = "session_cookie_name"];

      int64 session_timeout = 9 [json_name = "session_timeout"];

      string token_endpoint = 10 [json_name = "token_endpoint"];

      string user_info_endpoint = 11 [json_name = "user_info_endpoint"];
    }

    message FixedResponse {
      string content_type = 1 [json_name = "content_type"];

      string message_body = 2 [json_name = "message_body"];

      string status_code = 3 [json_name = "status_code"];
    }

    message Forward {
      Stickiness stickiness = 1;

      repeated TargetGroup target_group = 2 [json_name = "target_group"];

      message Stickiness {
        int64 duration = 1;

        bool enabled = 2;
      }

      message TargetGroup {
        string arn = 1;

        int64 weight = 2;
      }
    }

    message Redirect {
      string host = 1;

      string path = 2;

      string port = 3;

      string protocol = 4;

      string query = 5;

      string status_code = 6 [json_name = "status_code"];
    }
  }

  message Condition {
    HostHeader host_header = 1 [json_name = "host_header"];

    HttpHeader http_header = 2 [json_name = "http_header"];

    HttpRequestMethod http_request_method = 3 [json_name = "http_request_method"];

    PathPattern path_pattern = 4 [json_name = "path_pattern"];

    repeated QueryString query_string = 5 [json_name = "query_string"];

    SourceIp source_ip = 6 [json_name = "source_ip"];

    message HostHeader {
      repeated string values = 1;
    }

    message HttpHeader {
      string http_header_name = 1 [json_name = "http_header_name"];

      repeated string values = 2;
    }

    message HttpRequestMethod {
      repeated string values = 1;
    }

    message PathPattern {
      repeated string values = 1;
    }

    message QueryString {
      string key = 1;

      string value = 2;
    }

    message SourceIp {
      repeated string values = 1;
    }
  }
}

//AwsAlbTargetGroup version is 0
message AwsAlbTargetGroup {
  string arn = 1;

  string arn_suffix = 2 [json_name = "arn_suffix"];

  bool connection_termination = 3 [json_name = "connection_termination"];

  string deregistration_delay = 4 [json_name = "deregistration_delay"];

  string id = 5;

  bool lambda_multi_value_headers_enabled = 6 [json_name = "lambda_multi_value_headers_enabled"];

  string load_balancing_algorithm_type = 7 [json_name = "load_balancing_algorithm_type"];

  string name = 8;

  string name_prefix = 9 [json_name = "name_prefix"];

  int64 port = 10;

  string preserve_client_ip = 11 [json_name = "preserve_client_ip"];

  string protocol = 12;

  string protocol_version = 13 [json_name = "protocol_version"];

  bool proxy_protocol_v2 = 14 [json_name = "proxy_protocol_v2"];

  int64 slow_start = 15 [json_name = "slow_start"];

  map<string, string> tags = 16;

  map<string, string> tags_all = 17 [json_name = "tags_all"];

  string target_type = 18 [json_name = "target_type"];

  string vpc_id = 19 [json_name = "vpc_id"];

  HealthCheck health_check = 20 [json_name = "health_check"];

  Stickiness stickiness = 21;

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message HealthCheck {
    bool enabled = 1;

    int64 healthy_threshold = 2 [json_name = "healthy_threshold"];

    int64 interval = 3;

    string matcher = 4;

    string path = 5;

    string port = 6;

    string protocol = 7;

    int64 timeout = 8;

    int64 unhealthy_threshold = 9 [json_name = "unhealthy_threshold"];
  }

  message Stickiness {
    int64 cookie_duration = 1 [json_name = "cookie_duration"];

    string cookie_name = 2 [json_name = "cookie_name"];

    bool enabled = 3;

    string type = 4;
  }
}

//AwsAlbTargetGroupAttachment version is 0
message AwsAlbTargetGroupAttachment {
  string availability_zone = 1 [json_name = "availability_zone"];

  string id = 2;

  int64 port = 3;

  string target_group_arn = 4 [json_name = "target_group_arn"];

  string target_id = 5 [json_name = "target_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsAmi version is 0
message AwsAmi {
  string architecture = 1;

  string arn = 2;

  string description = 3;

  bool ena_support = 4 [json_name = "ena_support"];

  string hypervisor = 5;

  string id = 6;

  string image_location = 7 [json_name = "image_location"];

  string image_owner_alias = 8 [json_name = "image_owner_alias"];

  string image_type = 9 [json_name = "image_type"];

  string kernel_id = 10 [json_name = "kernel_id"];

  bool manage_ebs_snapshots = 11 [json_name = "manage_ebs_snapshots"];

  string name = 12;

  string owner_id = 13 [json_name = "owner_id"];

  string platform = 14;

  string platform_details = 15 [json_name = "platform_details"];

  bool public = 16;

  string ramdisk_id = 17 [json_name = "ramdisk_id"];

  string root_device_name = 18 [json_name = "root_device_name"];

  string root_snapshot_id = 19 [json_name = "root_snapshot_id"];

  string sriov_net_support = 20 [json_name = "sriov_net_support"];

  map<string, string> tags = 21;

  map<string, string> tags_all = 22 [json_name = "tags_all"];

  string usage_operation = 23 [json_name = "usage_operation"];

  string virtualization_type = 24 [json_name = "virtualization_type"];

  repeated EbsBlockDevice ebs_block_device = 25 [json_name = "ebs_block_device"];

  repeated EphemeralBlockDevice ephemeral_block_device = 26 [json_name = "ephemeral_block_device"];

  repeated Timeouts timeouts = 27;

  repeated string depends_on = 28;

  int32 count = 29;

  map<string, string> for_each = 30;

  string provider = 31;

  terraform.meta.Lifecycle lifecycle = 32;

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string snapshot_id = 5 [json_name = "snapshot_id"];

    int64 throughput = 6;

    int64 volume_size = 7 [json_name = "volume_size"];

    string volume_type = 8 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    string virtual_name = 2 [json_name = "virtual_name"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsAmiCopy version is 0
message AwsAmiCopy {
  string architecture = 1;

  string arn = 2;

  string description = 3;

  string destination_outpost_arn = 4 [json_name = "destination_outpost_arn"];

  bool ena_support = 5 [json_name = "ena_support"];

  bool encrypted = 6;

  string hypervisor = 7;

  string id = 8;

  string image_location = 9 [json_name = "image_location"];

  string image_owner_alias = 10 [json_name = "image_owner_alias"];

  string image_type = 11 [json_name = "image_type"];

  string kernel_id = 12 [json_name = "kernel_id"];

  string kms_key_id = 13 [json_name = "kms_key_id"];

  bool manage_ebs_snapshots = 14 [json_name = "manage_ebs_snapshots"];

  string name = 15;

  string owner_id = 16 [json_name = "owner_id"];

  string platform = 17;

  string platform_details = 18 [json_name = "platform_details"];

  bool public = 19;

  string ramdisk_id = 20 [json_name = "ramdisk_id"];

  string root_device_name = 21 [json_name = "root_device_name"];

  string root_snapshot_id = 22 [json_name = "root_snapshot_id"];

  string source_ami_id = 23 [json_name = "source_ami_id"];

  string source_ami_region = 24 [json_name = "source_ami_region"];

  string sriov_net_support = 25 [json_name = "sriov_net_support"];

  map<string, string> tags = 26;

  map<string, string> tags_all = 27 [json_name = "tags_all"];

  string usage_operation = 28 [json_name = "usage_operation"];

  string virtualization_type = 29 [json_name = "virtualization_type"];

  repeated EbsBlockDevice ebs_block_device = 30 [json_name = "ebs_block_device"];

  repeated EphemeralBlockDevice ephemeral_block_device = 31 [json_name = "ephemeral_block_device"];

  repeated Timeouts timeouts = 32;

  repeated string depends_on = 33;

  int32 count = 34;

  map<string, string> for_each = 35;

  string provider = 36;

  terraform.meta.Lifecycle lifecycle = 37;

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string snapshot_id = 5 [json_name = "snapshot_id"];

    int64 throughput = 6;

    int64 volume_size = 7 [json_name = "volume_size"];

    string volume_type = 8 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    string virtual_name = 2 [json_name = "virtual_name"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsAmiFromInstance version is 0
message AwsAmiFromInstance {
  string architecture = 1;

  string arn = 2;

  string description = 3;

  bool ena_support = 4 [json_name = "ena_support"];

  string hypervisor = 5;

  string id = 6;

  string image_location = 7 [json_name = "image_location"];

  string image_owner_alias = 8 [json_name = "image_owner_alias"];

  string image_type = 9 [json_name = "image_type"];

  string kernel_id = 10 [json_name = "kernel_id"];

  bool manage_ebs_snapshots = 11 [json_name = "manage_ebs_snapshots"];

  string name = 12;

  string owner_id = 13 [json_name = "owner_id"];

  string platform = 14;

  string platform_details = 15 [json_name = "platform_details"];

  bool public = 16;

  string ramdisk_id = 17 [json_name = "ramdisk_id"];

  string root_device_name = 18 [json_name = "root_device_name"];

  string root_snapshot_id = 19 [json_name = "root_snapshot_id"];

  bool snapshot_without_reboot = 20 [json_name = "snapshot_without_reboot"];

  string source_instance_id = 21 [json_name = "source_instance_id"];

  string sriov_net_support = 22 [json_name = "sriov_net_support"];

  map<string, string> tags = 23;

  map<string, string> tags_all = 24 [json_name = "tags_all"];

  string usage_operation = 25 [json_name = "usage_operation"];

  string virtualization_type = 26 [json_name = "virtualization_type"];

  repeated EbsBlockDevice ebs_block_device = 27 [json_name = "ebs_block_device"];

  repeated EphemeralBlockDevice ephemeral_block_device = 28 [json_name = "ephemeral_block_device"];

  repeated Timeouts timeouts = 29;

  repeated string depends_on = 30;

  int32 count = 31;

  map<string, string> for_each = 32;

  string provider = 33;

  terraform.meta.Lifecycle lifecycle = 34;

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string snapshot_id = 5 [json_name = "snapshot_id"];

    int64 throughput = 6;

    int64 volume_size = 7 [json_name = "volume_size"];

    string volume_type = 8 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    string virtual_name = 2 [json_name = "virtual_name"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsAmiLaunchPermission version is 0
message AwsAmiLaunchPermission {
  string account_id = 1 [json_name = "account_id"];

  string id = 2;

  string image_id = 3 [json_name = "image_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsAmplifyApp version is 0
message AwsAmplifyApp {
  string access_token = 1 [json_name = "access_token"];

  string arn = 2;

  repeated string auto_branch_creation_patterns = 3 [json_name = "auto_branch_creation_patterns"];

  string basic_auth_credentials = 4 [json_name = "basic_auth_credentials"];

  string build_spec = 5 [json_name = "build_spec"];

  string default_domain = 6 [json_name = "default_domain"];

  string description = 7;

  bool enable_auto_branch_creation = 8 [json_name = "enable_auto_branch_creation"];

  bool enable_basic_auth = 9 [json_name = "enable_basic_auth"];

  bool enable_branch_auto_build = 10 [json_name = "enable_branch_auto_build"];

  bool enable_branch_auto_deletion = 11 [json_name = "enable_branch_auto_deletion"];

  map<string, string> environment_variables = 12 [json_name = "environment_variables"];

  string iam_service_role_arn = 13 [json_name = "iam_service_role_arn"];

  string id = 14;

  string name = 15;

  string oauth_token = 16 [json_name = "oauth_token"];

  string platform = 17;

  repeated ProductionBranch production_branch = 18 [json_name = "production_branch"];

  string repository = 19;

  map<string, string> tags = 20;

  map<string, string> tags_all = 21 [json_name = "tags_all"];

  AutoBranchCreationConfig auto_branch_creation_config = 22 [json_name = "auto_branch_creation_config"];

  repeated CustomRule custom_rule = 23 [json_name = "custom_rule"];

  repeated string depends_on = 24;

  int32 count = 25;

  map<string, string> for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;

  message ProductionBranch {
    //branch_name: string
    string branch_name = 1 [json_name = "branch_name"];

    //last_deploy_time: string
    string last_deploy_time = 2 [json_name = "last_deploy_time"];

    //status: string
    string status = 3;

    //thumbnail_url: string
    string thumbnail_url = 4 [json_name = "thumbnail_url"];
  }

  message AutoBranchCreationConfig {
    string basic_auth_credentials = 1 [json_name = "basic_auth_credentials"];

    string build_spec = 2 [json_name = "build_spec"];

    bool enable_auto_build = 3 [json_name = "enable_auto_build"];

    bool enable_basic_auth = 4 [json_name = "enable_basic_auth"];

    bool enable_performance_mode = 5 [json_name = "enable_performance_mode"];

    bool enable_pull_request_preview = 6 [json_name = "enable_pull_request_preview"];

    map<string, string> environment_variables = 7 [json_name = "environment_variables"];

    string framework = 8;

    string pull_request_environment_name = 9 [json_name = "pull_request_environment_name"];

    string stage = 10;
  }

  message CustomRule {
    string condition = 1;

    string source = 2;

    string status = 3;

    string target = 4;
  }
}

//AwsAmplifyBackendEnvironment version is 0
message AwsAmplifyBackendEnvironment {
  string app_id = 1 [json_name = "app_id"];

  string arn = 2;

  string deployment_artifacts = 3 [json_name = "deployment_artifacts"];

  string environment_name = 4 [json_name = "environment_name"];

  string id = 5;

  string stack_name = 6 [json_name = "stack_name"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsAmplifyBranch version is 0
message AwsAmplifyBranch {
  string app_id = 1 [json_name = "app_id"];

  string arn = 2;

  repeated string associated_resources = 3 [json_name = "associated_resources"];

  string backend_environment_arn = 4 [json_name = "backend_environment_arn"];

  string basic_auth_credentials = 5 [json_name = "basic_auth_credentials"];

  string branch_name = 6 [json_name = "branch_name"];

  repeated string custom_domains = 7 [json_name = "custom_domains"];

  string description = 8;

  string destination_branch = 9 [json_name = "destination_branch"];

  string display_name = 10 [json_name = "display_name"];

  bool enable_auto_build = 11 [json_name = "enable_auto_build"];

  bool enable_basic_auth = 12 [json_name = "enable_basic_auth"];

  bool enable_notification = 13 [json_name = "enable_notification"];

  bool enable_performance_mode = 14 [json_name = "enable_performance_mode"];

  bool enable_pull_request_preview = 15 [json_name = "enable_pull_request_preview"];

  map<string, string> environment_variables = 16 [json_name = "environment_variables"];

  string framework = 17;

  string id = 18;

  string pull_request_environment_name = 19 [json_name = "pull_request_environment_name"];

  string source_branch = 20 [json_name = "source_branch"];

  string stage = 21;

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  string ttl = 24;

  repeated string depends_on = 25;

  int32 count = 26;

  map<string, string> for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;
}

//AwsAmplifyDomainAssociation version is 0
message AwsAmplifyDomainAssociation {
  string app_id = 1 [json_name = "app_id"];

  string arn = 2;

  string certificate_verification_dns_record = 3 [json_name = "certificate_verification_dns_record"];

  string domain_name = 4 [json_name = "domain_name"];

  string id = 5;

  bool wait_for_verification = 6 [json_name = "wait_for_verification"];

  repeated SubDomain sub_domain = 7 [json_name = "sub_domain"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message SubDomain {
    string branch_name = 1 [json_name = "branch_name"];

    string dns_record = 2 [json_name = "dns_record"];

    string prefix = 3;

    bool verified = 4;
  }
}

//AwsAmplifyWebhook version is 0
message AwsAmplifyWebhook {
  string app_id = 1 [json_name = "app_id"];

  string arn = 2;

  string branch_name = 3 [json_name = "branch_name"];

  string description = 4;

  string id = 5;

  string url = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApiGatewayAccount version is 0
message AwsApiGatewayAccount {
  string cloudwatch_role_arn = 1 [json_name = "cloudwatch_role_arn"];

  string id = 2;

  repeated ThrottleSettings throttle_settings = 3 [json_name = "throttle_settings"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message ThrottleSettings {
    //burst_limit: number
    int64 burst_limit = 1 [json_name = "burst_limit"];

    //rate_limit: number
    int64 rate_limit = 2 [json_name = "rate_limit"];
  }
}

//AwsApiGatewayApiKey version is 0
message AwsApiGatewayApiKey {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string description = 3;

  bool enabled = 4;

  string id = 5;

  string last_updated_date = 6 [json_name = "last_updated_date"];

  string name = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  string value = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsApiGatewayAuthorizer version is 0
message AwsApiGatewayAuthorizer {
  string authorizer_credentials = 1 [json_name = "authorizer_credentials"];

  int64 authorizer_result_ttl_in_seconds = 2 [json_name = "authorizer_result_ttl_in_seconds"];

  string authorizer_uri = 3 [json_name = "authorizer_uri"];

  string id = 4;

  string identity_source = 5 [json_name = "identity_source"];

  string identity_validation_expression = 6 [json_name = "identity_validation_expression"];

  string name = 7;

  repeated string provider_arns = 8 [json_name = "provider_arns"];

  string rest_api_id = 9 [json_name = "rest_api_id"];

  string type = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsApiGatewayBasePathMapping version is 0
message AwsApiGatewayBasePathMapping {
  string api_id = 1 [json_name = "api_id"];

  string base_path = 2 [json_name = "base_path"];

  string domain_name = 3 [json_name = "domain_name"];

  string id = 4;

  string stage_name = 5 [json_name = "stage_name"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsApiGatewayClientCertificate version is 0
message AwsApiGatewayClientCertificate {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string description = 3;

  string expiration_date = 4 [json_name = "expiration_date"];

  string id = 5;

  string pem_encoded_certificate = 6 [json_name = "pem_encoded_certificate"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsApiGatewayDeployment version is 0
message AwsApiGatewayDeployment {
  string created_date = 1 [json_name = "created_date"];

  string description = 2;

  string execution_arn = 3 [json_name = "execution_arn"];

  string id = 4;

  string invoke_url = 5 [json_name = "invoke_url"];

  string rest_api_id = 6 [json_name = "rest_api_id"];

  string stage_description = 7 [json_name = "stage_description"];

  string stage_name = 8 [json_name = "stage_name"];

  map<string, string> triggers = 9;

  map<string, string> variables = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsApiGatewayDocumentationPart version is 0
message AwsApiGatewayDocumentationPart {
  string id = 1;

  string properties = 2;

  string rest_api_id = 3 [json_name = "rest_api_id"];

  Location location = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Location {
    string method = 1;

    string name = 2;

    string path = 3;

    string status_code = 4 [json_name = "status_code"];

    string type = 5;
  }
}

//AwsApiGatewayDocumentationVersion version is 0
message AwsApiGatewayDocumentationVersion {
  string description = 1;

  string id = 2;

  string rest_api_id = 3 [json_name = "rest_api_id"];

  string version = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsApiGatewayDomainName version is 0
message AwsApiGatewayDomainName {
  string arn = 1;

  string certificate_arn = 2 [json_name = "certificate_arn"];

  string certificate_body = 3 [json_name = "certificate_body"];

  string certificate_chain = 4 [json_name = "certificate_chain"];

  string certificate_name = 5 [json_name = "certificate_name"];

  string certificate_private_key = 6 [json_name = "certificate_private_key"];

  string certificate_upload_date = 7 [json_name = "certificate_upload_date"];

  string cloudfront_domain_name = 8 [json_name = "cloudfront_domain_name"];

  string cloudfront_zone_id = 9 [json_name = "cloudfront_zone_id"];

  string domain_name = 10 [json_name = "domain_name"];

  string id = 11;

  string regional_certificate_arn = 12 [json_name = "regional_certificate_arn"];

  string regional_certificate_name = 13 [json_name = "regional_certificate_name"];

  string regional_domain_name = 14 [json_name = "regional_domain_name"];

  string regional_zone_id = 15 [json_name = "regional_zone_id"];

  string security_policy = 16 [json_name = "security_policy"];

  map<string, string> tags = 17;

  map<string, string> tags_all = 18 [json_name = "tags_all"];

  EndpointConfiguration endpoint_configuration = 19 [json_name = "endpoint_configuration"];

  MutualTlsAuthentication mutual_tls_authentication = 20 [json_name = "mutual_tls_authentication"];

  repeated string depends_on = 21;

  int32 count = 22;

  map<string, string> for_each = 23;

  string provider = 24;

  terraform.meta.Lifecycle lifecycle = 25;

  message EndpointConfiguration {
    repeated string types = 1;
  }

  message MutualTlsAuthentication {
    string truststore_uri = 1 [json_name = "truststore_uri"];

    string truststore_version = 2 [json_name = "truststore_version"];
  }
}

//AwsApiGatewayGatewayResponse version is 0
message AwsApiGatewayGatewayResponse {
  string id = 1;

  map<string, string> response_parameters = 2 [json_name = "response_parameters"];

  map<string, string> response_templates = 3 [json_name = "response_templates"];

  string response_type = 4 [json_name = "response_type"];

  string rest_api_id = 5 [json_name = "rest_api_id"];

  string status_code = 6 [json_name = "status_code"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApiGatewayIntegration version is 0
message AwsApiGatewayIntegration {
  repeated string cache_key_parameters = 1 [json_name = "cache_key_parameters"];

  string cache_namespace = 2 [json_name = "cache_namespace"];

  string connection_id = 3 [json_name = "connection_id"];

  string connection_type = 4 [json_name = "connection_type"];

  string content_handling = 5 [json_name = "content_handling"];

  string credentials = 6;

  string http_method = 7 [json_name = "http_method"];

  string id = 8;

  string integration_http_method = 9 [json_name = "integration_http_method"];

  string passthrough_behavior = 10 [json_name = "passthrough_behavior"];

  map<string, string> request_parameters = 11 [json_name = "request_parameters"];

  map<string, string> request_templates = 12 [json_name = "request_templates"];

  string resource_id = 13 [json_name = "resource_id"];

  string rest_api_id = 14 [json_name = "rest_api_id"];

  int64 timeout_milliseconds = 15 [json_name = "timeout_milliseconds"];

  string type = 16;

  string uri = 17;

  TlsConfig tls_config = 18 [json_name = "tls_config"];

  repeated string depends_on = 19;

  int32 count = 20;

  map<string, string> for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message TlsConfig {
    bool insecure_skip_verification = 1 [json_name = "insecure_skip_verification"];
  }
}

//AwsApiGatewayIntegrationResponse version is 0
message AwsApiGatewayIntegrationResponse {
  string content_handling = 1 [json_name = "content_handling"];

  string http_method = 2 [json_name = "http_method"];

  string id = 3;

  string resource_id = 4 [json_name = "resource_id"];

  map<string, string> response_parameters = 5 [json_name = "response_parameters"];

  map<string, string> response_templates = 6 [json_name = "response_templates"];

  string rest_api_id = 7 [json_name = "rest_api_id"];

  string selection_pattern = 8 [json_name = "selection_pattern"];

  string status_code = 9 [json_name = "status_code"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsApiGatewayMethod version is 0
message AwsApiGatewayMethod {
  bool api_key_required = 1 [json_name = "api_key_required"];

  string authorization = 2;

  repeated string authorization_scopes = 3 [json_name = "authorization_scopes"];

  string authorizer_id = 4 [json_name = "authorizer_id"];

  string http_method = 5 [json_name = "http_method"];

  string id = 6;

  string operation_name = 7 [json_name = "operation_name"];

  map<string, string> request_models = 8 [json_name = "request_models"];

  map<string, string> request_parameters = 9 [json_name = "request_parameters"];

  string request_validator_id = 10 [json_name = "request_validator_id"];

  string resource_id = 11 [json_name = "resource_id"];

  string rest_api_id = 12 [json_name = "rest_api_id"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsApiGatewayMethodResponse version is 0
message AwsApiGatewayMethodResponse {
  string http_method = 1 [json_name = "http_method"];

  string id = 2;

  string resource_id = 3 [json_name = "resource_id"];

  map<string, string> response_models = 4 [json_name = "response_models"];

  map<string, string> response_parameters = 5 [json_name = "response_parameters"];

  string rest_api_id = 6 [json_name = "rest_api_id"];

  string status_code = 7 [json_name = "status_code"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsApiGatewayMethodSettings version is 0
message AwsApiGatewayMethodSettings {
  string id = 1;

  string method_path = 2 [json_name = "method_path"];

  string rest_api_id = 3 [json_name = "rest_api_id"];

  string stage_name = 4 [json_name = "stage_name"];

  Settings settings = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Settings {
    bool cache_data_encrypted = 1 [json_name = "cache_data_encrypted"];

    int64 cache_ttl_in_seconds = 2 [json_name = "cache_ttl_in_seconds"];

    bool caching_enabled = 3 [json_name = "caching_enabled"];

    bool data_trace_enabled = 4 [json_name = "data_trace_enabled"];

    string logging_level = 5 [json_name = "logging_level"];

    bool metrics_enabled = 6 [json_name = "metrics_enabled"];

    bool require_authorization_for_cache_control = 7 [json_name = "require_authorization_for_cache_control"];

    int64 throttling_burst_limit = 8 [json_name = "throttling_burst_limit"];

    int64 throttling_rate_limit = 9 [json_name = "throttling_rate_limit"];

    string unauthorized_cache_control_header_strategy = 10 [json_name = "unauthorized_cache_control_header_strategy"];
  }
}

//AwsApiGatewayModel version is 0
message AwsApiGatewayModel {
  string content_type = 1 [json_name = "content_type"];

  string description = 2;

  string id = 3;

  string name = 4;

  string rest_api_id = 5 [json_name = "rest_api_id"];

  string schema = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApiGatewayRequestValidator version is 0
message AwsApiGatewayRequestValidator {
  string id = 1;

  string name = 2;

  string rest_api_id = 3 [json_name = "rest_api_id"];

  bool validate_request_body = 4 [json_name = "validate_request_body"];

  bool validate_request_parameters = 5 [json_name = "validate_request_parameters"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsApiGatewayResource version is 0
message AwsApiGatewayResource {
  string id = 1;

  string parent_id = 2 [json_name = "parent_id"];

  string path = 3;

  string path_part = 4 [json_name = "path_part"];

  string rest_api_id = 5 [json_name = "rest_api_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsApiGatewayRestApi version is 0
message AwsApiGatewayRestApi {
  string api_key_source = 1 [json_name = "api_key_source"];

  string arn = 2;

  repeated string binary_media_types = 3 [json_name = "binary_media_types"];

  string body = 4;

  string created_date = 5 [json_name = "created_date"];

  string description = 6;

  bool disable_execute_api_endpoint = 7 [json_name = "disable_execute_api_endpoint"];

  string execution_arn = 8 [json_name = "execution_arn"];

  string id = 9;

  int64 minimum_compression_size = 10 [json_name = "minimum_compression_size"];

  string name = 11;

  map<string, string> parameters = 12;

  string policy = 13;

  string root_resource_id = 14 [json_name = "root_resource_id"];

  map<string, string> tags = 15;

  map<string, string> tags_all = 16 [json_name = "tags_all"];

  EndpointConfiguration endpoint_configuration = 17 [json_name = "endpoint_configuration"];

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message EndpointConfiguration {
    repeated string types = 1;

    repeated string vpc_endpoint_ids = 2 [json_name = "vpc_endpoint_ids"];
  }
}

//AwsApiGatewayRestApiPolicy version is 0
message AwsApiGatewayRestApiPolicy {
  string id = 1;

  string policy = 2;

  string rest_api_id = 3 [json_name = "rest_api_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsApiGatewayStage version is 0
message AwsApiGatewayStage {
  string arn = 1;

  bool cache_cluster_enabled = 2 [json_name = "cache_cluster_enabled"];

  string cache_cluster_size = 3 [json_name = "cache_cluster_size"];

  string client_certificate_id = 4 [json_name = "client_certificate_id"];

  string deployment_id = 5 [json_name = "deployment_id"];

  string description = 6;

  string documentation_version = 7 [json_name = "documentation_version"];

  string execution_arn = 8 [json_name = "execution_arn"];

  string id = 9;

  string invoke_url = 10 [json_name = "invoke_url"];

  string rest_api_id = 11 [json_name = "rest_api_id"];

  string stage_name = 12 [json_name = "stage_name"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  map<string, string> variables = 15;

  bool xray_tracing_enabled = 16 [json_name = "xray_tracing_enabled"];

  AccessLogSettings access_log_settings = 17 [json_name = "access_log_settings"];

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message AccessLogSettings {
    string destination_arn = 1 [json_name = "destination_arn"];

    string format = 2;
  }
}

//AwsApiGatewayUsagePlan version is 0
message AwsApiGatewayUsagePlan {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string product_code = 5 [json_name = "product_code"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated ApiStages api_stages = 8 [json_name = "api_stages"];

  QuotaSettings quota_settings = 9 [json_name = "quota_settings"];

  ThrottleSettings throttle_settings = 10 [json_name = "throttle_settings"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message ApiStages {
    string api_id = 1 [json_name = "api_id"];

    string stage = 2;

    repeated Throttle throttle = 3;

    message Throttle {
      int64 burst_limit = 1 [json_name = "burst_limit"];

      string path = 2;

      int64 rate_limit = 3 [json_name = "rate_limit"];
    }
  }

  message QuotaSettings {
    int64 limit = 1;

    int64 offset = 2;

    string period = 3;
  }

  message ThrottleSettings {
    int64 burst_limit = 1 [json_name = "burst_limit"];

    int64 rate_limit = 2 [json_name = "rate_limit"];
  }
}

//AwsApiGatewayUsagePlanKey version is 0
message AwsApiGatewayUsagePlanKey {
  string id = 1;

  string key_id = 2 [json_name = "key_id"];

  string key_type = 3 [json_name = "key_type"];

  string name = 4;

  string usage_plan_id = 5 [json_name = "usage_plan_id"];

  string value = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApiGatewayVpcLink version is 0
message AwsApiGatewayVpcLink {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string target_arns = 7 [json_name = "target_arns"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsApigatewayv2Api version is 0
message AwsApigatewayv2Api {
  string api_endpoint = 1 [json_name = "api_endpoint"];

  string api_key_selection_expression = 2 [json_name = "api_key_selection_expression"];

  string arn = 3;

  string body = 4;

  string credentials_arn = 5 [json_name = "credentials_arn"];

  string description = 6;

  bool disable_execute_api_endpoint = 7 [json_name = "disable_execute_api_endpoint"];

  string execution_arn = 8 [json_name = "execution_arn"];

  bool fail_on_warnings = 9 [json_name = "fail_on_warnings"];

  string id = 10;

  string name = 11;

  string protocol_type = 12 [json_name = "protocol_type"];

  string route_key = 13 [json_name = "route_key"];

  string route_selection_expression = 14 [json_name = "route_selection_expression"];

  map<string, string> tags = 15;

  map<string, string> tags_all = 16 [json_name = "tags_all"];

  string target = 17;

  string version = 18;

  CorsConfiguration cors_configuration = 19 [json_name = "cors_configuration"];

  repeated string depends_on = 20;

  int32 count = 21;

  map<string, string> for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message CorsConfiguration {
    bool allow_credentials = 1 [json_name = "allow_credentials"];

    repeated string allow_headers = 2 [json_name = "allow_headers"];

    repeated string allow_methods = 3 [json_name = "allow_methods"];

    repeated string allow_origins = 4 [json_name = "allow_origins"];

    repeated string expose_headers = 5 [json_name = "expose_headers"];

    int64 max_age = 6 [json_name = "max_age"];
  }
}

//AwsApigatewayv2ApiMapping version is 0
message AwsApigatewayv2ApiMapping {
  string api_id = 1 [json_name = "api_id"];

  string api_mapping_key = 2 [json_name = "api_mapping_key"];

  string domain_name = 3 [json_name = "domain_name"];

  string id = 4;

  string stage = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsApigatewayv2Authorizer version is 0
message AwsApigatewayv2Authorizer {
  string api_id = 1 [json_name = "api_id"];

  string authorizer_credentials_arn = 2 [json_name = "authorizer_credentials_arn"];

  string authorizer_payload_format_version = 3 [json_name = "authorizer_payload_format_version"];

  int64 authorizer_result_ttl_in_seconds = 4 [json_name = "authorizer_result_ttl_in_seconds"];

  string authorizer_type = 5 [json_name = "authorizer_type"];

  string authorizer_uri = 6 [json_name = "authorizer_uri"];

  bool enable_simple_responses = 7 [json_name = "enable_simple_responses"];

  string id = 8;

  repeated string identity_sources = 9 [json_name = "identity_sources"];

  string name = 10;

  JwtConfiguration jwt_configuration = 11 [json_name = "jwt_configuration"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message JwtConfiguration {
    repeated string audience = 1;

    string issuer = 2;
  }
}

//AwsApigatewayv2Deployment version is 0
message AwsApigatewayv2Deployment {
  string api_id = 1 [json_name = "api_id"];

  bool auto_deployed = 2 [json_name = "auto_deployed"];

  string description = 3;

  string id = 4;

  map<string, string> triggers = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsApigatewayv2DomainName version is 0
message AwsApigatewayv2DomainName {
  string api_mapping_selection_expression = 1 [json_name = "api_mapping_selection_expression"];

  string arn = 2;

  string domain_name = 3 [json_name = "domain_name"];

  string id = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  DomainNameConfiguration domain_name_configuration = 7 [json_name = "domain_name_configuration"];

  MutualTlsAuthentication mutual_tls_authentication = 8 [json_name = "mutual_tls_authentication"];

  repeated Timeouts timeouts = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message DomainNameConfiguration {
    string certificate_arn = 1 [json_name = "certificate_arn"];

    string endpoint_type = 2 [json_name = "endpoint_type"];

    string hosted_zone_id = 3 [json_name = "hosted_zone_id"];

    string security_policy = 4 [json_name = "security_policy"];

    string target_domain_name = 5 [json_name = "target_domain_name"];
  }

  message MutualTlsAuthentication {
    string truststore_uri = 1 [json_name = "truststore_uri"];

    string truststore_version = 2 [json_name = "truststore_version"];
  }

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsApigatewayv2Integration version is 0
message AwsApigatewayv2Integration {
  string api_id = 1 [json_name = "api_id"];

  string connection_id = 2 [json_name = "connection_id"];

  string connection_type = 3 [json_name = "connection_type"];

  string content_handling_strategy = 4 [json_name = "content_handling_strategy"];

  string credentials_arn = 5 [json_name = "credentials_arn"];

  string description = 6;

  string id = 7;

  string integration_method = 8 [json_name = "integration_method"];

  string integration_response_selection_expression = 9 [json_name = "integration_response_selection_expression"];

  string integration_subtype = 10 [json_name = "integration_subtype"];

  string integration_type = 11 [json_name = "integration_type"];

  string integration_uri = 12 [json_name = "integration_uri"];

  string passthrough_behavior = 13 [json_name = "passthrough_behavior"];

  string payload_format_version = 14 [json_name = "payload_format_version"];

  map<string, string> request_parameters = 15 [json_name = "request_parameters"];

  map<string, string> request_templates = 16 [json_name = "request_templates"];

  string template_selection_expression = 17 [json_name = "template_selection_expression"];

  int64 timeout_milliseconds = 18 [json_name = "timeout_milliseconds"];

  repeated ResponseParameters response_parameters = 19 [json_name = "response_parameters"];

  TlsConfig tls_config = 20 [json_name = "tls_config"];

  repeated string depends_on = 21;

  int32 count = 22;

  map<string, string> for_each = 23;

  string provider = 24;

  terraform.meta.Lifecycle lifecycle = 25;

  message ResponseParameters {
    map<string, string> mappings = 1;

    string status_code = 2 [json_name = "status_code"];
  }

  message TlsConfig {
    string server_name_to_verify = 1 [json_name = "server_name_to_verify"];
  }
}

//AwsApigatewayv2IntegrationResponse version is 0
message AwsApigatewayv2IntegrationResponse {
  string api_id = 1 [json_name = "api_id"];

  string content_handling_strategy = 2 [json_name = "content_handling_strategy"];

  string id = 3;

  string integration_id = 4 [json_name = "integration_id"];

  string integration_response_key = 5 [json_name = "integration_response_key"];

  map<string, string> response_templates = 6 [json_name = "response_templates"];

  string template_selection_expression = 7 [json_name = "template_selection_expression"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsApigatewayv2Model version is 0
message AwsApigatewayv2Model {
  string api_id = 1 [json_name = "api_id"];

  string content_type = 2 [json_name = "content_type"];

  string description = 3;

  string id = 4;

  string name = 5;

  string schema = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApigatewayv2Route version is 0
message AwsApigatewayv2Route {
  string api_id = 1 [json_name = "api_id"];

  bool api_key_required = 2 [json_name = "api_key_required"];

  repeated string authorization_scopes = 3 [json_name = "authorization_scopes"];

  string authorization_type = 4 [json_name = "authorization_type"];

  string authorizer_id = 5 [json_name = "authorizer_id"];

  string id = 6;

  string model_selection_expression = 7 [json_name = "model_selection_expression"];

  string operation_name = 8 [json_name = "operation_name"];

  map<string, string> request_models = 9 [json_name = "request_models"];

  string route_key = 10 [json_name = "route_key"];

  string route_response_selection_expression = 11 [json_name = "route_response_selection_expression"];

  string target = 12;

  repeated RequestParameter request_parameter = 13 [json_name = "request_parameter"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message RequestParameter {
    string request_parameter_key = 1 [json_name = "request_parameter_key"];

    bool required = 2;
  }
}

//AwsApigatewayv2RouteResponse version is 0
message AwsApigatewayv2RouteResponse {
  string api_id = 1 [json_name = "api_id"];

  string id = 2;

  string model_selection_expression = 3 [json_name = "model_selection_expression"];

  map<string, string> response_models = 4 [json_name = "response_models"];

  string route_id = 5 [json_name = "route_id"];

  string route_response_key = 6 [json_name = "route_response_key"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsApigatewayv2Stage version is 0
message AwsApigatewayv2Stage {
  string api_id = 1 [json_name = "api_id"];

  string arn = 2;

  bool auto_deploy = 3 [json_name = "auto_deploy"];

  string client_certificate_id = 4 [json_name = "client_certificate_id"];

  string deployment_id = 5 [json_name = "deployment_id"];

  string description = 6;

  string execution_arn = 7 [json_name = "execution_arn"];

  string id = 8;

  string invoke_url = 9 [json_name = "invoke_url"];

  string name = 10;

  map<string, string> stage_variables = 11 [json_name = "stage_variables"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  AccessLogSettings access_log_settings = 14 [json_name = "access_log_settings"];

  DefaultRouteSettings default_route_settings = 15 [json_name = "default_route_settings"];

  repeated RouteSettings route_settings = 16 [json_name = "route_settings"];

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message AccessLogSettings {
    string destination_arn = 1 [json_name = "destination_arn"];

    string format = 2;
  }

  message DefaultRouteSettings {
    bool data_trace_enabled = 1 [json_name = "data_trace_enabled"];

    bool detailed_metrics_enabled = 2 [json_name = "detailed_metrics_enabled"];

    string logging_level = 3 [json_name = "logging_level"];

    int64 throttling_burst_limit = 4 [json_name = "throttling_burst_limit"];

    int64 throttling_rate_limit = 5 [json_name = "throttling_rate_limit"];
  }

  message RouteSettings {
    bool data_trace_enabled = 1 [json_name = "data_trace_enabled"];

    bool detailed_metrics_enabled = 2 [json_name = "detailed_metrics_enabled"];

    string logging_level = 3 [json_name = "logging_level"];

    string route_key = 4 [json_name = "route_key"];

    int64 throttling_burst_limit = 5 [json_name = "throttling_burst_limit"];

    int64 throttling_rate_limit = 6 [json_name = "throttling_rate_limit"];
  }
}

//AwsApigatewayv2VpcLink version is 0
message AwsApigatewayv2VpcLink {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated string security_group_ids = 4 [json_name = "security_group_ids"];

  repeated string subnet_ids = 5 [json_name = "subnet_ids"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsAppCookieStickinessPolicy version is 0
message AwsAppCookieStickinessPolicy {
  string cookie_name = 1 [json_name = "cookie_name"];

  string id = 2;

  int64 lb_port = 3 [json_name = "lb_port"];

  string load_balancer = 4 [json_name = "load_balancer"];

  string name = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsAppautoscalingPolicy version is 0
message AwsAppautoscalingPolicy {
  string arn = 1;

  string id = 2;

  string name = 3;

  string policy_type = 4 [json_name = "policy_type"];

  string resource_id = 5 [json_name = "resource_id"];

  string scalable_dimension = 6 [json_name = "scalable_dimension"];

  string service_namespace = 7 [json_name = "service_namespace"];

  StepScalingPolicyConfiguration step_scaling_policy_configuration = 8 [json_name = "step_scaling_policy_configuration"];

  TargetTrackingScalingPolicyConfiguration target_tracking_scaling_policy_configuration = 9 [json_name = "target_tracking_scaling_policy_configuration"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message StepScalingPolicyConfiguration {
    string adjustment_type = 1 [json_name = "adjustment_type"];

    int64 cooldown = 2;

    string metric_aggregation_type = 3 [json_name = "metric_aggregation_type"];

    int64 min_adjustment_magnitude = 4 [json_name = "min_adjustment_magnitude"];

    repeated StepAdjustment step_adjustment = 5 [json_name = "step_adjustment"];

    message StepAdjustment {
      string metric_interval_lower_bound = 1 [json_name = "metric_interval_lower_bound"];

      string metric_interval_upper_bound = 2 [json_name = "metric_interval_upper_bound"];

      int64 scaling_adjustment = 3 [json_name = "scaling_adjustment"];
    }
  }

  message TargetTrackingScalingPolicyConfiguration {
    bool disable_scale_in = 1 [json_name = "disable_scale_in"];

    int64 scale_in_cooldown = 2 [json_name = "scale_in_cooldown"];

    int64 scale_out_cooldown = 3 [json_name = "scale_out_cooldown"];

    int64 target_value = 4 [json_name = "target_value"];

    CustomizedMetricSpecification customized_metric_specification = 5 [json_name = "customized_metric_specification"];

    PredefinedMetricSpecification predefined_metric_specification = 6 [json_name = "predefined_metric_specification"];

    message CustomizedMetricSpecification {
      string metric_name = 1 [json_name = "metric_name"];

      string namespace = 2;

      string statistic = 3;

      string unit = 4;

      repeated Dimensions dimensions = 5;

      message Dimensions {
        string name = 1;

        string value = 2;
      }
    }

    message PredefinedMetricSpecification {
      string predefined_metric_type = 1 [json_name = "predefined_metric_type"];

      string resource_label = 2 [json_name = "resource_label"];
    }
  }
}

//AwsAppautoscalingScheduledAction version is 0
message AwsAppautoscalingScheduledAction {
  string arn = 1;

  string end_time = 2 [json_name = "end_time"];

  string id = 3;

  string name = 4;

  string resource_id = 5 [json_name = "resource_id"];

  string scalable_dimension = 6 [json_name = "scalable_dimension"];

  string schedule = 7;

  string service_namespace = 8 [json_name = "service_namespace"];

  string start_time = 9 [json_name = "start_time"];

  string timezone = 10;

  ScalableTargetAction scalable_target_action = 11 [json_name = "scalable_target_action"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message ScalableTargetAction {
    string max_capacity = 1 [json_name = "max_capacity"];

    string min_capacity = 2 [json_name = "min_capacity"];
  }
}

//AwsAppautoscalingTarget version is 0
message AwsAppautoscalingTarget {
  string id = 1;

  int64 max_capacity = 2 [json_name = "max_capacity"];

  int64 min_capacity = 3 [json_name = "min_capacity"];

  string resource_id = 4 [json_name = "resource_id"];

  string role_arn = 5 [json_name = "role_arn"];

  string scalable_dimension = 6 [json_name = "scalable_dimension"];

  string service_namespace = 7 [json_name = "service_namespace"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsAppconfigApplication version is 0
message AwsAppconfigApplication {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsAppconfigConfigurationProfile version is 0
message AwsAppconfigConfigurationProfile {
  string application_id = 1 [json_name = "application_id"];

  string arn = 2;

  string configuration_profile_id = 3 [json_name = "configuration_profile_id"];

  string description = 4;

  string id = 5;

  string location_uri = 6 [json_name = "location_uri"];

  string name = 7;

  string retrieval_role_arn = 8 [json_name = "retrieval_role_arn"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated Validator validator = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Validator {
    string content = 1;

    string type = 2;
  }
}

//AwsAppconfigDeployment version is 0
message AwsAppconfigDeployment {
  string application_id = 1 [json_name = "application_id"];

  string arn = 2;

  string configuration_profile_id = 3 [json_name = "configuration_profile_id"];

  string configuration_version = 4 [json_name = "configuration_version"];

  int64 deployment_number = 5 [json_name = "deployment_number"];

  string deployment_strategy_id = 6 [json_name = "deployment_strategy_id"];

  string description = 7;

  string environment_id = 8 [json_name = "environment_id"];

  string id = 9;

  string state = 10;

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsAppconfigDeploymentStrategy version is 0
message AwsAppconfigDeploymentStrategy {
  string arn = 1;

  int64 deployment_duration_in_minutes = 2 [json_name = "deployment_duration_in_minutes"];

  string description = 3;

  int64 final_bake_time_in_minutes = 4 [json_name = "final_bake_time_in_minutes"];

  int64 growth_factor = 5 [json_name = "growth_factor"];

  string growth_type = 6 [json_name = "growth_type"];

  string id = 7;

  string name = 8;

  string replicate_to = 9 [json_name = "replicate_to"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsAppconfigEnvironment version is 0
message AwsAppconfigEnvironment {
  string application_id = 1 [json_name = "application_id"];

  string arn = 2;

  string description = 3;

  string environment_id = 4 [json_name = "environment_id"];

  string id = 5;

  string name = 6;

  string state = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated Monitor monitor = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Monitor {
    string alarm_arn = 1 [json_name = "alarm_arn"];

    string alarm_role_arn = 2 [json_name = "alarm_role_arn"];
  }
}

//AwsAppconfigHostedConfigurationVersion version is 0
message AwsAppconfigHostedConfigurationVersion {
  string application_id = 1 [json_name = "application_id"];

  string arn = 2;

  string configuration_profile_id = 3 [json_name = "configuration_profile_id"];

  string content = 4;

  string content_type = 5 [json_name = "content_type"];

  string description = 6;

  string id = 7;

  int64 version_number = 8 [json_name = "version_number"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsAppmeshGatewayRoute version is 0
message AwsAppmeshGatewayRoute {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_name = 5 [json_name = "mesh_name"];

  string mesh_owner = 6 [json_name = "mesh_owner"];

  string name = 7;

  string resource_owner = 8 [json_name = "resource_owner"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string virtual_gateway_name = 11 [json_name = "virtual_gateway_name"];

  Spec spec = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Spec {
    GrpcRoute grpc_route = 1 [json_name = "grpc_route"];

    Http2Route http2_route = 2 [json_name = "http2_route"];

    HttpRoute http_route = 3 [json_name = "http_route"];

    message GrpcRoute {
      Action action = 1;

      Match match = 2;

      message Action {
        Target target = 1;

        message Target {
          VirtualService virtual_service = 1 [json_name = "virtual_service"];

          message VirtualService {
            string virtual_service_name = 1 [json_name = "virtual_service_name"];
          }
        }
      }

      message Match {
        string service_name = 1 [json_name = "service_name"];
      }
    }

    message Http2Route {
      Action action = 1;

      Match match = 2;

      message Action {
        Target target = 1;

        message Target {
          VirtualService virtual_service = 1 [json_name = "virtual_service"];

          message VirtualService {
            string virtual_service_name = 1 [json_name = "virtual_service_name"];
          }
        }
      }

      message Match {
        string prefix = 1;
      }
    }

    message HttpRoute {
      Action action = 1;

      Match match = 2;

      message Action {
        Target target = 1;

        message Target {
          VirtualService virtual_service = 1 [json_name = "virtual_service"];

          message VirtualService {
            string virtual_service_name = 1 [json_name = "virtual_service_name"];
          }
        }
      }

      message Match {
        string prefix = 1;
      }
    }
  }
}

//AwsAppmeshMesh version is 0
message AwsAppmeshMesh {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_owner = 5 [json_name = "mesh_owner"];

  string name = 6;

  string resource_owner = 7 [json_name = "resource_owner"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  Spec spec = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Spec {
    EgressFilter egress_filter = 1 [json_name = "egress_filter"];

    message EgressFilter {
      string type = 1;
    }
  }
}

//AwsAppmeshRoute version is 0
message AwsAppmeshRoute {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_name = 5 [json_name = "mesh_name"];

  string mesh_owner = 6 [json_name = "mesh_owner"];

  string name = 7;

  string resource_owner = 8 [json_name = "resource_owner"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string virtual_router_name = 11 [json_name = "virtual_router_name"];

  Spec spec = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Spec {
    int64 priority = 1;

    GrpcRoute grpc_route = 2 [json_name = "grpc_route"];

    Http2Route http2_route = 3 [json_name = "http2_route"];

    HttpRoute http_route = 4 [json_name = "http_route"];

    TcpRoute tcp_route = 5 [json_name = "tcp_route"];

    message GrpcRoute {
      Action action = 1;

      Match match = 2;

      RetryPolicy retry_policy = 3 [json_name = "retry_policy"];

      Timeout timeout = 4;

      message Action {
        repeated WeightedTarget weighted_target = 1 [json_name = "weighted_target"];

        message WeightedTarget {
          string virtual_node = 1 [json_name = "virtual_node"];

          int64 weight = 2;
        }
      }

      message Match {
        string method_name = 1 [json_name = "method_name"];

        string prefix = 2;

        string service_name = 3 [json_name = "service_name"];

        repeated Metadata metadata = 4;

        message Metadata {
          bool invert = 1;

          string name = 2;

          Match match = 3;

          message Match {
            string exact = 1;

            string prefix = 2;

            string regex = 3;

            string suffix = 4;

            Range range = 5;

            message Range {
              int64 end = 1;

              int64 start = 2;
            }
          }
        }
      }

      message RetryPolicy {
        repeated string grpc_retry_events = 1 [json_name = "grpc_retry_events"];

        repeated string http_retry_events = 2 [json_name = "http_retry_events"];

        int64 max_retries = 3 [json_name = "max_retries"];

        repeated string tcp_retry_events = 4 [json_name = "tcp_retry_events"];

        PerRetryTimeout per_retry_timeout = 5 [json_name = "per_retry_timeout"];

        message PerRetryTimeout {
          string unit = 1;

          int64 value = 2;
        }
      }

      message Timeout {
        Idle idle = 1;

        PerRequest per_request = 2 [json_name = "per_request"];

        message Idle {
          string unit = 1;

          int64 value = 2;
        }

        message PerRequest {
          string unit = 1;

          int64 value = 2;
        }
      }
    }

    message Http2Route {
      Action action = 1;

      Match match = 2;

      RetryPolicy retry_policy = 3 [json_name = "retry_policy"];

      Timeout timeout = 4;

      message Action {
        repeated WeightedTarget weighted_target = 1 [json_name = "weighted_target"];

        message WeightedTarget {
          string virtual_node = 1 [json_name = "virtual_node"];

          int64 weight = 2;
        }
      }

      message Match {
        string method = 1;

        string prefix = 2;

        string scheme = 3;

        repeated Header header = 4;

        message Header {
          bool invert = 1;

          string name = 2;

          Match match = 3;

          message Match {
            string exact = 1;

            string prefix = 2;

            string regex = 3;

            string suffix = 4;

            Range range = 5;

            message Range {
              int64 end = 1;

              int64 start = 2;
            }
          }
        }
      }

      message RetryPolicy {
        repeated string http_retry_events = 1 [json_name = "http_retry_events"];

        int64 max_retries = 2 [json_name = "max_retries"];

        repeated string tcp_retry_events = 3 [json_name = "tcp_retry_events"];

        PerRetryTimeout per_retry_timeout = 4 [json_name = "per_retry_timeout"];

        message PerRetryTimeout {
          string unit = 1;

          int64 value = 2;
        }
      }

      message Timeout {
        Idle idle = 1;

        PerRequest per_request = 2 [json_name = "per_request"];

        message Idle {
          string unit = 1;

          int64 value = 2;
        }

        message PerRequest {
          string unit = 1;

          int64 value = 2;
        }
      }
    }

    message HttpRoute {
      Action action = 1;

      Match match = 2;

      RetryPolicy retry_policy = 3 [json_name = "retry_policy"];

      Timeout timeout = 4;

      message Action {
        repeated WeightedTarget weighted_target = 1 [json_name = "weighted_target"];

        message WeightedTarget {
          string virtual_node = 1 [json_name = "virtual_node"];

          int64 weight = 2;
        }
      }

      message Match {
        string method = 1;

        string prefix = 2;

        string scheme = 3;

        repeated Header header = 4;

        message Header {
          bool invert = 1;

          string name = 2;

          Match match = 3;

          message Match {
            string exact = 1;

            string prefix = 2;

            string regex = 3;

            string suffix = 4;

            Range range = 5;

            message Range {
              int64 end = 1;

              int64 start = 2;
            }
          }
        }
      }

      message RetryPolicy {
        repeated string http_retry_events = 1 [json_name = "http_retry_events"];

        int64 max_retries = 2 [json_name = "max_retries"];

        repeated string tcp_retry_events = 3 [json_name = "tcp_retry_events"];

        PerRetryTimeout per_retry_timeout = 4 [json_name = "per_retry_timeout"];

        message PerRetryTimeout {
          string unit = 1;

          int64 value = 2;
        }
      }

      message Timeout {
        Idle idle = 1;

        PerRequest per_request = 2 [json_name = "per_request"];

        message Idle {
          string unit = 1;

          int64 value = 2;
        }

        message PerRequest {
          string unit = 1;

          int64 value = 2;
        }
      }
    }

    message TcpRoute {
      Action action = 1;

      Timeout timeout = 2;

      message Action {
        repeated WeightedTarget weighted_target = 1 [json_name = "weighted_target"];

        message WeightedTarget {
          string virtual_node = 1 [json_name = "virtual_node"];

          int64 weight = 2;
        }
      }

      message Timeout {
        Idle idle = 1;

        message Idle {
          string unit = 1;

          int64 value = 2;
        }
      }
    }
  }
}

//AwsAppmeshVirtualGateway version is 0
message AwsAppmeshVirtualGateway {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_name = 5 [json_name = "mesh_name"];

  string mesh_owner = 6 [json_name = "mesh_owner"];

  string name = 7;

  string resource_owner = 8 [json_name = "resource_owner"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  Spec spec = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Spec {
    BackendDefaults backend_defaults = 1 [json_name = "backend_defaults"];

    Listener listener = 2;

    Logging logging = 3;

    message BackendDefaults {
      ClientPolicy client_policy = 1 [json_name = "client_policy"];

      message ClientPolicy {
        Tls tls = 1;

        message Tls {
          bool enforce = 1;

          repeated int64 ports = 2;

          Certificate certificate = 3;

          Validation validation = 4;

          message Certificate {
            File file = 1;

            Sds sds = 2;

            message File {
              string certificate_chain = 1 [json_name = "certificate_chain"];

              string private_key = 2 [json_name = "private_key"];
            }

            message Sds {
              string secret_name = 1 [json_name = "secret_name"];
            }
          }

          message Validation {
            SubjectAlternativeNames subject_alternative_names = 1 [json_name = "subject_alternative_names"];

            Trust trust = 2;

            message SubjectAlternativeNames {
              Match match = 1;

              message Match {
                repeated string exact = 1;
              }
            }

            message Trust {
              Acm acm = 1;

              File file = 2;

              Sds sds = 3;

              message Acm {
                repeated string certificate_authority_arns = 1 [json_name = "certificate_authority_arns"];
              }

              message File {
                string certificate_chain = 1 [json_name = "certificate_chain"];
              }

              message Sds {
                string secret_name = 1 [json_name = "secret_name"];
              }
            }
          }
        }
      }
    }

    message Listener {
      ConnectionPool connection_pool = 1 [json_name = "connection_pool"];

      HealthCheck health_check = 2 [json_name = "health_check"];

      PortMapping port_mapping = 3 [json_name = "port_mapping"];

      Tls tls = 4;

      message ConnectionPool {
        Grpc grpc = 1;

        Http http = 2;

        Http2 http2 = 3;

        message Grpc {
          int64 max_requests = 1 [json_name = "max_requests"];
        }

        message Http {
          int64 max_connections = 1 [json_name = "max_connections"];

          int64 max_pending_requests = 2 [json_name = "max_pending_requests"];
        }

        message Http2 {
          int64 max_requests = 1 [json_name = "max_requests"];
        }
      }

      message HealthCheck {
        int64 healthy_threshold = 1 [json_name = "healthy_threshold"];

        int64 interval_millis = 2 [json_name = "interval_millis"];

        string path = 3;

        int64 port = 4;

        string protocol = 5;

        int64 timeout_millis = 6 [json_name = "timeout_millis"];

        int64 unhealthy_threshold = 7 [json_name = "unhealthy_threshold"];
      }

      message PortMapping {
        int64 port = 1;

        string protocol = 2;
      }

      message Tls {
        string mode = 1;

        Certificate certificate = 2;

        Validation validation = 3;

        message Certificate {
          Acm acm = 1;

          File file = 2;

          Sds sds = 3;

          message Acm {
            string certificate_arn = 1 [json_name = "certificate_arn"];
          }

          message File {
            string certificate_chain = 1 [json_name = "certificate_chain"];

            string private_key = 2 [json_name = "private_key"];
          }

          message Sds {
            string secret_name = 1 [json_name = "secret_name"];
          }
        }

        message Validation {
          SubjectAlternativeNames subject_alternative_names = 1 [json_name = "subject_alternative_names"];

          Trust trust = 2;

          message SubjectAlternativeNames {
            Match match = 1;

            message Match {
              repeated string exact = 1;
            }
          }

          message Trust {
            File file = 1;

            Sds sds = 2;

            message File {
              string certificate_chain = 1 [json_name = "certificate_chain"];
            }

            message Sds {
              string secret_name = 1 [json_name = "secret_name"];
            }
          }
        }
      }
    }

    message Logging {
      AccessLog access_log = 1 [json_name = "access_log"];

      message AccessLog {
        File file = 1;

        message File {
          string path = 1;
        }
      }
    }
  }
}

//AwsAppmeshVirtualNode version is 1
message AwsAppmeshVirtualNode {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_name = 5 [json_name = "mesh_name"];

  string mesh_owner = 6 [json_name = "mesh_owner"];

  string name = 7;

  string resource_owner = 8 [json_name = "resource_owner"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  Spec spec = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Spec {
    repeated Backend backend = 1;

    BackendDefaults backend_defaults = 2 [json_name = "backend_defaults"];

    Listener listener = 3;

    Logging logging = 4;

    ServiceDiscovery service_discovery = 5 [json_name = "service_discovery"];

    message Backend {
      VirtualService virtual_service = 1 [json_name = "virtual_service"];

      message VirtualService {
        string virtual_service_name = 1 [json_name = "virtual_service_name"];

        ClientPolicy client_policy = 2 [json_name = "client_policy"];

        message ClientPolicy {
          Tls tls = 1;

          message Tls {
            bool enforce = 1;

            repeated int64 ports = 2;

            Certificate certificate = 3;

            Validation validation = 4;

            message Certificate {
              File file = 1;

              Sds sds = 2;

              message File {
                string certificate_chain = 1 [json_name = "certificate_chain"];

                string private_key = 2 [json_name = "private_key"];
              }

              message Sds {
                string secret_name = 1 [json_name = "secret_name"];
              }
            }

            message Validation {
              SubjectAlternativeNames subject_alternative_names = 1 [json_name = "subject_alternative_names"];

              Trust trust = 2;

              message SubjectAlternativeNames {
                Match match = 1;

                message Match {
                  repeated string exact = 1;
                }
              }

              message Trust {
                Acm acm = 1;

                File file = 2;

                Sds sds = 3;

                message Acm {
                  repeated string certificate_authority_arns = 1 [json_name = "certificate_authority_arns"];
                }

                message File {
                  string certificate_chain = 1 [json_name = "certificate_chain"];
                }

                message Sds {
                  string secret_name = 1 [json_name = "secret_name"];
                }
              }
            }
          }
        }
      }
    }

    message BackendDefaults {
      ClientPolicy client_policy = 1 [json_name = "client_policy"];

      message ClientPolicy {
        Tls tls = 1;

        message Tls {
          bool enforce = 1;

          repeated int64 ports = 2;

          Certificate certificate = 3;

          Validation validation = 4;

          message Certificate {
            File file = 1;

            Sds sds = 2;

            message File {
              string certificate_chain = 1 [json_name = "certificate_chain"];

              string private_key = 2 [json_name = "private_key"];
            }

            message Sds {
              string secret_name = 1 [json_name = "secret_name"];
            }
          }

          message Validation {
            SubjectAlternativeNames subject_alternative_names = 1 [json_name = "subject_alternative_names"];

            Trust trust = 2;

            message SubjectAlternativeNames {
              Match match = 1;

              message Match {
                repeated string exact = 1;
              }
            }

            message Trust {
              Acm acm = 1;

              File file = 2;

              Sds sds = 3;

              message Acm {
                repeated string certificate_authority_arns = 1 [json_name = "certificate_authority_arns"];
              }

              message File {
                string certificate_chain = 1 [json_name = "certificate_chain"];
              }

              message Sds {
                string secret_name = 1 [json_name = "secret_name"];
              }
            }
          }
        }
      }
    }

    message Listener {
      ConnectionPool connection_pool = 1 [json_name = "connection_pool"];

      HealthCheck health_check = 2 [json_name = "health_check"];

      OutlierDetection outlier_detection = 3 [json_name = "outlier_detection"];

      PortMapping port_mapping = 4 [json_name = "port_mapping"];

      Timeout timeout = 5;

      Tls tls = 6;

      message ConnectionPool {
        Grpc grpc = 1;

        Http http = 2;

        Http2 http2 = 3;

        Tcp tcp = 4;

        message Grpc {
          int64 max_requests = 1 [json_name = "max_requests"];
        }

        message Http {
          int64 max_connections = 1 [json_name = "max_connections"];

          int64 max_pending_requests = 2 [json_name = "max_pending_requests"];
        }

        message Http2 {
          int64 max_requests = 1 [json_name = "max_requests"];
        }

        message Tcp {
          int64 max_connections = 1 [json_name = "max_connections"];
        }
      }

      message HealthCheck {
        int64 healthy_threshold = 1 [json_name = "healthy_threshold"];

        int64 interval_millis = 2 [json_name = "interval_millis"];

        string path = 3;

        int64 port = 4;

        string protocol = 5;

        int64 timeout_millis = 6 [json_name = "timeout_millis"];

        int64 unhealthy_threshold = 7 [json_name = "unhealthy_threshold"];
      }

      message OutlierDetection {
        int64 max_ejection_percent = 1 [json_name = "max_ejection_percent"];

        int64 max_server_errors = 2 [json_name = "max_server_errors"];

        BaseEjectionDuration base_ejection_duration = 3 [json_name = "base_ejection_duration"];

        Interval interval = 4;

        message BaseEjectionDuration {
          string unit = 1;

          int64 value = 2;
        }

        message Interval {
          string unit = 1;

          int64 value = 2;
        }
      }

      message PortMapping {
        int64 port = 1;

        string protocol = 2;
      }

      message Timeout {
        Grpc grpc = 1;

        Http http = 2;

        Http2 http2 = 3;

        Tcp tcp = 4;

        message Grpc {
          Idle idle = 1;

          PerRequest per_request = 2 [json_name = "per_request"];

          message Idle {
            string unit = 1;

            int64 value = 2;
          }

          message PerRequest {
            string unit = 1;

            int64 value = 2;
          }
        }

        message Http {
          Idle idle = 1;

          PerRequest per_request = 2 [json_name = "per_request"];

          message Idle {
            string unit = 1;

            int64 value = 2;
          }

          message PerRequest {
            string unit = 1;

            int64 value = 2;
          }
        }

        message Http2 {
          Idle idle = 1;

          PerRequest per_request = 2 [json_name = "per_request"];

          message Idle {
            string unit = 1;

            int64 value = 2;
          }

          message PerRequest {
            string unit = 1;

            int64 value = 2;
          }
        }

        message Tcp {
          Idle idle = 1;

          message Idle {
            string unit = 1;

            int64 value = 2;
          }
        }
      }

      message Tls {
        string mode = 1;

        Certificate certificate = 2;

        Validation validation = 3;

        message Certificate {
          Acm acm = 1;

          File file = 2;

          Sds sds = 3;

          message Acm {
            string certificate_arn = 1 [json_name = "certificate_arn"];
          }

          message File {
            string certificate_chain = 1 [json_name = "certificate_chain"];

            string private_key = 2 [json_name = "private_key"];
          }

          message Sds {
            string secret_name = 1 [json_name = "secret_name"];
          }
        }

        message Validation {
          SubjectAlternativeNames subject_alternative_names = 1 [json_name = "subject_alternative_names"];

          Trust trust = 2;

          message SubjectAlternativeNames {
            Match match = 1;

            message Match {
              repeated string exact = 1;
            }
          }

          message Trust {
            File file = 1;

            Sds sds = 2;

            message File {
              string certificate_chain = 1 [json_name = "certificate_chain"];
            }

            message Sds {
              string secret_name = 1 [json_name = "secret_name"];
            }
          }
        }
      }
    }

    message Logging {
      AccessLog access_log = 1 [json_name = "access_log"];

      message AccessLog {
        File file = 1;

        message File {
          string path = 1;
        }
      }
    }

    message ServiceDiscovery {
      AwsCloudMap aws_cloud_map = 1 [json_name = "aws_cloud_map"];

      Dns dns = 2;

      message AwsCloudMap {
        map<string, string> attributes = 1;

        string namespace_name = 2 [json_name = "namespace_name"];

        string service_name = 3 [json_name = "service_name"];
      }

      message Dns {
        string hostname = 1;
      }
    }
  }
}

//AwsAppmeshVirtualRouter version is 1
message AwsAppmeshVirtualRouter {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_name = 5 [json_name = "mesh_name"];

  string mesh_owner = 6 [json_name = "mesh_owner"];

  string name = 7;

  string resource_owner = 8 [json_name = "resource_owner"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  Spec spec = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Spec {
    Listener listener = 1;

    message Listener {
      PortMapping port_mapping = 1 [json_name = "port_mapping"];

      message PortMapping {
        int64 port = 1;

        string protocol = 2;
      }
    }
  }
}

//AwsAppmeshVirtualService version is 0
message AwsAppmeshVirtualService {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string id = 3;

  string last_updated_date = 4 [json_name = "last_updated_date"];

  string mesh_name = 5 [json_name = "mesh_name"];

  string mesh_owner = 6 [json_name = "mesh_owner"];

  string name = 7;

  string resource_owner = 8 [json_name = "resource_owner"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  Spec spec = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Spec {
    Provider provider = 1;

    message Provider {
      VirtualNode virtual_node = 1 [json_name = "virtual_node"];

      VirtualRouter virtual_router = 2 [json_name = "virtual_router"];

      message VirtualNode {
        string virtual_node_name = 1 [json_name = "virtual_node_name"];
      }

      message VirtualRouter {
        string virtual_router_name = 1 [json_name = "virtual_router_name"];
      }
    }
  }
}

//AwsApprunnerAutoScalingConfigurationVersion version is 0
message AwsApprunnerAutoScalingConfigurationVersion {
  string arn = 1;

  string auto_scaling_configuration_name = 2 [json_name = "auto_scaling_configuration_name"];

  int64 auto_scaling_configuration_revision = 3 [json_name = "auto_scaling_configuration_revision"];

  string id = 4;

  bool latest = 5;

  int64 max_concurrency = 6 [json_name = "max_concurrency"];

  int64 max_size = 7 [json_name = "max_size"];

  int64 min_size = 8 [json_name = "min_size"];

  string status = 9;

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsApprunnerConnection version is 0
message AwsApprunnerConnection {
  string arn = 1;

  string connection_name = 2 [json_name = "connection_name"];

  string id = 3;

  string provider_type = 4 [json_name = "provider_type"];

  string status = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsApprunnerCustomDomainAssociation version is 0
message AwsApprunnerCustomDomainAssociation {
  repeated CertificateValidationRecords certificate_validation_records = 1 [json_name = "certificate_validation_records"];

  string dns_target = 2 [json_name = "dns_target"];

  string domain_name = 3 [json_name = "domain_name"];

  bool enable_www_subdomain = 4 [json_name = "enable_www_subdomain"];

  string id = 5;

  string service_arn = 6 [json_name = "service_arn"];

  string status = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message CertificateValidationRecords {
    //name: string
    string name = 1;

    //status: string
    string status = 2;

    //type: string
    string type = 3;

    //value: string
    string value = 4;
  }
}

//AwsApprunnerService version is 0
message AwsApprunnerService {
  string arn = 1;

  string auto_scaling_configuration_arn = 2 [json_name = "auto_scaling_configuration_arn"];

  string id = 3;

  string service_id = 4 [json_name = "service_id"];

  string service_name = 5 [json_name = "service_name"];

  string service_url = 6 [json_name = "service_url"];

  string status = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  EncryptionConfiguration encryption_configuration = 10 [json_name = "encryption_configuration"];

  HealthCheckConfiguration health_check_configuration = 11 [json_name = "health_check_configuration"];

  InstanceConfiguration instance_configuration = 12 [json_name = "instance_configuration"];

  SourceConfiguration source_configuration = 13 [json_name = "source_configuration"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message EncryptionConfiguration {
    string kms_key = 1 [json_name = "kms_key"];
  }

  message HealthCheckConfiguration {
    int64 healthy_threshold = 1 [json_name = "healthy_threshold"];

    int64 interval = 2;

    string path = 3;

    string protocol = 4;

    int64 timeout = 5;

    int64 unhealthy_threshold = 6 [json_name = "unhealthy_threshold"];
  }

  message InstanceConfiguration {
    string cpu = 1;

    string instance_role_arn = 2 [json_name = "instance_role_arn"];

    string memory = 3;
  }

  message SourceConfiguration {
    bool auto_deployments_enabled = 1 [json_name = "auto_deployments_enabled"];

    AuthenticationConfiguration authentication_configuration = 2 [json_name = "authentication_configuration"];

    CodeRepository code_repository = 3 [json_name = "code_repository"];

    ImageRepository image_repository = 4 [json_name = "image_repository"];

    message AuthenticationConfiguration {
      string access_role_arn = 1 [json_name = "access_role_arn"];

      string connection_arn = 2 [json_name = "connection_arn"];
    }

    message CodeRepository {
      string repository_url = 1 [json_name = "repository_url"];

      CodeConfiguration code_configuration = 2 [json_name = "code_configuration"];

      SourceCodeVersion source_code_version = 3 [json_name = "source_code_version"];

      message CodeConfiguration {
        string configuration_source = 1 [json_name = "configuration_source"];

        CodeConfigurationValues code_configuration_values = 2 [json_name = "code_configuration_values"];

        message CodeConfigurationValues {
          string build_command = 1 [json_name = "build_command"];

          string port = 2;

          string runtime = 3;

          map<string, string> runtime_environment_variables = 4 [json_name = "runtime_environment_variables"];

          string start_command = 5 [json_name = "start_command"];
        }
      }

      message SourceCodeVersion {
        string type = 1;

        string value = 2;
      }
    }

    message ImageRepository {
      string image_identifier = 1 [json_name = "image_identifier"];

      string image_repository_type = 2 [json_name = "image_repository_type"];

      ImageConfiguration image_configuration = 3 [json_name = "image_configuration"];

      message ImageConfiguration {
        string port = 1;

        map<string, string> runtime_environment_variables = 2 [json_name = "runtime_environment_variables"];

        string start_command = 3 [json_name = "start_command"];
      }
    }
  }
}

//AwsAppstreamDirectoryConfig version is 0
message AwsAppstreamDirectoryConfig {
  string created_time = 1 [json_name = "created_time"];

  string directory_name = 2 [json_name = "directory_name"];

  string id = 3;

  repeated string organizational_unit_distinguished_names = 4 [json_name = "organizational_unit_distinguished_names"];

  ServiceAccountCredentials service_account_credentials = 5 [json_name = "service_account_credentials"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message ServiceAccountCredentials {
    string account_name = 1 [json_name = "account_name"];

    string account_password = 2 [json_name = "account_password"];
  }
}

//AwsAppstreamFleet version is 0
message AwsAppstreamFleet {
  string arn = 1;

  string created_time = 2 [json_name = "created_time"];

  string description = 3;

  int64 disconnect_timeout_in_seconds = 4 [json_name = "disconnect_timeout_in_seconds"];

  string display_name = 5 [json_name = "display_name"];

  bool enable_default_internet_access = 6 [json_name = "enable_default_internet_access"];

  string fleet_type = 7 [json_name = "fleet_type"];

  string iam_role_arn = 8 [json_name = "iam_role_arn"];

  string id = 9;

  int64 idle_disconnect_timeout_in_seconds = 10 [json_name = "idle_disconnect_timeout_in_seconds"];

  string image_arn = 11 [json_name = "image_arn"];

  string image_name = 12 [json_name = "image_name"];

  string instance_type = 13 [json_name = "instance_type"];

  int64 max_user_duration_in_seconds = 14 [json_name = "max_user_duration_in_seconds"];

  string name = 15;

  string state = 16;

  string stream_view = 17 [json_name = "stream_view"];

  map<string, string> tags = 18;

  map<string, string> tags_all = 19 [json_name = "tags_all"];

  ComputeCapacity compute_capacity = 20 [json_name = "compute_capacity"];

  DomainJoinInfo domain_join_info = 21 [json_name = "domain_join_info"];

  VpcConfig vpc_config = 22 [json_name = "vpc_config"];

  repeated string depends_on = 23;

  int32 count = 24;

  map<string, string> for_each = 25;

  string provider = 26;

  terraform.meta.Lifecycle lifecycle = 27;

  message ComputeCapacity {
    int64 available = 1;

    int64 desired_instances = 2 [json_name = "desired_instances"];

    int64 in_use = 3 [json_name = "in_use"];

    int64 running = 4;
  }

  message DomainJoinInfo {
    string directory_name = 1 [json_name = "directory_name"];

    string organizational_unit_distinguished_name = 2 [json_name = "organizational_unit_distinguished_name"];
  }

  message VpcConfig {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnet_ids = 2 [json_name = "subnet_ids"];
  }
}

//AwsAppstreamFleetStackAssociation version is 0
message AwsAppstreamFleetStackAssociation {
  string fleet_name = 1 [json_name = "fleet_name"];

  string id = 2;

  string stack_name = 3 [json_name = "stack_name"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsAppstreamImageBuilder version is 0
message AwsAppstreamImageBuilder {
  string appstream_agent_version = 1 [json_name = "appstream_agent_version"];

  string arn = 2;

  string created_time = 3 [json_name = "created_time"];

  string description = 4;

  string display_name = 5 [json_name = "display_name"];

  bool enable_default_internet_access = 6 [json_name = "enable_default_internet_access"];

  string iam_role_arn = 7 [json_name = "iam_role_arn"];

  string id = 8;

  string image_arn = 9 [json_name = "image_arn"];

  string image_name = 10 [json_name = "image_name"];

  string instance_type = 11 [json_name = "instance_type"];

  string name = 12;

  string state = 13;

  map<string, string> tags = 14;

  map<string, string> tags_all = 15 [json_name = "tags_all"];

  repeated AccessEndpoint access_endpoint = 16 [json_name = "access_endpoint"];

  DomainJoinInfo domain_join_info = 17 [json_name = "domain_join_info"];

  VpcConfig vpc_config = 18 [json_name = "vpc_config"];

  repeated string depends_on = 19;

  int32 count = 20;

  map<string, string> for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message AccessEndpoint {
    string endpoint_type = 1 [json_name = "endpoint_type"];

    string vpce_id = 2 [json_name = "vpce_id"];
  }

  message DomainJoinInfo {
    string directory_name = 1 [json_name = "directory_name"];

    string organizational_unit_distinguished_name = 2 [json_name = "organizational_unit_distinguished_name"];
  }

  message VpcConfig {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnet_ids = 2 [json_name = "subnet_ids"];
  }
}

//AwsAppstreamStack version is 0
message AwsAppstreamStack {
  string arn = 1;

  string created_time = 2 [json_name = "created_time"];

  string description = 3;

  string display_name = 4 [json_name = "display_name"];

  repeated string embed_host_domains = 5 [json_name = "embed_host_domains"];

  string feedback_url = 6 [json_name = "feedback_url"];

  string id = 7;

  string name = 8;

  string redirect_url = 9 [json_name = "redirect_url"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  repeated AccessEndpoints access_endpoints = 12 [json_name = "access_endpoints"];

  ApplicationSettings application_settings = 13 [json_name = "application_settings"];

  repeated StorageConnectors storage_connectors = 14 [json_name = "storage_connectors"];

  repeated UserSettings user_settings = 15 [json_name = "user_settings"];

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message AccessEndpoints {
    string endpoint_type = 1 [json_name = "endpoint_type"];

    string vpce_id = 2 [json_name = "vpce_id"];
  }

  message ApplicationSettings {
    bool enabled = 1;

    string settings_group = 2 [json_name = "settings_group"];
  }

  message StorageConnectors {
    string connector_type = 1 [json_name = "connector_type"];

    repeated string domains = 2;

    string resource_identifier = 3 [json_name = "resource_identifier"];
  }

  message UserSettings {
    string action = 1;

    string permission = 2;
  }
}

//AwsAppstreamUser version is 0
message AwsAppstreamUser {
  string arn = 1;

  string authentication_type = 2 [json_name = "authentication_type"];

  string created_time = 3 [json_name = "created_time"];

  bool enabled = 4;

  string first_name = 5 [json_name = "first_name"];

  string id = 6;

  string last_name = 7 [json_name = "last_name"];

  bool send_email_notification = 8 [json_name = "send_email_notification"];

  string user_name = 9 [json_name = "user_name"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsAppstreamUserStackAssociation version is 0
message AwsAppstreamUserStackAssociation {
  string authentication_type = 1 [json_name = "authentication_type"];

  string id = 2;

  bool send_email_notification = 3 [json_name = "send_email_notification"];

  string stack_name = 4 [json_name = "stack_name"];

  string user_name = 5 [json_name = "user_name"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsAppsyncApiKey version is 0
message AwsAppsyncApiKey {
  string api_id = 1 [json_name = "api_id"];

  string description = 2;

  string expires = 3;

  string id = 4;

  string key = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsAppsyncDatasource version is 0
message AwsAppsyncDatasource {
  string api_id = 1 [json_name = "api_id"];

  string arn = 2;

  string description = 3;

  string id = 4;

  string name = 5;

  string service_role_arn = 6 [json_name = "service_role_arn"];

  string type = 7;

  DynamodbConfig dynamodb_config = 8 [json_name = "dynamodb_config"];

  ElasticsearchConfig elasticsearch_config = 9 [json_name = "elasticsearch_config"];

  HttpConfig http_config = 10 [json_name = "http_config"];

  LambdaConfig lambda_config = 11 [json_name = "lambda_config"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message DynamodbConfig {
    string region = 1;

    string table_name = 2 [json_name = "table_name"];

    bool use_caller_credentials = 3 [json_name = "use_caller_credentials"];
  }

  message ElasticsearchConfig {
    string endpoint = 1;

    string region = 2;
  }

  message HttpConfig {
    string endpoint = 1;
  }

  message LambdaConfig {
    string function_arn = 1 [json_name = "function_arn"];
  }
}

//AwsAppsyncFunction version is 0
message AwsAppsyncFunction {
  string api_id = 1 [json_name = "api_id"];

  string arn = 2;

  string data_source = 3 [json_name = "data_source"];

  string description = 4;

  string function_id = 5 [json_name = "function_id"];

  string function_version = 6 [json_name = "function_version"];

  string id = 7;

  string name = 8;

  string request_mapping_template = 9 [json_name = "request_mapping_template"];

  string response_mapping_template = 10 [json_name = "response_mapping_template"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsAppsyncGraphqlApi version is 0
message AwsAppsyncGraphqlApi {
  string arn = 1;

  string authentication_type = 2 [json_name = "authentication_type"];

  string id = 3;

  string name = 4;

  string schema = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  map<string, string> uris = 8;

  bool xray_enabled = 9 [json_name = "xray_enabled"];

  repeated AdditionalAuthenticationProvider additional_authentication_provider = 10 [json_name = "additional_authentication_provider"];

  LambdaAuthorizerConfig lambda_authorizer_config = 11 [json_name = "lambda_authorizer_config"];

  LogConfig log_config = 12 [json_name = "log_config"];

  OpenidConnectConfig openid_connect_config = 13 [json_name = "openid_connect_config"];

  UserPoolConfig user_pool_config = 14 [json_name = "user_pool_config"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message AdditionalAuthenticationProvider {
    string authentication_type = 1 [json_name = "authentication_type"];

    LambdaAuthorizerConfig lambda_authorizer_config = 2 [json_name = "lambda_authorizer_config"];

    OpenidConnectConfig openid_connect_config = 3 [json_name = "openid_connect_config"];

    UserPoolConfig user_pool_config = 4 [json_name = "user_pool_config"];

    message LambdaAuthorizerConfig {
      int64 authorizer_result_ttl_in_seconds = 1 [json_name = "authorizer_result_ttl_in_seconds"];

      string authorizer_uri = 2 [json_name = "authorizer_uri"];

      string identity_validation_expression = 3 [json_name = "identity_validation_expression"];
    }

    message OpenidConnectConfig {
      int64 auth_ttl = 1 [json_name = "auth_ttl"];

      string client_id = 2 [json_name = "client_id"];

      int64 iat_ttl = 3 [json_name = "iat_ttl"];

      string issuer = 4;
    }

    message UserPoolConfig {
      string app_id_client_regex = 1 [json_name = "app_id_client_regex"];

      string aws_region = 2 [json_name = "aws_region"];

      string user_pool_id = 3 [json_name = "user_pool_id"];
    }
  }

  message LambdaAuthorizerConfig {
    int64 authorizer_result_ttl_in_seconds = 1 [json_name = "authorizer_result_ttl_in_seconds"];

    string authorizer_uri = 2 [json_name = "authorizer_uri"];

    string identity_validation_expression = 3 [json_name = "identity_validation_expression"];
  }

  message LogConfig {
    string cloudwatch_logs_role_arn = 1 [json_name = "cloudwatch_logs_role_arn"];

    bool exclude_verbose_content = 2 [json_name = "exclude_verbose_content"];

    string field_log_level = 3 [json_name = "field_log_level"];
  }

  message OpenidConnectConfig {
    int64 auth_ttl = 1 [json_name = "auth_ttl"];

    string client_id = 2 [json_name = "client_id"];

    int64 iat_ttl = 3 [json_name = "iat_ttl"];

    string issuer = 4;
  }

  message UserPoolConfig {
    string app_id_client_regex = 1 [json_name = "app_id_client_regex"];

    string aws_region = 2 [json_name = "aws_region"];

    string default_action = 3 [json_name = "default_action"];

    string user_pool_id = 4 [json_name = "user_pool_id"];
  }
}

//AwsAppsyncResolver version is 0
message AwsAppsyncResolver {
  string api_id = 1 [json_name = "api_id"];

  string arn = 2;

  string data_source = 3 [json_name = "data_source"];

  string field = 4;

  string id = 5;

  string kind = 6;

  string request_template = 7 [json_name = "request_template"];

  string response_template = 8 [json_name = "response_template"];

  string type = 9;

  CachingConfig caching_config = 10 [json_name = "caching_config"];

  PipelineConfig pipeline_config = 11 [json_name = "pipeline_config"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message CachingConfig {
    repeated string caching_keys = 1 [json_name = "caching_keys"];

    int64 ttl = 2;
  }

  message PipelineConfig {
    repeated string functions = 1;
  }
}

//AwsAthenaDatabase version is 0
message AwsAthenaDatabase {
  string bucket = 1;

  bool force_destroy = 2 [json_name = "force_destroy"];

  string id = 3;

  string name = 4;

  EncryptionConfiguration encryption_configuration = 5 [json_name = "encryption_configuration"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message EncryptionConfiguration {
    string encryption_option = 1 [json_name = "encryption_option"];

    string kms_key = 2 [json_name = "kms_key"];
  }
}

//AwsAthenaNamedQuery version is 0
message AwsAthenaNamedQuery {
  string database = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string query = 5;

  string workgroup = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsAthenaWorkgroup version is 0
message AwsAthenaWorkgroup {
  string arn = 1;

  string description = 2;

  bool force_destroy = 3 [json_name = "force_destroy"];

  string id = 4;

  string name = 5;

  string state = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  Configuration configuration = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Configuration {
    int64 bytes_scanned_cutoff_per_query = 1 [json_name = "bytes_scanned_cutoff_per_query"];

    bool enforce_workgroup_configuration = 2 [json_name = "enforce_workgroup_configuration"];

    bool publish_cloudwatch_metrics_enabled = 3 [json_name = "publish_cloudwatch_metrics_enabled"];

    bool requester_pays_enabled = 4 [json_name = "requester_pays_enabled"];

    EngineVersion engine_version = 5 [json_name = "engine_version"];

    ResultConfiguration result_configuration = 6 [json_name = "result_configuration"];

    message EngineVersion {
      string effective_engine_version = 1 [json_name = "effective_engine_version"];

      string selected_engine_version = 2 [json_name = "selected_engine_version"];
    }

    message ResultConfiguration {
      string output_location = 1 [json_name = "output_location"];

      EncryptionConfiguration encryption_configuration = 2 [json_name = "encryption_configuration"];

      message EncryptionConfiguration {
        string encryption_option = 1 [json_name = "encryption_option"];

        string kms_key_arn = 2 [json_name = "kms_key_arn"];
      }
    }
  }
}

//AwsAutoscalingAttachment version is 0
message AwsAutoscalingAttachment {
  string alb_target_group_arn = 1 [json_name = "alb_target_group_arn"];

  string autoscaling_group_name = 2 [json_name = "autoscaling_group_name"];

  string elb = 3;

  string id = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsAutoscalingGroup version is 0
message AwsAutoscalingGroup {
  string arn = 1;

  repeated string availability_zones = 2 [json_name = "availability_zones"];

  bool capacity_rebalance = 3 [json_name = "capacity_rebalance"];

  int64 default_cooldown = 4 [json_name = "default_cooldown"];

  int64 desired_capacity = 5 [json_name = "desired_capacity"];

  repeated string enabled_metrics = 6 [json_name = "enabled_metrics"];

  bool force_delete = 7 [json_name = "force_delete"];

  bool force_delete_warm_pool = 8 [json_name = "force_delete_warm_pool"];

  int64 health_check_grace_period = 9 [json_name = "health_check_grace_period"];

  string health_check_type = 10 [json_name = "health_check_type"];

  string id = 11;

  string launch_configuration = 12 [json_name = "launch_configuration"];

  repeated string load_balancers = 13 [json_name = "load_balancers"];

  int64 max_instance_lifetime = 14 [json_name = "max_instance_lifetime"];

  int64 max_size = 15 [json_name = "max_size"];

  string metrics_granularity = 16 [json_name = "metrics_granularity"];

  int64 min_elb_capacity = 17 [json_name = "min_elb_capacity"];

  int64 min_size = 18 [json_name = "min_size"];

  string name = 19;

  string name_prefix = 20 [json_name = "name_prefix"];

  string placement_group = 21 [json_name = "placement_group"];

  bool protect_from_scale_in = 22 [json_name = "protect_from_scale_in"];

  string service_linked_role_arn = 23 [json_name = "service_linked_role_arn"];

  repeated string suspended_processes = 24 [json_name = "suspended_processes"];

  map<string, string> tags = 25;

  repeated string target_group_arns = 26 [json_name = "target_group_arns"];

  repeated string termination_policies = 27 [json_name = "termination_policies"];

  repeated string vpc_zone_identifier = 28 [json_name = "vpc_zone_identifier"];

  string wait_for_capacity_timeout = 29 [json_name = "wait_for_capacity_timeout"];

  int64 wait_for_elb_capacity = 30 [json_name = "wait_for_elb_capacity"];

  repeated InitialLifecycleHook initial_lifecycle_hook = 31 [json_name = "initial_lifecycle_hook"];

  InstanceRefresh instance_refresh = 32 [json_name = "instance_refresh"];

  LaunchTemplate launch_template = 33 [json_name = "launch_template"];

  MixedInstancesPolicy mixed_instances_policy = 34 [json_name = "mixed_instances_policy"];

  repeated Tag tag = 35;

  repeated Timeouts timeouts = 36;

  WarmPool warm_pool = 37 [json_name = "warm_pool"];

  repeated string depends_on = 38;

  int32 count = 39;

  map<string, string> for_each = 40;

  string provider = 41;

  terraform.meta.Lifecycle lifecycle = 42;

  message InitialLifecycleHook {
    string default_result = 1 [json_name = "default_result"];

    int64 heartbeat_timeout = 2 [json_name = "heartbeat_timeout"];

    string lifecycle_transition = 3 [json_name = "lifecycle_transition"];

    string name = 4;

    string notification_metadata = 5 [json_name = "notification_metadata"];

    string notification_target_arn = 6 [json_name = "notification_target_arn"];

    string role_arn = 7 [json_name = "role_arn"];
  }

  message InstanceRefresh {
    string strategy = 1;

    repeated string triggers = 2;

    Preferences preferences = 3;

    message Preferences {
      string checkpoint_delay = 1 [json_name = "checkpoint_delay"];

      repeated int64 checkpoint_percentages = 2 [json_name = "checkpoint_percentages"];

      string instance_warmup = 3 [json_name = "instance_warmup"];

      int64 min_healthy_percentage = 4 [json_name = "min_healthy_percentage"];
    }
  }

  message LaunchTemplate {
    string id = 1;

    string name = 2;

    string version = 3;
  }

  message MixedInstancesPolicy {
    InstancesDistribution instances_distribution = 1 [json_name = "instances_distribution"];

    LaunchTemplate launch_template = 2 [json_name = "launch_template"];

    message InstancesDistribution {
      string on_demand_allocation_strategy = 1 [json_name = "on_demand_allocation_strategy"];

      int64 on_demand_base_capacity = 2 [json_name = "on_demand_base_capacity"];

      int64 on_demand_percentage_above_base_capacity = 3 [json_name = "on_demand_percentage_above_base_capacity"];

      string spot_allocation_strategy = 4 [json_name = "spot_allocation_strategy"];

      int64 spot_instance_pools = 5 [json_name = "spot_instance_pools"];

      string spot_max_price = 6 [json_name = "spot_max_price"];
    }

    message LaunchTemplate {
      LaunchTemplateSpecification launch_template_specification = 1 [json_name = "launch_template_specification"];

      repeated Override override = 2;

      message LaunchTemplateSpecification {
        string launch_template_id = 1 [json_name = "launch_template_id"];

        string launch_template_name = 2 [json_name = "launch_template_name"];

        string version = 3;
      }

      message Override {
        string instance_type = 1 [json_name = "instance_type"];

        string weighted_capacity = 2 [json_name = "weighted_capacity"];

        LaunchTemplateSpecification launch_template_specification = 3 [json_name = "launch_template_specification"];

        message LaunchTemplateSpecification {
          string launch_template_id = 1 [json_name = "launch_template_id"];

          string launch_template_name = 2 [json_name = "launch_template_name"];

          string version = 3;
        }
      }
    }
  }

  message Tag {
    string key = 1;

    bool propagate_at_launch = 2 [json_name = "propagate_at_launch"];

    string value = 3;
  }

  message Timeouts {
    string delete = 1;
  }

  message WarmPool {
    int64 max_group_prepared_capacity = 1 [json_name = "max_group_prepared_capacity"];

    int64 min_size = 2 [json_name = "min_size"];

    string pool_state = 3 [json_name = "pool_state"];
  }
}

//AwsAutoscalingGroupTag version is 0
message AwsAutoscalingGroupTag {
  string autoscaling_group_name = 1 [json_name = "autoscaling_group_name"];

  string id = 2;

  Tag tag = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message Tag {
    string key = 1;

    bool propagate_at_launch = 2 [json_name = "propagate_at_launch"];

    string value = 3;
  }
}

//AwsAutoscalingLifecycleHook version is 0
message AwsAutoscalingLifecycleHook {
  string autoscaling_group_name = 1 [json_name = "autoscaling_group_name"];

  string default_result = 2 [json_name = "default_result"];

  int64 heartbeat_timeout = 3 [json_name = "heartbeat_timeout"];

  string id = 4;

  string lifecycle_transition = 5 [json_name = "lifecycle_transition"];

  string name = 6;

  string notification_metadata = 7 [json_name = "notification_metadata"];

  string notification_target_arn = 8 [json_name = "notification_target_arn"];

  string role_arn = 9 [json_name = "role_arn"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsAutoscalingNotification version is 0
message AwsAutoscalingNotification {
  repeated string group_names = 1 [json_name = "group_names"];

  string id = 2;

  repeated string notifications = 3;

  string topic_arn = 4 [json_name = "topic_arn"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsAutoscalingPolicy version is 0
message AwsAutoscalingPolicy {
  string adjustment_type = 1 [json_name = "adjustment_type"];

  string arn = 2;

  string autoscaling_group_name = 3 [json_name = "autoscaling_group_name"];

  int64 cooldown = 4;

  int64 estimated_instance_warmup = 5 [json_name = "estimated_instance_warmup"];

  string id = 6;

  string metric_aggregation_type = 7 [json_name = "metric_aggregation_type"];

  int64 min_adjustment_magnitude = 8 [json_name = "min_adjustment_magnitude"];

  string name = 9;

  string policy_type = 10 [json_name = "policy_type"];

  int64 scaling_adjustment = 11 [json_name = "scaling_adjustment"];

  PredictiveScalingConfiguration predictive_scaling_configuration = 12 [json_name = "predictive_scaling_configuration"];

  repeated StepAdjustment step_adjustment = 13 [json_name = "step_adjustment"];

  TargetTrackingConfiguration target_tracking_configuration = 14 [json_name = "target_tracking_configuration"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message PredictiveScalingConfiguration {
    string max_capacity_breach_behavior = 1 [json_name = "max_capacity_breach_behavior"];

    string max_capacity_buffer = 2 [json_name = "max_capacity_buffer"];

    string mode = 3;

    string scheduling_buffer_time = 4 [json_name = "scheduling_buffer_time"];

    MetricSpecification metric_specification = 5 [json_name = "metric_specification"];

    message MetricSpecification {
      int64 target_value = 1 [json_name = "target_value"];

      PredefinedLoadMetricSpecification predefined_load_metric_specification = 2 [json_name = "predefined_load_metric_specification"];

      PredefinedMetricPairSpecification predefined_metric_pair_specification = 3 [json_name = "predefined_metric_pair_specification"];

      PredefinedScalingMetricSpecification predefined_scaling_metric_specification = 4 [json_name = "predefined_scaling_metric_specification"];

      message PredefinedLoadMetricSpecification {
        string predefined_metric_type = 1 [json_name = "predefined_metric_type"];

        string resource_label = 2 [json_name = "resource_label"];
      }

      message PredefinedMetricPairSpecification {
        string predefined_metric_type = 1 [json_name = "predefined_metric_type"];

        string resource_label = 2 [json_name = "resource_label"];
      }

      message PredefinedScalingMetricSpecification {
        string predefined_metric_type = 1 [json_name = "predefined_metric_type"];

        string resource_label = 2 [json_name = "resource_label"];
      }
    }
  }

  message StepAdjustment {
    string metric_interval_lower_bound = 1 [json_name = "metric_interval_lower_bound"];

    string metric_interval_upper_bound = 2 [json_name = "metric_interval_upper_bound"];

    int64 scaling_adjustment = 3 [json_name = "scaling_adjustment"];
  }

  message TargetTrackingConfiguration {
    bool disable_scale_in = 1 [json_name = "disable_scale_in"];

    int64 target_value = 2 [json_name = "target_value"];

    CustomizedMetricSpecification customized_metric_specification = 3 [json_name = "customized_metric_specification"];

    PredefinedMetricSpecification predefined_metric_specification = 4 [json_name = "predefined_metric_specification"];

    message CustomizedMetricSpecification {
      string metric_name = 1 [json_name = "metric_name"];

      string namespace = 2;

      string statistic = 3;

      string unit = 4;

      repeated MetricDimension metric_dimension = 5 [json_name = "metric_dimension"];

      message MetricDimension {
        string name = 1;

        string value = 2;
      }
    }

    message PredefinedMetricSpecification {
      string predefined_metric_type = 1 [json_name = "predefined_metric_type"];

      string resource_label = 2 [json_name = "resource_label"];
    }
  }
}

//AwsAutoscalingSchedule version is 0
message AwsAutoscalingSchedule {
  string arn = 1;

  string autoscaling_group_name = 2 [json_name = "autoscaling_group_name"];

  int64 desired_capacity = 3 [json_name = "desired_capacity"];

  string end_time = 4 [json_name = "end_time"];

  string id = 5;

  int64 max_size = 6 [json_name = "max_size"];

  int64 min_size = 7 [json_name = "min_size"];

  string recurrence = 8;

  string scheduled_action_name = 9 [json_name = "scheduled_action_name"];

  string start_time = 10 [json_name = "start_time"];

  string time_zone = 11 [json_name = "time_zone"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsAutoscalingplansScalingPlan version is 0
message AwsAutoscalingplansScalingPlan {
  string id = 1;

  string name = 2;

  int64 scaling_plan_version = 3 [json_name = "scaling_plan_version"];

  ApplicationSource application_source = 4 [json_name = "application_source"];

  repeated ScalingInstruction scaling_instruction = 5 [json_name = "scaling_instruction"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message ApplicationSource {
    string cloudformation_stack_arn = 1 [json_name = "cloudformation_stack_arn"];

    repeated TagFilter tag_filter = 2 [json_name = "tag_filter"];

    message TagFilter {
      string key = 1;

      repeated string values = 2;
    }
  }

  message ScalingInstruction {
    bool disable_dynamic_scaling = 1 [json_name = "disable_dynamic_scaling"];

    int64 max_capacity = 2 [json_name = "max_capacity"];

    int64 min_capacity = 3 [json_name = "min_capacity"];

    string predictive_scaling_max_capacity_behavior = 4 [json_name = "predictive_scaling_max_capacity_behavior"];

    int64 predictive_scaling_max_capacity_buffer = 5 [json_name = "predictive_scaling_max_capacity_buffer"];

    string predictive_scaling_mode = 6 [json_name = "predictive_scaling_mode"];

    string resource_id = 7 [json_name = "resource_id"];

    string scalable_dimension = 8 [json_name = "scalable_dimension"];

    string scaling_policy_update_behavior = 9 [json_name = "scaling_policy_update_behavior"];

    int64 scheduled_action_buffer_time = 10 [json_name = "scheduled_action_buffer_time"];

    string service_namespace = 11 [json_name = "service_namespace"];

    CustomizedLoadMetricSpecification customized_load_metric_specification = 12 [json_name = "customized_load_metric_specification"];

    PredefinedLoadMetricSpecification predefined_load_metric_specification = 13 [json_name = "predefined_load_metric_specification"];

    repeated TargetTrackingConfiguration target_tracking_configuration = 14 [json_name = "target_tracking_configuration"];

    message CustomizedLoadMetricSpecification {
      map<string, string> dimensions = 1;

      string metric_name = 2 [json_name = "metric_name"];

      string namespace = 3;

      string statistic = 4;

      string unit = 5;
    }

    message PredefinedLoadMetricSpecification {
      string predefined_load_metric_type = 1 [json_name = "predefined_load_metric_type"];

      string resource_label = 2 [json_name = "resource_label"];
    }

    message TargetTrackingConfiguration {
      bool disable_scale_in = 1 [json_name = "disable_scale_in"];

      int64 estimated_instance_warmup = 2 [json_name = "estimated_instance_warmup"];

      int64 scale_in_cooldown = 3 [json_name = "scale_in_cooldown"];

      int64 scale_out_cooldown = 4 [json_name = "scale_out_cooldown"];

      int64 target_value = 5 [json_name = "target_value"];

      CustomizedScalingMetricSpecification customized_scaling_metric_specification = 6 [json_name = "customized_scaling_metric_specification"];

      PredefinedScalingMetricSpecification predefined_scaling_metric_specification = 7 [json_name = "predefined_scaling_metric_specification"];

      message CustomizedScalingMetricSpecification {
        map<string, string> dimensions = 1;

        string metric_name = 2 [json_name = "metric_name"];

        string namespace = 3;

        string statistic = 4;

        string unit = 5;
      }

      message PredefinedScalingMetricSpecification {
        string predefined_scaling_metric_type = 1 [json_name = "predefined_scaling_metric_type"];

        string resource_label = 2 [json_name = "resource_label"];
      }
    }
  }
}

//AwsBackupGlobalSettings version is 0
message AwsBackupGlobalSettings {
  map<string, string> global_settings = 1 [json_name = "global_settings"];

  string id = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsBackupPlan version is 0
message AwsBackupPlan {
  string arn = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  string version = 6;

  repeated AdvancedBackupSetting advanced_backup_setting = 7 [json_name = "advanced_backup_setting"];

  repeated Rule rule = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message AdvancedBackupSetting {
    map<string, string> backup_options = 1 [json_name = "backup_options"];

    string resource_type = 2 [json_name = "resource_type"];
  }

  message Rule {
    int64 completion_window = 1 [json_name = "completion_window"];

    bool enable_continuous_backup = 2 [json_name = "enable_continuous_backup"];

    map<string, string> recovery_point_tags = 3 [json_name = "recovery_point_tags"];

    string rule_name = 4 [json_name = "rule_name"];

    string schedule = 5;

    int64 start_window = 6 [json_name = "start_window"];

    string target_vault_name = 7 [json_name = "target_vault_name"];

    repeated CopyAction copy_action = 8 [json_name = "copy_action"];

    Lifecycle lifecycle = 9;

    message CopyAction {
      string destination_vault_arn = 1 [json_name = "destination_vault_arn"];

      Lifecycle lifecycle = 2;

      message Lifecycle {
        int64 cold_storage_after = 1 [json_name = "cold_storage_after"];

        int64 delete_after = 2 [json_name = "delete_after"];
      }
    }

    message Lifecycle {
      int64 cold_storage_after = 1 [json_name = "cold_storage_after"];

      int64 delete_after = 2 [json_name = "delete_after"];
    }
  }
}

//AwsBackupRegionSettings version is 0
message AwsBackupRegionSettings {
  string id = 1;

  map<string, string> resource_type_management_preference = 2 [json_name = "resource_type_management_preference"];

  map<string, string> resource_type_opt_in_preference = 3 [json_name = "resource_type_opt_in_preference"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsBackupSelection version is 0
message AwsBackupSelection {
  string iam_role_arn = 1 [json_name = "iam_role_arn"];

  string id = 2;

  string name = 3;

  string plan_id = 4 [json_name = "plan_id"];

  repeated string resources = 5;

  repeated SelectionTag selection_tag = 6 [json_name = "selection_tag"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message SelectionTag {
    string key = 1;

    string type = 2;

    string value = 3;
  }
}

//AwsBackupVault version is 0
message AwsBackupVault {
  string arn = 1;

  string id = 2;

  string kms_key_arn = 3 [json_name = "kms_key_arn"];

  string name = 4;

  int64 recovery_points = 5 [json_name = "recovery_points"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsBackupVaultLockConfiguration version is 0
message AwsBackupVaultLockConfiguration {
  string backup_vault_arn = 1 [json_name = "backup_vault_arn"];

  string backup_vault_name = 2 [json_name = "backup_vault_name"];

  int64 changeable_for_days = 3 [json_name = "changeable_for_days"];

  string id = 4;

  int64 max_retention_days = 5 [json_name = "max_retention_days"];

  int64 min_retention_days = 6 [json_name = "min_retention_days"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsBackupVaultNotifications version is 0
message AwsBackupVaultNotifications {
  string backup_vault_arn = 1 [json_name = "backup_vault_arn"];

  repeated string backup_vault_events = 2 [json_name = "backup_vault_events"];

  string backup_vault_name = 3 [json_name = "backup_vault_name"];

  string id = 4;

  string sns_topic_arn = 5 [json_name = "sns_topic_arn"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsBackupVaultPolicy version is 0
message AwsBackupVaultPolicy {
  string backup_vault_arn = 1 [json_name = "backup_vault_arn"];

  string backup_vault_name = 2 [json_name = "backup_vault_name"];

  string id = 3;

  string policy = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsBatchComputeEnvironment version is 0
message AwsBatchComputeEnvironment {
  string arn = 1;

  string compute_environment_name = 2 [json_name = "compute_environment_name"];

  string compute_environment_name_prefix = 3 [json_name = "compute_environment_name_prefix"];

  string ecs_cluster_arn = 4 [json_name = "ecs_cluster_arn"];

  string id = 5;

  string service_role = 6 [json_name = "service_role"];

  string state = 7;

  string status = 8;

  string status_reason = 9 [json_name = "status_reason"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  string type = 12;

  ComputeResources compute_resources = 13 [json_name = "compute_resources"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message ComputeResources {
    string allocation_strategy = 1 [json_name = "allocation_strategy"];

    int64 bid_percentage = 2 [json_name = "bid_percentage"];

    int64 desired_vcpus = 3 [json_name = "desired_vcpus"];

    string ec2_key_pair = 4 [json_name = "ec2_key_pair"];

    string image_id = 5 [json_name = "image_id"];

    string instance_role = 6 [json_name = "instance_role"];

    repeated string instance_type = 7 [json_name = "instance_type"];

    int64 max_vcpus = 8 [json_name = "max_vcpus"];

    int64 min_vcpus = 9 [json_name = "min_vcpus"];

    repeated string security_group_ids = 10 [json_name = "security_group_ids"];

    string spot_iam_fleet_role = 11 [json_name = "spot_iam_fleet_role"];

    repeated string subnets = 12;

    map<string, string> tags = 13;

    string type = 14;

    Ec2Configuration ec2_configuration = 15 [json_name = "ec2_configuration"];

    LaunchTemplate launch_template = 16 [json_name = "launch_template"];

    message Ec2Configuration {
      string image_id_override = 1 [json_name = "image_id_override"];

      string image_type = 2 [json_name = "image_type"];
    }

    message LaunchTemplate {
      string launch_template_id = 1 [json_name = "launch_template_id"];

      string launch_template_name = 2 [json_name = "launch_template_name"];

      string version = 3;
    }
  }
}

//AwsBatchJobDefinition version is 0
message AwsBatchJobDefinition {
  string arn = 1;

  string container_properties = 2 [json_name = "container_properties"];

  string id = 3;

  string name = 4;

  map<string, string> parameters = 5;

  repeated string platform_capabilities = 6 [json_name = "platform_capabilities"];

  bool propagate_tags = 7 [json_name = "propagate_tags"];

  int64 revision = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string type = 11;

  RetryStrategy retry_strategy = 12 [json_name = "retry_strategy"];

  Timeout timeout = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message RetryStrategy {
    int64 attempts = 1;

    repeated EvaluateOnExit evaluate_on_exit = 2 [json_name = "evaluate_on_exit"];

    message EvaluateOnExit {
      string action = 1;

      string on_exit_code = 2 [json_name = "on_exit_code"];

      string on_reason = 3 [json_name = "on_reason"];

      string on_status_reason = 4 [json_name = "on_status_reason"];
    }
  }

  message Timeout {
    int64 attempt_duration_seconds = 1 [json_name = "attempt_duration_seconds"];
  }
}

//AwsBatchJobQueue version is 0
message AwsBatchJobQueue {
  string arn = 1;

  repeated string compute_environments = 2 [json_name = "compute_environments"];

  string id = 3;

  string name = 4;

  int64 priority = 5;

  string state = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsBudgetsBudget version is 0
message AwsBudgetsBudget {
  string account_id = 1 [json_name = "account_id"];

  string arn = 2;

  string budget_type = 3 [json_name = "budget_type"];

  map<string, string> cost_filters = 4 [json_name = "cost_filters"];

  string id = 5;

  string limit_amount = 6 [json_name = "limit_amount"];

  string limit_unit = 7 [json_name = "limit_unit"];

  string name = 8;

  string name_prefix = 9 [json_name = "name_prefix"];

  string time_period_end = 10 [json_name = "time_period_end"];

  string time_period_start = 11 [json_name = "time_period_start"];

  string time_unit = 12 [json_name = "time_unit"];

  repeated CostFilter cost_filter = 13 [json_name = "cost_filter"];

  CostTypes cost_types = 14 [json_name = "cost_types"];

  repeated Notification notification = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message CostFilter {
    string name = 1;

    repeated string values = 2;
  }

  message CostTypes {
    bool include_credit = 1 [json_name = "include_credit"];

    bool include_discount = 2 [json_name = "include_discount"];

    bool include_other_subscription = 3 [json_name = "include_other_subscription"];

    bool include_recurring = 4 [json_name = "include_recurring"];

    bool include_refund = 5 [json_name = "include_refund"];

    bool include_subscription = 6 [json_name = "include_subscription"];

    bool include_support = 7 [json_name = "include_support"];

    bool include_tax = 8 [json_name = "include_tax"];

    bool include_upfront = 9 [json_name = "include_upfront"];

    bool use_amortized = 10 [json_name = "use_amortized"];

    bool use_blended = 11 [json_name = "use_blended"];
  }

  message Notification {
    string comparison_operator = 1 [json_name = "comparison_operator"];

    string notification_type = 2 [json_name = "notification_type"];

    repeated string subscriber_email_addresses = 3 [json_name = "subscriber_email_addresses"];

    repeated string subscriber_sns_topic_arns = 4 [json_name = "subscriber_sns_topic_arns"];

    int64 threshold = 5;

    string threshold_type = 6 [json_name = "threshold_type"];
  }
}

//AwsBudgetsBudgetAction version is 0
message AwsBudgetsBudgetAction {
  string account_id = 1 [json_name = "account_id"];

  string action_id = 2 [json_name = "action_id"];

  string action_type = 3 [json_name = "action_type"];

  string approval_model = 4 [json_name = "approval_model"];

  string arn = 5;

  string budget_name = 6 [json_name = "budget_name"];

  string execution_role_arn = 7 [json_name = "execution_role_arn"];

  string id = 8;

  string notification_type = 9 [json_name = "notification_type"];

  string status = 10;

  ActionThreshold action_threshold = 11 [json_name = "action_threshold"];

  Definition definition = 12;

  repeated Subscriber subscriber = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message ActionThreshold {
    string action_threshold_type = 1 [json_name = "action_threshold_type"];

    int64 action_threshold_value = 2 [json_name = "action_threshold_value"];
  }

  message Definition {
    IamActionDefinition iam_action_definition = 1 [json_name = "iam_action_definition"];

    ScpActionDefinition scp_action_definition = 2 [json_name = "scp_action_definition"];

    SsmActionDefinition ssm_action_definition = 3 [json_name = "ssm_action_definition"];

    message IamActionDefinition {
      repeated string groups = 1;

      string policy_arn = 2 [json_name = "policy_arn"];

      repeated string roles = 3;

      repeated string users = 4;
    }

    message ScpActionDefinition {
      string policy_id = 1 [json_name = "policy_id"];

      repeated string target_ids = 2 [json_name = "target_ids"];
    }

    message SsmActionDefinition {
      string action_sub_type = 1 [json_name = "action_sub_type"];

      repeated string instance_ids = 2 [json_name = "instance_ids"];

      string region = 3;
    }
  }

  message Subscriber {
    string address = 1;

    string subscription_type = 2 [json_name = "subscription_type"];
  }
}

//AwsChimeVoiceConnector version is 0
message AwsChimeVoiceConnector {
  string aws_region = 1 [json_name = "aws_region"];

  string id = 2;

  string name = 3;

  string outbound_host_name = 4 [json_name = "outbound_host_name"];

  bool require_encryption = 5 [json_name = "require_encryption"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsChimeVoiceConnectorGroup version is 0
message AwsChimeVoiceConnectorGroup {
  string id = 1;

  string name = 2;

  repeated Connector connector = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message Connector {
    int64 priority = 1;

    string voice_connector_id = 2 [json_name = "voice_connector_id"];
  }
}

//AwsChimeVoiceConnectorLogging version is 0
message AwsChimeVoiceConnectorLogging {
  bool enable_sip_logs = 1 [json_name = "enable_sip_logs"];

  string id = 2;

  string voice_connector_id = 3 [json_name = "voice_connector_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsChimeVoiceConnectorOrigination version is 0
message AwsChimeVoiceConnectorOrigination {
  bool disabled = 1;

  string id = 2;

  string voice_connector_id = 3 [json_name = "voice_connector_id"];

  repeated Route route = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Route {
    string host = 1;

    int64 port = 2;

    int64 priority = 3;

    string protocol = 4;

    int64 weight = 5;
  }
}

//AwsChimeVoiceConnectorStreaming version is 0
message AwsChimeVoiceConnectorStreaming {
  int64 data_retention = 1 [json_name = "data_retention"];

  bool disabled = 2;

  string id = 3;

  repeated string streaming_notification_targets = 4 [json_name = "streaming_notification_targets"];

  string voice_connector_id = 5 [json_name = "voice_connector_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsChimeVoiceConnectorTermination version is 0
message AwsChimeVoiceConnectorTermination {
  repeated string calling_regions = 1 [json_name = "calling_regions"];

  repeated string cidr_allow_list = 2 [json_name = "cidr_allow_list"];

  int64 cps_limit = 3 [json_name = "cps_limit"];

  string default_phone_number = 4 [json_name = "default_phone_number"];

  bool disabled = 5;

  string id = 6;

  string voice_connector_id = 7 [json_name = "voice_connector_id"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsChimeVoiceConnectorTerminationCredentials version is 0
message AwsChimeVoiceConnectorTerminationCredentials {
  string id = 1;

  string voice_connector_id = 2 [json_name = "voice_connector_id"];

  repeated Credentials credentials = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message Credentials {
    string password = 1;

    string username = 2;
  }
}

//AwsCloud9EnvironmentEc2 version is 0
message AwsCloud9EnvironmentEc2 {
  string arn = 1;

  int64 automatic_stop_time_minutes = 2 [json_name = "automatic_stop_time_minutes"];

  string description = 3;

  string id = 4;

  string instance_type = 5 [json_name = "instance_type"];

  string name = 6;

  string owner_arn = 7 [json_name = "owner_arn"];

  string subnet_id = 8 [json_name = "subnet_id"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string type = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsCloudcontrolapiResource version is 0
message AwsCloudcontrolapiResource {
  string desired_state = 1 [json_name = "desired_state"];

  string id = 2;

  string properties = 3;

  string role_arn = 4 [json_name = "role_arn"];

  string schema = 5;

  string type_name = 6 [json_name = "type_name"];

  string type_version_id = 7 [json_name = "type_version_id"];

  repeated Timeouts timeouts = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsCloudformationStack version is 0
message AwsCloudformationStack {
  repeated string capabilities = 1;

  bool disable_rollback = 2 [json_name = "disable_rollback"];

  string iam_role_arn = 3 [json_name = "iam_role_arn"];

  string id = 4;

  string name = 5;

  repeated string notification_arns = 6 [json_name = "notification_arns"];

  string on_failure = 7 [json_name = "on_failure"];

  map<string, string> outputs = 8;

  map<string, string> parameters = 9;

  string policy_body = 10 [json_name = "policy_body"];

  string policy_url = 11 [json_name = "policy_url"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string template_body = 14 [json_name = "template_body"];

  string template_url = 15 [json_name = "template_url"];

  int64 timeout_in_minutes = 16 [json_name = "timeout_in_minutes"];

  repeated Timeouts timeouts = 17;

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsCloudformationStackSet version is 0
message AwsCloudformationStackSet {
  string administration_role_arn = 1 [json_name = "administration_role_arn"];

  string arn = 2;

  repeated string capabilities = 3;

  string description = 4;

  string execution_role_name = 5 [json_name = "execution_role_name"];

  string id = 6;

  string name = 7;

  map<string, string> parameters = 8;

  string permission_model = 9 [json_name = "permission_model"];

  string stack_set_id = 10 [json_name = "stack_set_id"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  string template_body = 13 [json_name = "template_body"];

  string template_url = 14 [json_name = "template_url"];

  AutoDeployment auto_deployment = 15 [json_name = "auto_deployment"];

  repeated Timeouts timeouts = 16;

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message AutoDeployment {
    bool enabled = 1;

    bool retain_stacks_on_account_removal = 2 [json_name = "retain_stacks_on_account_removal"];
  }

  message Timeouts {
    string update = 1;
  }
}

//AwsCloudformationStackSetInstance version is 0
message AwsCloudformationStackSetInstance {
  string account_id = 1 [json_name = "account_id"];

  string id = 2;

  string organizational_unit_id = 3 [json_name = "organizational_unit_id"];

  map<string, string> parameter_overrides = 4 [json_name = "parameter_overrides"];

  string region = 5;

  bool retain_stack = 6 [json_name = "retain_stack"];

  string stack_id = 7 [json_name = "stack_id"];

  string stack_set_name = 8 [json_name = "stack_set_name"];

  DeploymentTargets deployment_targets = 9 [json_name = "deployment_targets"];

  repeated Timeouts timeouts = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message DeploymentTargets {
    repeated string organizational_unit_ids = 1 [json_name = "organizational_unit_ids"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsCloudformationType version is 0
message AwsCloudformationType {
  string arn = 1;

  string default_version_id = 2 [json_name = "default_version_id"];

  string deprecated_status = 3 [json_name = "deprecated_status"];

  string description = 4;

  string documentation_url = 5 [json_name = "documentation_url"];

  string execution_role_arn = 6 [json_name = "execution_role_arn"];

  string id = 7;

  bool is_default_version = 8 [json_name = "is_default_version"];

  string provisioning_type = 9 [json_name = "provisioning_type"];

  string schema = 10;

  string schema_handler_package = 11 [json_name = "schema_handler_package"];

  string source_url = 12 [json_name = "source_url"];

  string type = 13;

  string type_arn = 14 [json_name = "type_arn"];

  string type_name = 15 [json_name = "type_name"];

  string version_id = 16 [json_name = "version_id"];

  string visibility = 17;

  LoggingConfig logging_config = 18 [json_name = "logging_config"];

  repeated string depends_on = 19;

  int32 count = 20;

  map<string, string> for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message LoggingConfig {
    string log_group_name = 1 [json_name = "log_group_name"];

    string log_role_arn = 2 [json_name = "log_role_arn"];
  }
}

//AwsCloudfrontCachePolicy version is 0
message AwsCloudfrontCachePolicy {
  string comment = 1;

  int64 default_ttl = 2 [json_name = "default_ttl"];

  string etag = 3;

  string id = 4;

  int64 max_ttl = 5 [json_name = "max_ttl"];

  int64 min_ttl = 6 [json_name = "min_ttl"];

  string name = 7;

  ParametersInCacheKeyAndForwardedToOrigin parameters_in_cache_key_and_forwarded_to_origin = 8 [json_name = "parameters_in_cache_key_and_forwarded_to_origin"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message ParametersInCacheKeyAndForwardedToOrigin {
    bool enable_accept_encoding_brotli = 1 [json_name = "enable_accept_encoding_brotli"];

    bool enable_accept_encoding_gzip = 2 [json_name = "enable_accept_encoding_gzip"];

    CookiesConfig cookies_config = 3 [json_name = "cookies_config"];

    HeadersConfig headers_config = 4 [json_name = "headers_config"];

    QueryStringsConfig query_strings_config = 5 [json_name = "query_strings_config"];

    message CookiesConfig {
      string cookie_behavior = 1 [json_name = "cookie_behavior"];

      Cookies cookies = 2;

      message Cookies {
        repeated string items = 1;
      }
    }

    message HeadersConfig {
      string header_behavior = 1 [json_name = "header_behavior"];

      Headers headers = 2;

      message Headers {
        repeated string items = 1;
      }
    }

    message QueryStringsConfig {
      string query_string_behavior = 1 [json_name = "query_string_behavior"];

      QueryStrings query_strings = 2 [json_name = "query_strings"];

      message QueryStrings {
        repeated string items = 1;
      }
    }
  }
}

//AwsCloudfrontDistribution version is 1
message AwsCloudfrontDistribution {
  repeated string aliases = 1;

  string arn = 2;

  string caller_reference = 3 [json_name = "caller_reference"];

  string comment = 4;

  string default_root_object = 5 [json_name = "default_root_object"];

  string domain_name = 6 [json_name = "domain_name"];

  bool enabled = 7;

  string etag = 8;

  string hosted_zone_id = 9 [json_name = "hosted_zone_id"];

  string http_version = 10 [json_name = "http_version"];

  string id = 11;

  int64 in_progress_validation_batches = 12 [json_name = "in_progress_validation_batches"];

  bool is_ipv6_enabled = 13 [json_name = "is_ipv6_enabled"];

  string last_modified_time = 14 [json_name = "last_modified_time"];

  string price_class = 15 [json_name = "price_class"];

  bool retain_on_delete = 16 [json_name = "retain_on_delete"];

  string status = 17;

  map<string, string> tags = 18;

  map<string, string> tags_all = 19 [json_name = "tags_all"];

  repeated TrustedKeyGroups trusted_key_groups = 20 [json_name = "trusted_key_groups"];

  repeated TrustedSigners trusted_signers = 21 [json_name = "trusted_signers"];

  bool wait_for_deployment = 22 [json_name = "wait_for_deployment"];

  string web_acl_id = 23 [json_name = "web_acl_id"];

  repeated CustomErrorResponse custom_error_response = 24 [json_name = "custom_error_response"];

  DefaultCacheBehavior default_cache_behavior = 25 [json_name = "default_cache_behavior"];

  LoggingConfig logging_config = 26 [json_name = "logging_config"];

  repeated OrderedCacheBehavior ordered_cache_behavior = 27 [json_name = "ordered_cache_behavior"];

  repeated Origin origin = 28;

  repeated OriginGroup origin_group = 29 [json_name = "origin_group"];

  Restrictions restrictions = 30;

  ViewerCertificate viewer_certificate = 31 [json_name = "viewer_certificate"];

  repeated string depends_on = 32;

  int32 count = 33;

  map<string, string> for_each = 34;

  string provider = 35;

  terraform.meta.Lifecycle lifecycle = 36;

  message TrustedKeyGroups {
    //enabled: bool
    bool enabled = 1;

    //items: list of object
    repeated Items items = 2;

    message Items {
      //key_group_id: string
      string key_group_id = 1 [json_name = "key_group_id"];

      //key_pair_ids: set of string
      repeated string key_pair_ids = 2 [json_name = "key_pair_ids"];
    }
  }

  message TrustedSigners {
    //enabled: bool
    bool enabled = 1;

    //items: list of object
    repeated Items items = 2;

    message Items {
      //aws_account_number: string
      string aws_account_number = 1 [json_name = "aws_account_number"];

      //key_pair_ids: set of string
      repeated string key_pair_ids = 2 [json_name = "key_pair_ids"];
    }
  }

  message CustomErrorResponse {
    int64 error_caching_min_ttl = 1 [json_name = "error_caching_min_ttl"];

    int64 error_code = 2 [json_name = "error_code"];

    int64 response_code = 3 [json_name = "response_code"];

    string response_page_path = 4 [json_name = "response_page_path"];
  }

  message DefaultCacheBehavior {
    repeated string allowed_methods = 1 [json_name = "allowed_methods"];

    string cache_policy_id = 2 [json_name = "cache_policy_id"];

    repeated string cached_methods = 3 [json_name = "cached_methods"];

    bool compress = 4;

    int64 default_ttl = 5 [json_name = "default_ttl"];

    string field_level_encryption_id = 6 [json_name = "field_level_encryption_id"];

    int64 max_ttl = 7 [json_name = "max_ttl"];

    int64 min_ttl = 8 [json_name = "min_ttl"];

    string origin_request_policy_id = 9 [json_name = "origin_request_policy_id"];

    string realtime_log_config_arn = 10 [json_name = "realtime_log_config_arn"];

    string response_headers_policy_id = 11 [json_name = "response_headers_policy_id"];

    bool smooth_streaming = 12 [json_name = "smooth_streaming"];

    string target_origin_id = 13 [json_name = "target_origin_id"];

    repeated string trusted_key_groups = 14 [json_name = "trusted_key_groups"];

    repeated string trusted_signers = 15 [json_name = "trusted_signers"];

    string viewer_protocol_policy = 16 [json_name = "viewer_protocol_policy"];

    ForwardedValues forwarded_values = 17 [json_name = "forwarded_values"];

    repeated FunctionAssociation function_association = 18 [json_name = "function_association"];

    repeated LambdaFunctionAssociation lambda_function_association = 19 [json_name = "lambda_function_association"];

    message ForwardedValues {
      repeated string headers = 1;

      bool query_string = 2 [json_name = "query_string"];

      repeated string query_string_cache_keys = 3 [json_name = "query_string_cache_keys"];

      Cookies cookies = 4;

      message Cookies {
        string forward = 1;

        repeated string whitelisted_names = 2 [json_name = "whitelisted_names"];
      }
    }

    message FunctionAssociation {
      string event_type = 1 [json_name = "event_type"];

      string function_arn = 2 [json_name = "function_arn"];
    }

    message LambdaFunctionAssociation {
      string event_type = 1 [json_name = "event_type"];

      bool include_body = 2 [json_name = "include_body"];

      string lambda_arn = 3 [json_name = "lambda_arn"];
    }
  }

  message LoggingConfig {
    string bucket = 1;

    bool include_cookies = 2 [json_name = "include_cookies"];

    string prefix = 3;
  }

  message OrderedCacheBehavior {
    repeated string allowed_methods = 1 [json_name = "allowed_methods"];

    string cache_policy_id = 2 [json_name = "cache_policy_id"];

    repeated string cached_methods = 3 [json_name = "cached_methods"];

    bool compress = 4;

    int64 default_ttl = 5 [json_name = "default_ttl"];

    string field_level_encryption_id = 6 [json_name = "field_level_encryption_id"];

    int64 max_ttl = 7 [json_name = "max_ttl"];

    int64 min_ttl = 8 [json_name = "min_ttl"];

    string origin_request_policy_id = 9 [json_name = "origin_request_policy_id"];

    string path_pattern = 10 [json_name = "path_pattern"];

    string realtime_log_config_arn = 11 [json_name = "realtime_log_config_arn"];

    string response_headers_policy_id = 12 [json_name = "response_headers_policy_id"];

    bool smooth_streaming = 13 [json_name = "smooth_streaming"];

    string target_origin_id = 14 [json_name = "target_origin_id"];

    repeated string trusted_key_groups = 15 [json_name = "trusted_key_groups"];

    repeated string trusted_signers = 16 [json_name = "trusted_signers"];

    string viewer_protocol_policy = 17 [json_name = "viewer_protocol_policy"];

    ForwardedValues forwarded_values = 18 [json_name = "forwarded_values"];

    repeated FunctionAssociation function_association = 19 [json_name = "function_association"];

    repeated LambdaFunctionAssociation lambda_function_association = 20 [json_name = "lambda_function_association"];

    message ForwardedValues {
      repeated string headers = 1;

      bool query_string = 2 [json_name = "query_string"];

      repeated string query_string_cache_keys = 3 [json_name = "query_string_cache_keys"];

      Cookies cookies = 4;

      message Cookies {
        string forward = 1;

        repeated string whitelisted_names = 2 [json_name = "whitelisted_names"];
      }
    }

    message FunctionAssociation {
      string event_type = 1 [json_name = "event_type"];

      string function_arn = 2 [json_name = "function_arn"];
    }

    message LambdaFunctionAssociation {
      string event_type = 1 [json_name = "event_type"];

      bool include_body = 2 [json_name = "include_body"];

      string lambda_arn = 3 [json_name = "lambda_arn"];
    }
  }

  message Origin {
    int64 connection_attempts = 1 [json_name = "connection_attempts"];

    int64 connection_timeout = 2 [json_name = "connection_timeout"];

    string domain_name = 3 [json_name = "domain_name"];

    string origin_id = 4 [json_name = "origin_id"];

    string origin_path = 5 [json_name = "origin_path"];

    repeated CustomHeader custom_header = 6 [json_name = "custom_header"];

    CustomOriginConfig custom_origin_config = 7 [json_name = "custom_origin_config"];

    OriginShield origin_shield = 8 [json_name = "origin_shield"];

    S3OriginConfig s3_origin_config = 9 [json_name = "s3_origin_config"];

    message CustomHeader {
      string name = 1;

      string value = 2;
    }

    message CustomOriginConfig {
      int64 http_port = 1 [json_name = "http_port"];

      int64 https_port = 2 [json_name = "https_port"];

      int64 origin_keepalive_timeout = 3 [json_name = "origin_keepalive_timeout"];

      string origin_protocol_policy = 4 [json_name = "origin_protocol_policy"];

      int64 origin_read_timeout = 5 [json_name = "origin_read_timeout"];

      repeated string origin_ssl_protocols = 6 [json_name = "origin_ssl_protocols"];
    }

    message OriginShield {
      bool enabled = 1;

      string origin_shield_region = 2 [json_name = "origin_shield_region"];
    }

    message S3OriginConfig {
      string origin_access_identity = 1 [json_name = "origin_access_identity"];
    }
  }

  message OriginGroup {
    string origin_id = 1 [json_name = "origin_id"];

    FailoverCriteria failover_criteria = 2 [json_name = "failover_criteria"];

    repeated Member member = 3;

    message FailoverCriteria {
      repeated int64 status_codes = 1 [json_name = "status_codes"];
    }

    message Member {
      string origin_id = 1 [json_name = "origin_id"];
    }
  }

  message Restrictions {
    GeoRestriction geo_restriction = 1 [json_name = "geo_restriction"];

    message GeoRestriction {
      repeated string locations = 1;

      string restriction_type = 2 [json_name = "restriction_type"];
    }
  }

  message ViewerCertificate {
    string acm_certificate_arn = 1 [json_name = "acm_certificate_arn"];

    bool cloudfront_default_certificate = 2 [json_name = "cloudfront_default_certificate"];

    string iam_certificate_id = 3 [json_name = "iam_certificate_id"];

    string minimum_protocol_version = 4 [json_name = "minimum_protocol_version"];

    string ssl_support_method = 5 [json_name = "ssl_support_method"];
  }
}

//AwsCloudfrontFieldLevelEncryptionConfig version is 0
message AwsCloudfrontFieldLevelEncryptionConfig {
  string caller_reference = 1 [json_name = "caller_reference"];

  string comment = 2;

  string etag = 3;

  string id = 4;

  ContentTypeProfileConfig content_type_profile_config = 5 [json_name = "content_type_profile_config"];

  QueryArgProfileConfig query_arg_profile_config = 6 [json_name = "query_arg_profile_config"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message ContentTypeProfileConfig {
    bool forward_when_content_type_is_unknown = 1 [json_name = "forward_when_content_type_is_unknown"];

    ContentTypeProfiles content_type_profiles = 2 [json_name = "content_type_profiles"];

    message ContentTypeProfiles {
      repeated Items items = 1;

      message Items {
        string content_type = 1 [json_name = "content_type"];

        string format = 2;

        string profile_id = 3 [json_name = "profile_id"];
      }
    }
  }

  message QueryArgProfileConfig {
    bool forward_when_query_arg_profile_is_unknown = 1 [json_name = "forward_when_query_arg_profile_is_unknown"];

    QueryArgProfiles query_arg_profiles = 2 [json_name = "query_arg_profiles"];

    message QueryArgProfiles {
      repeated Items items = 1;

      message Items {
        string profile_id = 1 [json_name = "profile_id"];

        string query_arg = 2 [json_name = "query_arg"];
      }
    }
  }
}

//AwsCloudfrontFieldLevelEncryptionProfile version is 0
message AwsCloudfrontFieldLevelEncryptionProfile {
  string caller_reference = 1 [json_name = "caller_reference"];

  string comment = 2;

  string etag = 3;

  string id = 4;

  string name = 5;

  EncryptionEntities encryption_entities = 6 [json_name = "encryption_entities"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message EncryptionEntities {
    repeated Items items = 1;

    message Items {
      string provider_id = 1 [json_name = "provider_id"];

      string public_key_id = 2 [json_name = "public_key_id"];

      FieldPatterns field_patterns = 3 [json_name = "field_patterns"];

      message FieldPatterns {
        repeated string items = 1;
      }
    }
  }
}

//AwsCloudfrontFunction version is 0
message AwsCloudfrontFunction {
  string arn = 1;

  string code = 2;

  string comment = 3;

  string etag = 4;

  string id = 5;

  string live_stage_etag = 6 [json_name = "live_stage_etag"];

  string name = 7;

  bool publish = 8;

  string runtime = 9;

  string status = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsCloudfrontKeyGroup version is 0
message AwsCloudfrontKeyGroup {
  string comment = 1;

  string etag = 2;

  string id = 3;

  repeated string items = 4;

  string name = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsCloudfrontMonitoringSubscription version is 0
message AwsCloudfrontMonitoringSubscription {
  string distribution_id = 1 [json_name = "distribution_id"];

  string id = 2;

  MonitoringSubscription monitoring_subscription = 3 [json_name = "monitoring_subscription"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message MonitoringSubscription {
    RealtimeMetricsSubscriptionConfig realtime_metrics_subscription_config = 1 [json_name = "realtime_metrics_subscription_config"];

    message RealtimeMetricsSubscriptionConfig {
      string realtime_metrics_subscription_status = 1 [json_name = "realtime_metrics_subscription_status"];
    }
  }
}

//AwsCloudfrontOriginAccessIdentity version is 0
message AwsCloudfrontOriginAccessIdentity {
  string caller_reference = 1 [json_name = "caller_reference"];

  string cloudfront_access_identity_path = 2 [json_name = "cloudfront_access_identity_path"];

  string comment = 3;

  string etag = 4;

  string iam_arn = 5 [json_name = "iam_arn"];

  string id = 6;

  string s3_canonical_user_id = 7 [json_name = "s3_canonical_user_id"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCloudfrontOriginRequestPolicy version is 0
message AwsCloudfrontOriginRequestPolicy {
  string comment = 1;

  string etag = 2;

  string id = 3;

  string name = 4;

  CookiesConfig cookies_config = 5 [json_name = "cookies_config"];

  HeadersConfig headers_config = 6 [json_name = "headers_config"];

  QueryStringsConfig query_strings_config = 7 [json_name = "query_strings_config"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message CookiesConfig {
    string cookie_behavior = 1 [json_name = "cookie_behavior"];

    Cookies cookies = 2;

    message Cookies {
      repeated string items = 1;
    }
  }

  message HeadersConfig {
    string header_behavior = 1 [json_name = "header_behavior"];

    Headers headers = 2;

    message Headers {
      repeated string items = 1;
    }
  }

  message QueryStringsConfig {
    string query_string_behavior = 1 [json_name = "query_string_behavior"];

    QueryStrings query_strings = 2 [json_name = "query_strings"];

    message QueryStrings {
      repeated string items = 1;
    }
  }
}

//AwsCloudfrontPublicKey version is 0
message AwsCloudfrontPublicKey {
  string caller_reference = 1 [json_name = "caller_reference"];

  string comment = 2;

  string encoded_key = 3 [json_name = "encoded_key"];

  string etag = 4;

  string id = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCloudfrontRealtimeLogConfig version is 0
message AwsCloudfrontRealtimeLogConfig {
  string arn = 1;

  repeated string fields = 2;

  string id = 3;

  string name = 4;

  int64 sampling_rate = 5 [json_name = "sampling_rate"];

  Endpoint endpoint = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Endpoint {
    string stream_type = 1 [json_name = "stream_type"];

    KinesisStreamConfig kinesis_stream_config = 2 [json_name = "kinesis_stream_config"];

    message KinesisStreamConfig {
      string role_arn = 1 [json_name = "role_arn"];

      string stream_arn = 2 [json_name = "stream_arn"];
    }
  }
}

//AwsCloudfrontResponseHeadersPolicy version is 0
message AwsCloudfrontResponseHeadersPolicy {
  string comment = 1;

  string etag = 2;

  string id = 3;

  string name = 4;

  CorsConfig cors_config = 5 [json_name = "cors_config"];

  CustomHeadersConfig custom_headers_config = 6 [json_name = "custom_headers_config"];

  SecurityHeadersConfig security_headers_config = 7 [json_name = "security_headers_config"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message CorsConfig {
    bool access_control_allow_credentials = 1 [json_name = "access_control_allow_credentials"];

    int64 access_control_max_age_sec = 2 [json_name = "access_control_max_age_sec"];

    bool origin_override = 3 [json_name = "origin_override"];

    AccessControlAllowHeaders access_control_allow_headers = 4 [json_name = "access_control_allow_headers"];

    AccessControlAllowMethods access_control_allow_methods = 5 [json_name = "access_control_allow_methods"];

    AccessControlAllowOrigins access_control_allow_origins = 6 [json_name = "access_control_allow_origins"];

    AccessControlExposeHeaders access_control_expose_headers = 7 [json_name = "access_control_expose_headers"];

    message AccessControlAllowHeaders {
      repeated string items = 1;
    }

    message AccessControlAllowMethods {
      repeated string items = 1;
    }

    message AccessControlAllowOrigins {
      repeated string items = 1;
    }

    message AccessControlExposeHeaders {
      repeated string items = 1;
    }
  }

  message CustomHeadersConfig {
    repeated Items items = 1;

    message Items {
      string header = 1;

      bool override = 2;

      string value = 3;
    }
  }

  message SecurityHeadersConfig {
    ContentSecurityPolicy content_security_policy = 1 [json_name = "content_security_policy"];

    ContentTypeOptions content_type_options = 2 [json_name = "content_type_options"];

    FrameOptions frame_options = 3 [json_name = "frame_options"];

    ReferrerPolicy referrer_policy = 4 [json_name = "referrer_policy"];

    StrictTransportSecurity strict_transport_security = 5 [json_name = "strict_transport_security"];

    XssProtection xss_protection = 6 [json_name = "xss_protection"];

    message ContentSecurityPolicy {
      string content_security_policy = 1 [json_name = "content_security_policy"];

      bool override = 2;
    }

    message ContentTypeOptions {
      bool override = 1;
    }

    message FrameOptions {
      string frame_option = 1 [json_name = "frame_option"];

      bool override = 2;
    }

    message ReferrerPolicy {
      bool override = 1;

      string referrer_policy = 2 [json_name = "referrer_policy"];
    }

    message StrictTransportSecurity {
      int64 access_control_max_age_sec = 1 [json_name = "access_control_max_age_sec"];

      bool include_subdomains = 2 [json_name = "include_subdomains"];

      bool override = 3;

      bool preload = 4;
    }

    message XssProtection {
      bool mode_block = 1 [json_name = "mode_block"];

      bool override = 2;

      bool protection = 3;

      string report_uri = 4 [json_name = "report_uri"];
    }
  }
}

//AwsCloudhsmV2Cluster version is 0
message AwsCloudhsmV2Cluster {
  repeated ClusterCertificates cluster_certificates = 1 [json_name = "cluster_certificates"];

  string cluster_id = 2 [json_name = "cluster_id"];

  string cluster_state = 3 [json_name = "cluster_state"];

  string hsm_type = 4 [json_name = "hsm_type"];

  string id = 5;

  string security_group_id = 6 [json_name = "security_group_id"];

  string source_backup_identifier = 7 [json_name = "source_backup_identifier"];

  repeated string subnet_ids = 8 [json_name = "subnet_ids"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string vpc_id = 11 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message ClusterCertificates {
    //aws_hardware_certificate: string
    string aws_hardware_certificate = 1 [json_name = "aws_hardware_certificate"];

    //cluster_certificate: string
    string cluster_certificate = 2 [json_name = "cluster_certificate"];

    //cluster_csr: string
    string cluster_csr = 3 [json_name = "cluster_csr"];

    //hsm_certificate: string
    string hsm_certificate = 4 [json_name = "hsm_certificate"];

    //manufacturer_hardware_certificate: string
    string manufacturer_hardware_certificate = 5 [json_name = "manufacturer_hardware_certificate"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsCloudhsmV2Hsm version is 0
message AwsCloudhsmV2Hsm {
  string availability_zone = 1 [json_name = "availability_zone"];

  string cluster_id = 2 [json_name = "cluster_id"];

  string hsm_eni_id = 3 [json_name = "hsm_eni_id"];

  string hsm_id = 4 [json_name = "hsm_id"];

  string hsm_state = 5 [json_name = "hsm_state"];

  string id = 6;

  string ip_address = 7 [json_name = "ip_address"];

  string subnet_id = 8 [json_name = "subnet_id"];

  repeated Timeouts timeouts = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsCloudtrail version is 0
message AwsCloudtrail {
  string arn = 1;

  string cloud_watch_logs_group_arn = 2 [json_name = "cloud_watch_logs_group_arn"];

  string cloud_watch_logs_role_arn = 3 [json_name = "cloud_watch_logs_role_arn"];

  bool enable_log_file_validation = 4 [json_name = "enable_log_file_validation"];

  bool enable_logging = 5 [json_name = "enable_logging"];

  string home_region = 6 [json_name = "home_region"];

  string id = 7;

  bool include_global_service_events = 8 [json_name = "include_global_service_events"];

  bool is_multi_region_trail = 9 [json_name = "is_multi_region_trail"];

  bool is_organization_trail = 10 [json_name = "is_organization_trail"];

  string kms_key_id = 11 [json_name = "kms_key_id"];

  string name = 12;

  string s3_bucket_name = 13 [json_name = "s3_bucket_name"];

  string s3_key_prefix = 14 [json_name = "s3_key_prefix"];

  string sns_topic_name = 15 [json_name = "sns_topic_name"];

  map<string, string> tags = 16;

  map<string, string> tags_all = 17 [json_name = "tags_all"];

  repeated AdvancedEventSelector advanced_event_selector = 18 [json_name = "advanced_event_selector"];

  repeated EventSelector event_selector = 19 [json_name = "event_selector"];

  repeated InsightSelector insight_selector = 20 [json_name = "insight_selector"];

  repeated string depends_on = 21;

  int32 count = 22;

  map<string, string> for_each = 23;

  string provider = 24;

  terraform.meta.Lifecycle lifecycle = 25;

  message AdvancedEventSelector {
    string name = 1;

    repeated FieldSelector field_selector = 2 [json_name = "field_selector"];

    message FieldSelector {
      repeated string ends_with = 1 [json_name = "ends_with"];

      repeated string equals = 2;

      string field = 3;

      repeated string not_ends_with = 4 [json_name = "not_ends_with"];

      repeated string not_equals = 5 [json_name = "not_equals"];

      repeated string not_starts_with = 6 [json_name = "not_starts_with"];

      repeated string starts_with = 7 [json_name = "starts_with"];
    }
  }

  message EventSelector {
    repeated string exclude_management_event_sources = 1 [json_name = "exclude_management_event_sources"];

    bool include_management_events = 2 [json_name = "include_management_events"];

    string read_write_type = 3 [json_name = "read_write_type"];

    repeated DataResource data_resource = 4 [json_name = "data_resource"];

    message DataResource {
      string type = 1;

      repeated string values = 2;
    }
  }

  message InsightSelector {
    string insight_type = 1 [json_name = "insight_type"];
  }
}

//AwsCloudwatchCompositeAlarm version is 0
message AwsCloudwatchCompositeAlarm {
  bool actions_enabled = 1 [json_name = "actions_enabled"];

  repeated string alarm_actions = 2 [json_name = "alarm_actions"];

  string alarm_description = 3 [json_name = "alarm_description"];

  string alarm_name = 4 [json_name = "alarm_name"];

  string alarm_rule = 5 [json_name = "alarm_rule"];

  string arn = 6;

  string id = 7;

  repeated string insufficient_data_actions = 8 [json_name = "insufficient_data_actions"];

  repeated string ok_actions = 9 [json_name = "ok_actions"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsCloudwatchDashboard version is 0
message AwsCloudwatchDashboard {
  string dashboard_arn = 1 [json_name = "dashboard_arn"];

  string dashboard_body = 2 [json_name = "dashboard_body"];

  string dashboard_name = 3 [json_name = "dashboard_name"];

  string id = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsCloudwatchEventApiDestination version is 0
message AwsCloudwatchEventApiDestination {
  string arn = 1;

  string connection_arn = 2 [json_name = "connection_arn"];

  string description = 3;

  string http_method = 4 [json_name = "http_method"];

  string id = 5;

  string invocation_endpoint = 6 [json_name = "invocation_endpoint"];

  int64 invocation_rate_limit_per_second = 7 [json_name = "invocation_rate_limit_per_second"];

  string name = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsCloudwatchEventArchive version is 0
message AwsCloudwatchEventArchive {
  string arn = 1;

  string description = 2;

  string event_pattern = 3 [json_name = "event_pattern"];

  string event_source_arn = 4 [json_name = "event_source_arn"];

  string id = 5;

  string name = 6;

  int64 retention_days = 7 [json_name = "retention_days"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCloudwatchEventBus version is 0
message AwsCloudwatchEventBus {
  string arn = 1;

  string event_source_name = 2 [json_name = "event_source_name"];

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsCloudwatchEventBusPolicy version is 0
message AwsCloudwatchEventBusPolicy {
  string event_bus_name = 1 [json_name = "event_bus_name"];

  string id = 2;

  string policy = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsCloudwatchEventConnection version is 0
message AwsCloudwatchEventConnection {
  string arn = 1;

  string authorization_type = 2 [json_name = "authorization_type"];

  string description = 3;

  string id = 4;

  string name = 5;

  string secret_arn = 6 [json_name = "secret_arn"];

  AuthParameters auth_parameters = 7 [json_name = "auth_parameters"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message AuthParameters {
    ApiKey api_key = 1 [json_name = "api_key"];

    Basic basic = 2;

    InvocationHttpParameters invocation_http_parameters = 3 [json_name = "invocation_http_parameters"];

    Oauth oauth = 4;

    message ApiKey {
      string key = 1;

      string value = 2;
    }

    message Basic {
      string password = 1;

      string username = 2;
    }

    message InvocationHttpParameters {
      repeated Body body = 1;

      repeated Header header = 2;

      repeated QueryString query_string = 3 [json_name = "query_string"];

      message Body {
        bool is_value_secret = 1 [json_name = "is_value_secret"];

        string key = 2;

        string value = 3;
      }

      message Header {
        bool is_value_secret = 1 [json_name = "is_value_secret"];

        string key = 2;

        string value = 3;
      }

      message QueryString {
        bool is_value_secret = 1 [json_name = "is_value_secret"];

        string key = 2;

        string value = 3;
      }
    }

    message Oauth {
      string authorization_endpoint = 1 [json_name = "authorization_endpoint"];

      string http_method = 2 [json_name = "http_method"];

      ClientParameters client_parameters = 3 [json_name = "client_parameters"];

      OauthHttpParameters oauth_http_parameters = 4 [json_name = "oauth_http_parameters"];

      message ClientParameters {
        string client_id = 1 [json_name = "client_id"];

        string client_secret = 2 [json_name = "client_secret"];
      }

      message OauthHttpParameters {
        repeated Body body = 1;

        repeated Header header = 2;

        repeated QueryString query_string = 3 [json_name = "query_string"];

        message Body {
          bool is_value_secret = 1 [json_name = "is_value_secret"];

          string key = 2;

          string value = 3;
        }

        message Header {
          bool is_value_secret = 1 [json_name = "is_value_secret"];

          string key = 2;

          string value = 3;
        }

        message QueryString {
          bool is_value_secret = 1 [json_name = "is_value_secret"];

          string key = 2;

          string value = 3;
        }
      }
    }
  }
}

//AwsCloudwatchEventPermission version is 0
message AwsCloudwatchEventPermission {
  string action = 1;

  string event_bus_name = 2 [json_name = "event_bus_name"];

  string id = 3;

  string principal = 4;

  string statement_id = 5 [json_name = "statement_id"];

  Condition condition = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Condition {
    string key = 1;

    string type = 2;

    string value = 3;
  }
}

//AwsCloudwatchEventRule version is 0
message AwsCloudwatchEventRule {
  string arn = 1;

  string description = 2;

  string event_bus_name = 3 [json_name = "event_bus_name"];

  string event_pattern = 4 [json_name = "event_pattern"];

  string id = 5;

  bool is_enabled = 6 [json_name = "is_enabled"];

  string name = 7;

  string name_prefix = 8 [json_name = "name_prefix"];

  string role_arn = 9 [json_name = "role_arn"];

  string schedule_expression = 10 [json_name = "schedule_expression"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsCloudwatchEventTarget version is 1
message AwsCloudwatchEventTarget {
  string arn = 1;

  string event_bus_name = 2 [json_name = "event_bus_name"];

  string id = 3;

  string input = 4;

  string input_path = 5 [json_name = "input_path"];

  string role_arn = 6 [json_name = "role_arn"];

  string rule = 7;

  string target_id = 8 [json_name = "target_id"];

  BatchTarget batch_target = 9 [json_name = "batch_target"];

  DeadLetterConfig dead_letter_config = 10 [json_name = "dead_letter_config"];

  EcsTarget ecs_target = 11 [json_name = "ecs_target"];

  HttpTarget http_target = 12 [json_name = "http_target"];

  InputTransformer input_transformer = 13 [json_name = "input_transformer"];

  KinesisTarget kinesis_target = 14 [json_name = "kinesis_target"];

  RedshiftTarget redshift_target = 15 [json_name = "redshift_target"];

  RetryPolicy retry_policy = 16 [json_name = "retry_policy"];

  repeated RunCommandTargets run_command_targets = 17 [json_name = "run_command_targets"];

  SqsTarget sqs_target = 18 [json_name = "sqs_target"];

  repeated string depends_on = 19;

  int32 count = 20;

  map<string, string> for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message BatchTarget {
    int64 array_size = 1 [json_name = "array_size"];

    int64 job_attempts = 2 [json_name = "job_attempts"];

    string job_definition = 3 [json_name = "job_definition"];

    string job_name = 4 [json_name = "job_name"];
  }

  message DeadLetterConfig {
    string arn = 1;
  }

  message EcsTarget {
    bool enable_ecs_managed_tags = 1 [json_name = "enable_ecs_managed_tags"];

    bool enable_execute_command = 2 [json_name = "enable_execute_command"];

    string group = 3;

    string launch_type = 4 [json_name = "launch_type"];

    string platform_version = 5 [json_name = "platform_version"];

    string propagate_tags = 6 [json_name = "propagate_tags"];

    map<string, string> tags = 7;

    int64 task_count = 8 [json_name = "task_count"];

    string task_definition_arn = 9 [json_name = "task_definition_arn"];

    NetworkConfiguration network_configuration = 10 [json_name = "network_configuration"];

    repeated PlacementConstraint placement_constraint = 11 [json_name = "placement_constraint"];

    message NetworkConfiguration {
      bool assign_public_ip = 1 [json_name = "assign_public_ip"];

      repeated string security_groups = 2 [json_name = "security_groups"];

      repeated string subnets = 3;
    }

    message PlacementConstraint {
      string expression = 1;

      string type = 2;
    }
  }

  message HttpTarget {
    map<string, string> header_parameters = 1 [json_name = "header_parameters"];

    repeated string path_parameter_values = 2 [json_name = "path_parameter_values"];

    map<string, string> query_string_parameters = 3 [json_name = "query_string_parameters"];
  }

  message InputTransformer {
    map<string, string> input_paths = 1 [json_name = "input_paths"];

    string input_template = 2 [json_name = "input_template"];
  }

  message KinesisTarget {
    string partition_key_path = 1 [json_name = "partition_key_path"];
  }

  message RedshiftTarget {
    string database = 1;

    string db_user = 2 [json_name = "db_user"];

    string secrets_manager_arn = 3 [json_name = "secrets_manager_arn"];

    string sql = 4;

    string statement_name = 5 [json_name = "statement_name"];

    bool with_event = 6 [json_name = "with_event"];
  }

  message RetryPolicy {
    int64 maximum_event_age_in_seconds = 1 [json_name = "maximum_event_age_in_seconds"];

    int64 maximum_retry_attempts = 2 [json_name = "maximum_retry_attempts"];
  }

  message RunCommandTargets {
    string key = 1;

    repeated string values = 2;
  }

  message SqsTarget {
    string message_group_id = 1 [json_name = "message_group_id"];
  }
}

//AwsCloudwatchLogDestination version is 0
message AwsCloudwatchLogDestination {
  string arn = 1;

  string id = 2;

  string name = 3;

  string role_arn = 4 [json_name = "role_arn"];

  string target_arn = 5 [json_name = "target_arn"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsCloudwatchLogDestinationPolicy version is 0
message AwsCloudwatchLogDestinationPolicy {
  string access_policy = 1 [json_name = "access_policy"];

  string destination_name = 2 [json_name = "destination_name"];

  string id = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsCloudwatchLogGroup version is 0
message AwsCloudwatchLogGroup {
  string arn = 1;

  string id = 2;

  string kms_key_id = 3 [json_name = "kms_key_id"];

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  int64 retention_in_days = 6 [json_name = "retention_in_days"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsCloudwatchLogMetricFilter version is 0
message AwsCloudwatchLogMetricFilter {
  string id = 1;

  string log_group_name = 2 [json_name = "log_group_name"];

  string name = 3;

  string pattern = 4;

  MetricTransformation metric_transformation = 5 [json_name = "metric_transformation"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message MetricTransformation {
    string default_value = 1 [json_name = "default_value"];

    map<string, string> dimensions = 2;

    string name = 3;

    string namespace = 4;

    string unit = 5;

    string value = 6;
  }
}

//AwsCloudwatchLogResourcePolicy version is 0
message AwsCloudwatchLogResourcePolicy {
  string id = 1;

  string policy_document = 2 [json_name = "policy_document"];

  string policy_name = 3 [json_name = "policy_name"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsCloudwatchLogStream version is 0
message AwsCloudwatchLogStream {
  string arn = 1;

  string id = 2;

  string log_group_name = 3 [json_name = "log_group_name"];

  string name = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsCloudwatchLogSubscriptionFilter version is 0
message AwsCloudwatchLogSubscriptionFilter {
  string destination_arn = 1 [json_name = "destination_arn"];

  string distribution = 2;

  string filter_pattern = 3 [json_name = "filter_pattern"];

  string id = 4;

  string log_group_name = 5 [json_name = "log_group_name"];

  string name = 6;

  string role_arn = 7 [json_name = "role_arn"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCloudwatchMetricAlarm version is 1
message AwsCloudwatchMetricAlarm {
  bool actions_enabled = 1 [json_name = "actions_enabled"];

  repeated string alarm_actions = 2 [json_name = "alarm_actions"];

  string alarm_description = 3 [json_name = "alarm_description"];

  string alarm_name = 4 [json_name = "alarm_name"];

  string arn = 5;

  string comparison_operator = 6 [json_name = "comparison_operator"];

  int64 datapoints_to_alarm = 7 [json_name = "datapoints_to_alarm"];

  map<string, string> dimensions = 8;

  string evaluate_low_sample_count_percentiles = 9 [json_name = "evaluate_low_sample_count_percentiles"];

  int64 evaluation_periods = 10 [json_name = "evaluation_periods"];

  string extended_statistic = 11 [json_name = "extended_statistic"];

  string id = 12;

  repeated string insufficient_data_actions = 13 [json_name = "insufficient_data_actions"];

  string metric_name = 14 [json_name = "metric_name"];

  string namespace = 15;

  repeated string ok_actions = 16 [json_name = "ok_actions"];

  int64 period = 17;

  string statistic = 18;

  map<string, string> tags = 19;

  map<string, string> tags_all = 20 [json_name = "tags_all"];

  int64 threshold = 21;

  string threshold_metric_id = 22 [json_name = "threshold_metric_id"];

  string treat_missing_data = 23 [json_name = "treat_missing_data"];

  string unit = 24;

  repeated MetricQuery metric_query = 25 [json_name = "metric_query"];

  repeated string depends_on = 26;

  int32 count = 27;

  map<string, string> for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message MetricQuery {
    string account_id = 1 [json_name = "account_id"];

    string expression = 2;

    string id = 3;

    string label = 4;

    bool return_data = 5 [json_name = "return_data"];

    Metric metric = 6;

    message Metric {
      map<string, string> dimensions = 1;

      string metric_name = 2 [json_name = "metric_name"];

      string namespace = 3;

      int64 period = 4;

      string stat = 5;

      string unit = 6;
    }
  }
}

//AwsCloudwatchMetricStream version is 0
message AwsCloudwatchMetricStream {
  string arn = 1;

  string creation_date = 2 [json_name = "creation_date"];

  string firehose_arn = 3 [json_name = "firehose_arn"];

  string id = 4;

  string last_update_date = 5 [json_name = "last_update_date"];

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string output_format = 8 [json_name = "output_format"];

  string role_arn = 9 [json_name = "role_arn"];

  string state = 10;

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  repeated ExcludeFilter exclude_filter = 13 [json_name = "exclude_filter"];

  repeated IncludeFilter include_filter = 14 [json_name = "include_filter"];

  repeated Timeouts timeouts = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message ExcludeFilter {
    string namespace = 1;
  }

  message IncludeFilter {
    string namespace = 1;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsCloudwatchQueryDefinition version is 0
message AwsCloudwatchQueryDefinition {
  string id = 1;

  repeated string log_group_names = 2 [json_name = "log_group_names"];

  string name = 3;

  string query_definition_id = 4 [json_name = "query_definition_id"];

  string query_string = 5 [json_name = "query_string"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsCodeartifactDomain version is 0
message AwsCodeartifactDomain {
  string arn = 1;

  int64 asset_size_bytes = 2 [json_name = "asset_size_bytes"];

  string created_time = 3 [json_name = "created_time"];

  string domain = 4;

  string encryption_key = 5 [json_name = "encryption_key"];

  string id = 6;

  string owner = 7;

  int64 repository_count = 8 [json_name = "repository_count"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsCodeartifactDomainPermissionsPolicy version is 0
message AwsCodeartifactDomainPermissionsPolicy {
  string domain = 1;

  string domain_owner = 2 [json_name = "domain_owner"];

  string id = 3;

  string policy_document = 4 [json_name = "policy_document"];

  string policy_revision = 5 [json_name = "policy_revision"];

  string resource_arn = 6 [json_name = "resource_arn"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsCodeartifactRepository version is 0
message AwsCodeartifactRepository {
  string administrator_account = 1 [json_name = "administrator_account"];

  string arn = 2;

  string description = 3;

  string domain = 4;

  string domain_owner = 5 [json_name = "domain_owner"];

  string id = 6;

  string repository = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  ExternalConnections external_connections = 10 [json_name = "external_connections"];

  repeated Upstream upstream = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message ExternalConnections {
    string external_connection_name = 1 [json_name = "external_connection_name"];

    string package_format = 2 [json_name = "package_format"];

    string status = 3;
  }

  message Upstream {
    string repository_name = 1 [json_name = "repository_name"];
  }
}

//AwsCodeartifactRepositoryPermissionsPolicy version is 0
message AwsCodeartifactRepositoryPermissionsPolicy {
  string domain = 1;

  string domain_owner = 2 [json_name = "domain_owner"];

  string id = 3;

  string policy_document = 4 [json_name = "policy_document"];

  string policy_revision = 5 [json_name = "policy_revision"];

  string repository = 6;

  string resource_arn = 7 [json_name = "resource_arn"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCodebuildProject version is 0
message AwsCodebuildProject {
  string arn = 1;

  bool badge_enabled = 2 [json_name = "badge_enabled"];

  string badge_url = 3 [json_name = "badge_url"];

  int64 build_timeout = 4 [json_name = "build_timeout"];

  int64 concurrent_build_limit = 5 [json_name = "concurrent_build_limit"];

  string description = 6;

  string encryption_key = 7 [json_name = "encryption_key"];

  string id = 8;

  string name = 9;

  int64 queued_timeout = 10 [json_name = "queued_timeout"];

  string service_role = 11 [json_name = "service_role"];

  string source_version = 12 [json_name = "source_version"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  Artifacts artifacts = 15;

  BuildBatchConfig build_batch_config = 16 [json_name = "build_batch_config"];

  Cache cache = 17;

  Environment environment = 18;

  repeated FileSystemLocations file_system_locations = 19 [json_name = "file_system_locations"];

  LogsConfig logs_config = 20 [json_name = "logs_config"];

  repeated SecondaryArtifacts secondary_artifacts = 21 [json_name = "secondary_artifacts"];

  repeated SecondarySources secondary_sources = 22 [json_name = "secondary_sources"];

  Source source = 23;

  VpcConfig vpc_config = 24 [json_name = "vpc_config"];

  repeated string depends_on = 25;

  int32 count = 26;

  map<string, string> for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message Artifacts {
    string artifact_identifier = 1 [json_name = "artifact_identifier"];

    bool encryption_disabled = 2 [json_name = "encryption_disabled"];

    string location = 3;

    string name = 4;

    string namespace_type = 5 [json_name = "namespace_type"];

    bool override_artifact_name = 6 [json_name = "override_artifact_name"];

    string packaging = 7;

    string path = 8;

    string type = 9;
  }

  message BuildBatchConfig {
    bool combine_artifacts = 1 [json_name = "combine_artifacts"];

    string service_role = 2 [json_name = "service_role"];

    int64 timeout_in_mins = 3 [json_name = "timeout_in_mins"];

    Restrictions restrictions = 4;

    message Restrictions {
      repeated string compute_types_allowed = 1 [json_name = "compute_types_allowed"];

      int64 maximum_builds_allowed = 2 [json_name = "maximum_builds_allowed"];
    }
  }

  message Cache {
    string location = 1;

    repeated string modes = 2;

    string type = 3;
  }

  message Environment {
    string certificate = 1;

    string compute_type = 2 [json_name = "compute_type"];

    string image = 3;

    string image_pull_credentials_type = 4 [json_name = "image_pull_credentials_type"];

    bool privileged_mode = 5 [json_name = "privileged_mode"];

    string type = 6;

    repeated EnvironmentVariable environment_variable = 7 [json_name = "environment_variable"];

    RegistryCredential registry_credential = 8 [json_name = "registry_credential"];

    message EnvironmentVariable {
      string name = 1;

      string type = 2;

      string value = 3;
    }

    message RegistryCredential {
      string credential = 1;

      string credential_provider = 2 [json_name = "credential_provider"];
    }
  }

  message FileSystemLocations {
    string identifier = 1;

    string location = 2;

    string mount_options = 3 [json_name = "mount_options"];

    string mount_point = 4 [json_name = "mount_point"];

    string type = 5;
  }

  message LogsConfig {
    CloudwatchLogs cloudwatch_logs = 1 [json_name = "cloudwatch_logs"];

    S3Logs s3_logs = 2 [json_name = "s3_logs"];

    message CloudwatchLogs {
      string group_name = 1 [json_name = "group_name"];

      string status = 2;

      string stream_name = 3 [json_name = "stream_name"];
    }

    message S3Logs {
      bool encryption_disabled = 1 [json_name = "encryption_disabled"];

      string location = 2;

      string status = 3;
    }
  }

  message SecondaryArtifacts {
    string artifact_identifier = 1 [json_name = "artifact_identifier"];

    bool encryption_disabled = 2 [json_name = "encryption_disabled"];

    string location = 3;

    string name = 4;

    string namespace_type = 5 [json_name = "namespace_type"];

    bool override_artifact_name = 6 [json_name = "override_artifact_name"];

    string packaging = 7;

    string path = 8;

    string type = 9;
  }

  message SecondarySources {
    string buildspec = 1;

    int64 git_clone_depth = 2 [json_name = "git_clone_depth"];

    bool insecure_ssl = 3 [json_name = "insecure_ssl"];

    string location = 4;

    bool report_build_status = 5 [json_name = "report_build_status"];

    string source_identifier = 6 [json_name = "source_identifier"];

    string type = 7;

    Auth auth = 8;

    BuildStatusConfig build_status_config = 9 [json_name = "build_status_config"];

    GitSubmodulesConfig git_submodules_config = 10 [json_name = "git_submodules_config"];

    message Auth {
      string resource = 1;

      string type = 2;
    }

    message BuildStatusConfig {
      string context = 1;

      string target_url = 2 [json_name = "target_url"];
    }

    message GitSubmodulesConfig {
      bool fetch_submodules = 1 [json_name = "fetch_submodules"];
    }
  }

  message Source {
    string buildspec = 1;

    int64 git_clone_depth = 2 [json_name = "git_clone_depth"];

    bool insecure_ssl = 3 [json_name = "insecure_ssl"];

    string location = 4;

    bool report_build_status = 5 [json_name = "report_build_status"];

    string type = 6;

    Auth auth = 7;

    BuildStatusConfig build_status_config = 8 [json_name = "build_status_config"];

    GitSubmodulesConfig git_submodules_config = 9 [json_name = "git_submodules_config"];

    message Auth {
      string resource = 1;

      string type = 2;
    }

    message BuildStatusConfig {
      string context = 1;

      string target_url = 2 [json_name = "target_url"];
    }

    message GitSubmodulesConfig {
      bool fetch_submodules = 1 [json_name = "fetch_submodules"];
    }
  }

  message VpcConfig {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnets = 2;

    string vpc_id = 3 [json_name = "vpc_id"];
  }
}

//AwsCodebuildReportGroup version is 0
message AwsCodebuildReportGroup {
  string arn = 1;

  string created = 2;

  bool delete_reports = 3 [json_name = "delete_reports"];

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string type = 8;

  ExportConfig export_config = 9 [json_name = "export_config"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message ExportConfig {
    string type = 1;

    S3Destination s3_destination = 2 [json_name = "s3_destination"];

    message S3Destination {
      string bucket = 1;

      bool encryption_disabled = 2 [json_name = "encryption_disabled"];

      string encryption_key = 3 [json_name = "encryption_key"];

      string packaging = 4;

      string path = 5;
    }
  }
}

//AwsCodebuildSourceCredential version is 0
message AwsCodebuildSourceCredential {
  string arn = 1;

  string auth_type = 2 [json_name = "auth_type"];

  string id = 3;

  string server_type = 4 [json_name = "server_type"];

  string token = 5;

  string user_name = 6 [json_name = "user_name"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsCodebuildWebhook version is 0
message AwsCodebuildWebhook {
  string branch_filter = 1 [json_name = "branch_filter"];

  string build_type = 2 [json_name = "build_type"];

  string id = 3;

  string payload_url = 4 [json_name = "payload_url"];

  string project_name = 5 [json_name = "project_name"];

  string secret = 6;

  string url = 7;

  repeated FilterGroup filter_group = 8 [json_name = "filter_group"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message FilterGroup {
    repeated Filter filter = 1;

    message Filter {
      bool exclude_matched_pattern = 1 [json_name = "exclude_matched_pattern"];

      string pattern = 2;

      string type = 3;
    }
  }
}

//AwsCodecommitApprovalRuleTemplate version is 0
message AwsCodecommitApprovalRuleTemplate {
  string approval_rule_template_id = 1 [json_name = "approval_rule_template_id"];

  string content = 2;

  string creation_date = 3 [json_name = "creation_date"];

  string description = 4;

  string id = 5;

  string last_modified_date = 6 [json_name = "last_modified_date"];

  string last_modified_user = 7 [json_name = "last_modified_user"];

  string name = 8;

  string rule_content_sha256 = 9 [json_name = "rule_content_sha256"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsCodecommitApprovalRuleTemplateAssociation version is 0
message AwsCodecommitApprovalRuleTemplateAssociation {
  string approval_rule_template_name = 1 [json_name = "approval_rule_template_name"];

  string id = 2;

  string repository_name = 3 [json_name = "repository_name"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsCodecommitRepository version is 0
message AwsCodecommitRepository {
  string arn = 1;

  string clone_url_http = 2 [json_name = "clone_url_http"];

  string clone_url_ssh = 3 [json_name = "clone_url_ssh"];

  string default_branch = 4 [json_name = "default_branch"];

  string description = 5;

  string id = 6;

  string repository_id = 7 [json_name = "repository_id"];

  string repository_name = 8 [json_name = "repository_name"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsCodecommitTrigger version is 0
message AwsCodecommitTrigger {
  string configuration_id = 1 [json_name = "configuration_id"];

  string id = 2;

  string repository_name = 3 [json_name = "repository_name"];

  repeated Trigger trigger = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Trigger {
    repeated string branches = 1;

    string custom_data = 2 [json_name = "custom_data"];

    string destination_arn = 3 [json_name = "destination_arn"];

    repeated string events = 4;

    string name = 5;
  }
}

//AwsCodedeployApp version is 0
message AwsCodedeployApp {
  string application_id = 1 [json_name = "application_id"];

  string arn = 2;

  string compute_platform = 3 [json_name = "compute_platform"];

  string github_account_name = 4 [json_name = "github_account_name"];

  string id = 5;

  bool linked_to_github = 6 [json_name = "linked_to_github"];

  string name = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsCodedeployDeploymentConfig version is 0
message AwsCodedeployDeploymentConfig {
  string compute_platform = 1 [json_name = "compute_platform"];

  string deployment_config_id = 2 [json_name = "deployment_config_id"];

  string deployment_config_name = 3 [json_name = "deployment_config_name"];

  string id = 4;

  MinimumHealthyHosts minimum_healthy_hosts = 5 [json_name = "minimum_healthy_hosts"];

  TrafficRoutingConfig traffic_routing_config = 6 [json_name = "traffic_routing_config"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message MinimumHealthyHosts {
    string type = 1;

    int64 value = 2;
  }

  message TrafficRoutingConfig {
    string type = 1;

    TimeBasedCanary time_based_canary = 2 [json_name = "time_based_canary"];

    TimeBasedLinear time_based_linear = 3 [json_name = "time_based_linear"];

    message TimeBasedCanary {
      int64 interval = 1;

      int64 percentage = 2;
    }

    message TimeBasedLinear {
      int64 interval = 1;

      int64 percentage = 2;
    }
  }
}

//AwsCodedeployDeploymentGroup version is 0
message AwsCodedeployDeploymentGroup {
  string app_name = 1 [json_name = "app_name"];

  string arn = 2;

  repeated string autoscaling_groups = 3 [json_name = "autoscaling_groups"];

  string compute_platform = 4 [json_name = "compute_platform"];

  string deployment_config_name = 5 [json_name = "deployment_config_name"];

  string deployment_group_id = 6 [json_name = "deployment_group_id"];

  string deployment_group_name = 7 [json_name = "deployment_group_name"];

  string id = 8;

  string service_role_arn = 9 [json_name = "service_role_arn"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  AlarmConfiguration alarm_configuration = 12 [json_name = "alarm_configuration"];

  AutoRollbackConfiguration auto_rollback_configuration = 13 [json_name = "auto_rollback_configuration"];

  BlueGreenDeploymentConfig blue_green_deployment_config = 14 [json_name = "blue_green_deployment_config"];

  DeploymentStyle deployment_style = 15 [json_name = "deployment_style"];

  repeated Ec2TagFilter ec2_tag_filter = 16 [json_name = "ec2_tag_filter"];

  repeated Ec2TagSet ec2_tag_set = 17 [json_name = "ec2_tag_set"];

  EcsService ecs_service = 18 [json_name = "ecs_service"];

  LoadBalancerInfo load_balancer_info = 19 [json_name = "load_balancer_info"];

  repeated OnPremisesInstanceTagFilter on_premises_instance_tag_filter = 20 [json_name = "on_premises_instance_tag_filter"];

  repeated TriggerConfiguration trigger_configuration = 21 [json_name = "trigger_configuration"];

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message AlarmConfiguration {
    repeated string alarms = 1;

    bool enabled = 2;

    bool ignore_poll_alarm_failure = 3 [json_name = "ignore_poll_alarm_failure"];
  }

  message AutoRollbackConfiguration {
    bool enabled = 1;

    repeated string events = 2;
  }

  message BlueGreenDeploymentConfig {
    DeploymentReadyOption deployment_ready_option = 1 [json_name = "deployment_ready_option"];

    GreenFleetProvisioningOption green_fleet_provisioning_option = 2 [json_name = "green_fleet_provisioning_option"];

    TerminateBlueInstancesOnDeploymentSuccess terminate_blue_instances_on_deployment_success = 3 [json_name = "terminate_blue_instances_on_deployment_success"];

    message DeploymentReadyOption {
      string action_on_timeout = 1 [json_name = "action_on_timeout"];

      int64 wait_time_in_minutes = 2 [json_name = "wait_time_in_minutes"];
    }

    message GreenFleetProvisioningOption {
      string action = 1;
    }

    message TerminateBlueInstancesOnDeploymentSuccess {
      string action = 1;

      int64 termination_wait_time_in_minutes = 2 [json_name = "termination_wait_time_in_minutes"];
    }
  }

  message DeploymentStyle {
    string deployment_option = 1 [json_name = "deployment_option"];

    string deployment_type = 2 [json_name = "deployment_type"];
  }

  message Ec2TagFilter {
    string key = 1;

    string type = 2;

    string value = 3;
  }

  message Ec2TagSet {
    repeated Ec2TagFilter ec2_tag_filter = 1 [json_name = "ec2_tag_filter"];

    message Ec2TagFilter {
      string key = 1;

      string type = 2;

      string value = 3;
    }
  }

  message EcsService {
    string cluster_name = 1 [json_name = "cluster_name"];

    string service_name = 2 [json_name = "service_name"];
  }

  message LoadBalancerInfo {
    repeated ElbInfo elb_info = 1 [json_name = "elb_info"];

    repeated TargetGroupInfo target_group_info = 2 [json_name = "target_group_info"];

    TargetGroupPairInfo target_group_pair_info = 3 [json_name = "target_group_pair_info"];

    message ElbInfo {
      string name = 1;
    }

    message TargetGroupInfo {
      string name = 1;
    }

    message TargetGroupPairInfo {
      ProdTrafficRoute prod_traffic_route = 1 [json_name = "prod_traffic_route"];

      repeated TargetGroup target_group = 2 [json_name = "target_group"];

      TestTrafficRoute test_traffic_route = 3 [json_name = "test_traffic_route"];

      message ProdTrafficRoute {
        repeated string listener_arns = 1 [json_name = "listener_arns"];
      }

      message TargetGroup {
        string name = 1;
      }

      message TestTrafficRoute {
        repeated string listener_arns = 1 [json_name = "listener_arns"];
      }
    }
  }

  message OnPremisesInstanceTagFilter {
    string key = 1;

    string type = 2;

    string value = 3;
  }

  message TriggerConfiguration {
    repeated string trigger_events = 1 [json_name = "trigger_events"];

    string trigger_name = 2 [json_name = "trigger_name"];

    string trigger_target_arn = 3 [json_name = "trigger_target_arn"];
  }
}

//AwsCodepipeline version is 0
message AwsCodepipeline {
  string arn = 1;

  string id = 2;

  string name = 3;

  string role_arn = 4 [json_name = "role_arn"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated ArtifactStore artifact_store = 7 [json_name = "artifact_store"];

  repeated Stage stage = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message ArtifactStore {
    string location = 1;

    string region = 2;

    string type = 3;

    EncryptionKey encryption_key = 4 [json_name = "encryption_key"];

    message EncryptionKey {
      string id = 1;

      string type = 2;
    }
  }

  message Stage {
    string name = 1;

    repeated Action action = 2;

    message Action {
      string category = 1;

      map<string, string> configuration = 2;

      repeated string input_artifacts = 3 [json_name = "input_artifacts"];

      string name = 4;

      string namespace = 5;

      repeated string output_artifacts = 6 [json_name = "output_artifacts"];

      string owner = 7;

      string provider = 8;

      string region = 9;

      string role_arn = 10 [json_name = "role_arn"];

      int64 run_order = 11 [json_name = "run_order"];

      string version = 12;
    }
  }
}

//AwsCodepipelineWebhook version is 0
message AwsCodepipelineWebhook {
  string authentication = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  string target_action = 6 [json_name = "target_action"];

  string target_pipeline = 7 [json_name = "target_pipeline"];

  string url = 8;

  AuthenticationConfiguration authentication_configuration = 9 [json_name = "authentication_configuration"];

  repeated Filter filter = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message AuthenticationConfiguration {
    string allowed_ip_range = 1 [json_name = "allowed_ip_range"];

    string secret_token = 2 [json_name = "secret_token"];
  }

  message Filter {
    string json_path = 1 [json_name = "json_path"];

    string match_equals = 2 [json_name = "match_equals"];
  }
}

//AwsCodestarconnectionsConnection version is 0
message AwsCodestarconnectionsConnection {
  string arn = 1;

  string connection_status = 2 [json_name = "connection_status"];

  string host_arn = 3 [json_name = "host_arn"];

  string id = 4;

  string name = 5;

  string provider_type = 6 [json_name = "provider_type"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsCodestarconnectionsHost version is 0
message AwsCodestarconnectionsHost {
  string arn = 1;

  string id = 2;

  string name = 3;

  string provider_endpoint = 4 [json_name = "provider_endpoint"];

  string provider_type = 5 [json_name = "provider_type"];

  string status = 6;

  VpcConfiguration vpc_configuration = 7 [json_name = "vpc_configuration"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message VpcConfiguration {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnet_ids = 2 [json_name = "subnet_ids"];

    string tls_certificate = 3 [json_name = "tls_certificate"];

    string vpc_id = 4 [json_name = "vpc_id"];
  }
}

//AwsCodestarnotificationsNotificationRule version is 0
message AwsCodestarnotificationsNotificationRule {
  string arn = 1;

  string detail_type = 2 [json_name = "detail_type"];

  repeated string event_type_ids = 3 [json_name = "event_type_ids"];

  string id = 4;

  string name = 5;

  string resource = 6;

  string status = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated Target target = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Target {
    string address = 1;

    string status = 2;

    string type = 3;
  }
}

//AwsCognitoIdentityPool version is 0
message AwsCognitoIdentityPool {
  bool allow_classic_flow = 1 [json_name = "allow_classic_flow"];

  bool allow_unauthenticated_identities = 2 [json_name = "allow_unauthenticated_identities"];

  string arn = 3;

  string developer_provider_name = 4 [json_name = "developer_provider_name"];

  string id = 5;

  string identity_pool_name = 6 [json_name = "identity_pool_name"];

  repeated string openid_connect_provider_arns = 7 [json_name = "openid_connect_provider_arns"];

  repeated string saml_provider_arns = 8 [json_name = "saml_provider_arns"];

  map<string, string> supported_login_providers = 9 [json_name = "supported_login_providers"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  repeated CognitoIdentityProviders cognito_identity_providers = 12 [json_name = "cognito_identity_providers"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message CognitoIdentityProviders {
    string client_id = 1 [json_name = "client_id"];

    string provider_name = 2 [json_name = "provider_name"];

    bool server_side_token_check = 3 [json_name = "server_side_token_check"];
  }
}

//AwsCognitoIdentityPoolRolesAttachment version is 0
message AwsCognitoIdentityPoolRolesAttachment {
  string id = 1;

  string identity_pool_id = 2 [json_name = "identity_pool_id"];

  map<string, string> roles = 3;

  repeated RoleMapping role_mapping = 4 [json_name = "role_mapping"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message RoleMapping {
    string ambiguous_role_resolution = 1 [json_name = "ambiguous_role_resolution"];

    string identity_provider = 2 [json_name = "identity_provider"];

    string type = 3;

    repeated MappingRule mapping_rule = 4 [json_name = "mapping_rule"];

    message MappingRule {
      string claim = 1;

      string match_type = 2 [json_name = "match_type"];

      string role_arn = 3 [json_name = "role_arn"];

      string value = 4;
    }
  }
}

//AwsCognitoIdentityProvider version is 0
message AwsCognitoIdentityProvider {
  map<string, string> attribute_mapping = 1 [json_name = "attribute_mapping"];

  string id = 2;

  repeated string idp_identifiers = 3 [json_name = "idp_identifiers"];

  map<string, string> provider_details = 4 [json_name = "provider_details"];

  string provider_name = 5 [json_name = "provider_name"];

  string provider_type = 6 [json_name = "provider_type"];

  string user_pool_id = 7 [json_name = "user_pool_id"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsCognitoResourceServer version is 0
message AwsCognitoResourceServer {
  string id = 1;

  string identifier = 2;

  string name = 3;

  repeated string scope_identifiers = 4 [json_name = "scope_identifiers"];

  string user_pool_id = 5 [json_name = "user_pool_id"];

  repeated Scope scope = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Scope {
    string scope_description = 1 [json_name = "scope_description"];

    string scope_name = 2 [json_name = "scope_name"];
  }
}

//AwsCognitoUserGroup version is 0
message AwsCognitoUserGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  int64 precedence = 4;

  string role_arn = 5 [json_name = "role_arn"];

  string user_pool_id = 6 [json_name = "user_pool_id"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsCognitoUserPool version is 0
message AwsCognitoUserPool {
  repeated string alias_attributes = 1 [json_name = "alias_attributes"];

  string arn = 2;

  repeated string auto_verified_attributes = 3 [json_name = "auto_verified_attributes"];

  string creation_date = 4 [json_name = "creation_date"];

  string custom_domain = 5 [json_name = "custom_domain"];

  string domain = 6;

  string email_verification_message = 7 [json_name = "email_verification_message"];

  string email_verification_subject = 8 [json_name = "email_verification_subject"];

  string endpoint = 9;

  int64 estimated_number_of_users = 10 [json_name = "estimated_number_of_users"];

  string id = 11;

  string last_modified_date = 12 [json_name = "last_modified_date"];

  string mfa_configuration = 13 [json_name = "mfa_configuration"];

  string name = 14;

  string sms_authentication_message = 15 [json_name = "sms_authentication_message"];

  string sms_verification_message = 16 [json_name = "sms_verification_message"];

  map<string, string> tags = 17;

  map<string, string> tags_all = 18 [json_name = "tags_all"];

  repeated string username_attributes = 19 [json_name = "username_attributes"];

  AccountRecoverySetting account_recovery_setting = 20 [json_name = "account_recovery_setting"];

  AdminCreateUserConfig admin_create_user_config = 21 [json_name = "admin_create_user_config"];

  DeviceConfiguration device_configuration = 22 [json_name = "device_configuration"];

  EmailConfiguration email_configuration = 23 [json_name = "email_configuration"];

  LambdaConfig lambda_config = 24 [json_name = "lambda_config"];

  PasswordPolicy password_policy = 25 [json_name = "password_policy"];

  repeated Schema schema = 26;

  SmsConfiguration sms_configuration = 27 [json_name = "sms_configuration"];

  SoftwareTokenMfaConfiguration software_token_mfa_configuration = 28 [json_name = "software_token_mfa_configuration"];

  UserPoolAddOns user_pool_add_ons = 29 [json_name = "user_pool_add_ons"];

  UsernameConfiguration username_configuration = 30 [json_name = "username_configuration"];

  VerificationMessageTemplate verification_message_template = 31 [json_name = "verification_message_template"];

  repeated string depends_on = 32;

  int32 count = 33;

  map<string, string> for_each = 34;

  string provider = 35;

  terraform.meta.Lifecycle lifecycle = 36;

  message AccountRecoverySetting {
    repeated RecoveryMechanism recovery_mechanism = 1 [json_name = "recovery_mechanism"];

    message RecoveryMechanism {
      string name = 1;

      int64 priority = 2;
    }
  }

  message AdminCreateUserConfig {
    bool allow_admin_create_user_only = 1 [json_name = "allow_admin_create_user_only"];

    InviteMessageTemplate invite_message_template = 2 [json_name = "invite_message_template"];

    message InviteMessageTemplate {
      string email_message = 1 [json_name = "email_message"];

      string email_subject = 2 [json_name = "email_subject"];

      string sms_message = 3 [json_name = "sms_message"];
    }
  }

  message DeviceConfiguration {
    bool challenge_required_on_new_device = 1 [json_name = "challenge_required_on_new_device"];

    bool device_only_remembered_on_user_prompt = 2 [json_name = "device_only_remembered_on_user_prompt"];
  }

  message EmailConfiguration {
    string configuration_set = 1 [json_name = "configuration_set"];

    string email_sending_account = 2 [json_name = "email_sending_account"];

    string from_email_address = 3 [json_name = "from_email_address"];

    string reply_to_email_address = 4 [json_name = "reply_to_email_address"];

    string source_arn = 5 [json_name = "source_arn"];
  }

  message LambdaConfig {
    string create_auth_challenge = 1 [json_name = "create_auth_challenge"];

    string custom_message = 2 [json_name = "custom_message"];

    string define_auth_challenge = 3 [json_name = "define_auth_challenge"];

    string kms_key_id = 4 [json_name = "kms_key_id"];

    string post_authentication = 5 [json_name = "post_authentication"];

    string post_confirmation = 6 [json_name = "post_confirmation"];

    string pre_authentication = 7 [json_name = "pre_authentication"];

    string pre_sign_up = 8 [json_name = "pre_sign_up"];

    string pre_token_generation = 9 [json_name = "pre_token_generation"];

    string user_migration = 10 [json_name = "user_migration"];

    string verify_auth_challenge_response = 11 [json_name = "verify_auth_challenge_response"];

    CustomEmailSender custom_email_sender = 12 [json_name = "custom_email_sender"];

    CustomSmsSender custom_sms_sender = 13 [json_name = "custom_sms_sender"];

    message CustomEmailSender {
      string lambda_arn = 1 [json_name = "lambda_arn"];

      string lambda_version = 2 [json_name = "lambda_version"];
    }

    message CustomSmsSender {
      string lambda_arn = 1 [json_name = "lambda_arn"];

      string lambda_version = 2 [json_name = "lambda_version"];
    }
  }

  message PasswordPolicy {
    int64 minimum_length = 1 [json_name = "minimum_length"];

    bool require_lowercase = 2 [json_name = "require_lowercase"];

    bool require_numbers = 3 [json_name = "require_numbers"];

    bool require_symbols = 4 [json_name = "require_symbols"];

    bool require_uppercase = 5 [json_name = "require_uppercase"];

    int64 temporary_password_validity_days = 6 [json_name = "temporary_password_validity_days"];
  }

  message Schema {
    string attribute_data_type = 1 [json_name = "attribute_data_type"];

    bool developer_only_attribute = 2 [json_name = "developer_only_attribute"];

    bool mutable = 3;

    string name = 4;

    bool required = 5;

    NumberAttributeConstraints number_attribute_constraints = 6 [json_name = "number_attribute_constraints"];

    StringAttributeConstraints string_attribute_constraints = 7 [json_name = "string_attribute_constraints"];

    message NumberAttributeConstraints {
      string max_value = 1 [json_name = "max_value"];

      string min_value = 2 [json_name = "min_value"];
    }

    message StringAttributeConstraints {
      string max_length = 1 [json_name = "max_length"];

      string min_length = 2 [json_name = "min_length"];
    }
  }

  message SmsConfiguration {
    string external_id = 1 [json_name = "external_id"];

    string sns_caller_arn = 2 [json_name = "sns_caller_arn"];
  }

  message SoftwareTokenMfaConfiguration {
    bool enabled = 1;
  }

  message UserPoolAddOns {
    string advanced_security_mode = 1 [json_name = "advanced_security_mode"];
  }

  message UsernameConfiguration {
    bool case_sensitive = 1 [json_name = "case_sensitive"];
  }

  message VerificationMessageTemplate {
    string default_email_option = 1 [json_name = "default_email_option"];

    string email_message = 2 [json_name = "email_message"];

    string email_message_by_link = 3 [json_name = "email_message_by_link"];

    string email_subject = 4 [json_name = "email_subject"];

    string email_subject_by_link = 5 [json_name = "email_subject_by_link"];

    string sms_message = 6 [json_name = "sms_message"];
  }
}

//AwsCognitoUserPoolClient version is 0
message AwsCognitoUserPoolClient {
  int64 access_token_validity = 1 [json_name = "access_token_validity"];

  repeated string allowed_oauth_flows = 2 [json_name = "allowed_oauth_flows"];

  bool allowed_oauth_flows_user_pool_client = 3 [json_name = "allowed_oauth_flows_user_pool_client"];

  repeated string allowed_oauth_scopes = 4 [json_name = "allowed_oauth_scopes"];

  repeated string callback_urls = 5 [json_name = "callback_urls"];

  string client_secret = 6 [json_name = "client_secret"];

  string default_redirect_uri = 7 [json_name = "default_redirect_uri"];

  bool enable_token_revocation = 8 [json_name = "enable_token_revocation"];

  repeated string explicit_auth_flows = 9 [json_name = "explicit_auth_flows"];

  bool generate_secret = 10 [json_name = "generate_secret"];

  string id = 11;

  int64 id_token_validity = 12 [json_name = "id_token_validity"];

  repeated string logout_urls = 13 [json_name = "logout_urls"];

  string name = 14;

  string prevent_user_existence_errors = 15 [json_name = "prevent_user_existence_errors"];

  repeated string read_attributes = 16 [json_name = "read_attributes"];

  int64 refresh_token_validity = 17 [json_name = "refresh_token_validity"];

  repeated string supported_identity_providers = 18 [json_name = "supported_identity_providers"];

  string user_pool_id = 19 [json_name = "user_pool_id"];

  repeated string write_attributes = 20 [json_name = "write_attributes"];

  AnalyticsConfiguration analytics_configuration = 21 [json_name = "analytics_configuration"];

  TokenValidityUnits token_validity_units = 22 [json_name = "token_validity_units"];

  repeated string depends_on = 23;

  int32 count = 24;

  map<string, string> for_each = 25;

  string provider = 26;

  terraform.meta.Lifecycle lifecycle = 27;

  message AnalyticsConfiguration {
    string application_arn = 1 [json_name = "application_arn"];

    string application_id = 2 [json_name = "application_id"];

    string external_id = 3 [json_name = "external_id"];

    string role_arn = 4 [json_name = "role_arn"];

    bool user_data_shared = 5 [json_name = "user_data_shared"];
  }

  message TokenValidityUnits {
    string access_token = 1 [json_name = "access_token"];

    string id_token = 2 [json_name = "id_token"];

    string refresh_token = 3 [json_name = "refresh_token"];
  }
}

//AwsCognitoUserPoolDomain version is 0
message AwsCognitoUserPoolDomain {
  string aws_account_id = 1 [json_name = "aws_account_id"];

  string certificate_arn = 2 [json_name = "certificate_arn"];

  string cloudfront_distribution_arn = 3 [json_name = "cloudfront_distribution_arn"];

  string domain = 4;

  string id = 5;

  string s3_bucket = 6 [json_name = "s3_bucket"];

  string user_pool_id = 7 [json_name = "user_pool_id"];

  string version = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsCognitoUserPoolUiCustomization version is 0
message AwsCognitoUserPoolUiCustomization {
  string client_id = 1 [json_name = "client_id"];

  string creation_date = 2 [json_name = "creation_date"];

  string css = 3;

  string css_version = 4 [json_name = "css_version"];

  string id = 5;

  string image_file = 6 [json_name = "image_file"];

  string image_url = 7 [json_name = "image_url"];

  string last_modified_date = 8 [json_name = "last_modified_date"];

  string user_pool_id = 9 [json_name = "user_pool_id"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsConfigAggregateAuthorization version is 0
message AwsConfigAggregateAuthorization {
  string account_id = 1 [json_name = "account_id"];

  string arn = 2;

  string id = 3;

  string region = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsConfigConfigRule version is 0
message AwsConfigConfigRule {
  string arn = 1;

  string description = 2;

  string id = 3;

  string input_parameters = 4 [json_name = "input_parameters"];

  string maximum_execution_frequency = 5 [json_name = "maximum_execution_frequency"];

  string name = 6;

  string rule_id = 7 [json_name = "rule_id"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  Scope scope = 10;

  Source source = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Scope {
    string compliance_resource_id = 1 [json_name = "compliance_resource_id"];

    repeated string compliance_resource_types = 2 [json_name = "compliance_resource_types"];

    string tag_key = 3 [json_name = "tag_key"];

    string tag_value = 4 [json_name = "tag_value"];
  }

  message Source {
    string owner = 1;

    string source_identifier = 2 [json_name = "source_identifier"];

    repeated SourceDetail source_detail = 3 [json_name = "source_detail"];

    message SourceDetail {
      string event_source = 1 [json_name = "event_source"];

      string maximum_execution_frequency = 2 [json_name = "maximum_execution_frequency"];

      string message_type = 3 [json_name = "message_type"];
    }
  }
}

//AwsConfigConfigurationAggregator version is 0
message AwsConfigConfigurationAggregator {
  string arn = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  AccountAggregationSource account_aggregation_source = 6 [json_name = "account_aggregation_source"];

  OrganizationAggregationSource organization_aggregation_source = 7 [json_name = "organization_aggregation_source"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message AccountAggregationSource {
    repeated string account_ids = 1 [json_name = "account_ids"];

    bool all_regions = 2 [json_name = "all_regions"];

    repeated string regions = 3;
  }

  message OrganizationAggregationSource {
    bool all_regions = 1 [json_name = "all_regions"];

    repeated string regions = 2;

    string role_arn = 3 [json_name = "role_arn"];
  }
}

//AwsConfigConfigurationRecorder version is 0
message AwsConfigConfigurationRecorder {
  string id = 1;

  string name = 2;

  string role_arn = 3 [json_name = "role_arn"];

  RecordingGroup recording_group = 4 [json_name = "recording_group"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message RecordingGroup {
    bool all_supported = 1 [json_name = "all_supported"];

    bool include_global_resource_types = 2 [json_name = "include_global_resource_types"];

    repeated string resource_types = 3 [json_name = "resource_types"];
  }
}

//AwsConfigConfigurationRecorderStatus version is 0
message AwsConfigConfigurationRecorderStatus {
  string id = 1;

  bool is_enabled = 2 [json_name = "is_enabled"];

  string name = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsConfigConformancePack version is 0
message AwsConfigConformancePack {
  string arn = 1;

  string delivery_s3_bucket = 2 [json_name = "delivery_s3_bucket"];

  string delivery_s3_key_prefix = 3 [json_name = "delivery_s3_key_prefix"];

  string id = 4;

  string name = 5;

  string template_body = 6 [json_name = "template_body"];

  string template_s3_uri = 7 [json_name = "template_s3_uri"];

  repeated InputParameter input_parameter = 8 [json_name = "input_parameter"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message InputParameter {
    string parameter_name = 1 [json_name = "parameter_name"];

    string parameter_value = 2 [json_name = "parameter_value"];
  }
}

//AwsConfigDeliveryChannel version is 0
message AwsConfigDeliveryChannel {
  string id = 1;

  string name = 2;

  string s3_bucket_name = 3 [json_name = "s3_bucket_name"];

  string s3_key_prefix = 4 [json_name = "s3_key_prefix"];

  string s3_kms_key_arn = 5 [json_name = "s3_kms_key_arn"];

  string sns_topic_arn = 6 [json_name = "sns_topic_arn"];

  SnapshotDeliveryProperties snapshot_delivery_properties = 7 [json_name = "snapshot_delivery_properties"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message SnapshotDeliveryProperties {
    string delivery_frequency = 1 [json_name = "delivery_frequency"];
  }
}

//AwsConfigOrganizationConformancePack version is 0
message AwsConfigOrganizationConformancePack {
  string arn = 1;

  string delivery_s3_bucket = 2 [json_name = "delivery_s3_bucket"];

  string delivery_s3_key_prefix = 3 [json_name = "delivery_s3_key_prefix"];

  repeated string excluded_accounts = 4 [json_name = "excluded_accounts"];

  string id = 5;

  string name = 6;

  string template_body = 7 [json_name = "template_body"];

  string template_s3_uri = 8 [json_name = "template_s3_uri"];

  repeated InputParameter input_parameter = 9 [json_name = "input_parameter"];

  repeated Timeouts timeouts = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message InputParameter {
    string parameter_name = 1 [json_name = "parameter_name"];

    string parameter_value = 2 [json_name = "parameter_value"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsConfigOrganizationCustomRule version is 0
message AwsConfigOrganizationCustomRule {
  string arn = 1;

  string description = 2;

  repeated string excluded_accounts = 3 [json_name = "excluded_accounts"];

  string id = 4;

  string input_parameters = 5 [json_name = "input_parameters"];

  string lambda_function_arn = 6 [json_name = "lambda_function_arn"];

  string maximum_execution_frequency = 7 [json_name = "maximum_execution_frequency"];

  string name = 8;

  string resource_id_scope = 9 [json_name = "resource_id_scope"];

  repeated string resource_types_scope = 10 [json_name = "resource_types_scope"];

  string tag_key_scope = 11 [json_name = "tag_key_scope"];

  string tag_value_scope = 12 [json_name = "tag_value_scope"];

  repeated string trigger_types = 13 [json_name = "trigger_types"];

  repeated Timeouts timeouts = 14;

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsConfigOrganizationManagedRule version is 0
message AwsConfigOrganizationManagedRule {
  string arn = 1;

  string description = 2;

  repeated string excluded_accounts = 3 [json_name = "excluded_accounts"];

  string id = 4;

  string input_parameters = 5 [json_name = "input_parameters"];

  string maximum_execution_frequency = 6 [json_name = "maximum_execution_frequency"];

  string name = 7;

  string resource_id_scope = 8 [json_name = "resource_id_scope"];

  repeated string resource_types_scope = 9 [json_name = "resource_types_scope"];

  string rule_identifier = 10 [json_name = "rule_identifier"];

  string tag_key_scope = 11 [json_name = "tag_key_scope"];

  string tag_value_scope = 12 [json_name = "tag_value_scope"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsConfigRemediationConfiguration version is 0
message AwsConfigRemediationConfiguration {
  string arn = 1;

  bool automatic = 2;

  string config_rule_name = 3 [json_name = "config_rule_name"];

  string id = 4;

  int64 maximum_automatic_attempts = 5 [json_name = "maximum_automatic_attempts"];

  string resource_type = 6 [json_name = "resource_type"];

  int64 retry_attempt_seconds = 7 [json_name = "retry_attempt_seconds"];

  string target_id = 8 [json_name = "target_id"];

  string target_type = 9 [json_name = "target_type"];

  string target_version = 10 [json_name = "target_version"];

  ExecutionControls execution_controls = 11 [json_name = "execution_controls"];

  repeated Parameter parameter = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message ExecutionControls {
    SsmControls ssm_controls = 1 [json_name = "ssm_controls"];

    message SsmControls {
      int64 concurrent_execution_rate_percentage = 1 [json_name = "concurrent_execution_rate_percentage"];

      int64 error_percentage = 2 [json_name = "error_percentage"];
    }
  }

  message Parameter {
    string name = 1;

    string resource_value = 2 [json_name = "resource_value"];

    string static_value = 3 [json_name = "static_value"];
  }
}

//AwsConnectBotAssociation version is 0
message AwsConnectBotAssociation {
  string id = 1;

  string instance_id = 2 [json_name = "instance_id"];

  LexBot lex_bot = 3 [json_name = "lex_bot"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message LexBot {
    string lex_region = 1 [json_name = "lex_region"];

    string name = 2;
  }
}

//AwsConnectContactFlow version is 0
message AwsConnectContactFlow {
  string arn = 1;

  string contact_flow_id = 2 [json_name = "contact_flow_id"];

  string content = 3;

  string content_hash = 4 [json_name = "content_hash"];

  string description = 5;

  string filename = 6;

  string id = 7;

  string instance_id = 8 [json_name = "instance_id"];

  string name = 9;

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  string type = 12;

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsConnectHoursOfOperation version is 0
message AwsConnectHoursOfOperation {
  string description = 1;

  string hours_of_operation_arn = 2 [json_name = "hours_of_operation_arn"];

  string hours_of_operation_id = 3 [json_name = "hours_of_operation_id"];

  string id = 4;

  string instance_id = 5 [json_name = "instance_id"];

  string name = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string time_zone = 9 [json_name = "time_zone"];

  repeated Config config = 10;

  repeated Timeouts timeouts = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Config {
    string day = 1;

    EndTime end_time = 2 [json_name = "end_time"];

    StartTime start_time = 3 [json_name = "start_time"];

    message EndTime {
      int64 hours = 1;

      int64 minutes = 2;
    }

    message StartTime {
      int64 hours = 1;

      int64 minutes = 2;
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsConnectInstance version is 0
message AwsConnectInstance {
  string arn = 1;

  bool auto_resolve_best_voices_enabled = 2 [json_name = "auto_resolve_best_voices_enabled"];

  bool contact_flow_logs_enabled = 3 [json_name = "contact_flow_logs_enabled"];

  bool contact_lens_enabled = 4 [json_name = "contact_lens_enabled"];

  string created_time = 5 [json_name = "created_time"];

  string directory_id = 6 [json_name = "directory_id"];

  bool early_media_enabled = 7 [json_name = "early_media_enabled"];

  string id = 8;

  string identity_management_type = 9 [json_name = "identity_management_type"];

  bool inbound_calls_enabled = 10 [json_name = "inbound_calls_enabled"];

  string instance_alias = 11 [json_name = "instance_alias"];

  bool outbound_calls_enabled = 12 [json_name = "outbound_calls_enabled"];

  string service_role = 13 [json_name = "service_role"];

  string status = 14;

  repeated Timeouts timeouts = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsConnectLambdaFunctionAssociation version is 0
message AwsConnectLambdaFunctionAssociation {
  string function_arn = 1 [json_name = "function_arn"];

  string id = 2;

  string instance_id = 3 [json_name = "instance_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsCurReportDefinition version is 0
message AwsCurReportDefinition {
  repeated string additional_artifacts = 1 [json_name = "additional_artifacts"];

  repeated string additional_schema_elements = 2 [json_name = "additional_schema_elements"];

  string arn = 3;

  string compression = 4;

  string format = 5;

  string id = 6;

  bool refresh_closed_reports = 7 [json_name = "refresh_closed_reports"];

  string report_name = 8 [json_name = "report_name"];

  string report_versioning = 9 [json_name = "report_versioning"];

  string s3_bucket = 10 [json_name = "s3_bucket"];

  string s3_prefix = 11 [json_name = "s3_prefix"];

  string s3_region = 12 [json_name = "s3_region"];

  string time_unit = 13 [json_name = "time_unit"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;
}

//AwsCustomerGateway version is 0
message AwsCustomerGateway {
  string arn = 1;

  string bgp_asn = 2 [json_name = "bgp_asn"];

  string device_name = 3 [json_name = "device_name"];

  string id = 4;

  string ip_address = 5 [json_name = "ip_address"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string type = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsDatapipelinePipeline version is 0
message AwsDatapipelinePipeline {
  string description = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsDatasyncAgent version is 0
message AwsDatasyncAgent {
  string activation_key = 1 [json_name = "activation_key"];

  string arn = 2;

  string id = 3;

  string ip_address = 4 [json_name = "ip_address"];

  string name = 5;

  string private_link_endpoint = 6 [json_name = "private_link_endpoint"];

  repeated string security_group_arns = 7 [json_name = "security_group_arns"];

  repeated string subnet_arns = 8 [json_name = "subnet_arns"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string vpc_endpoint_id = 11 [json_name = "vpc_endpoint_id"];

  repeated Timeouts timeouts = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Timeouts {
    string create = 1;
  }
}

//AwsDatasyncLocationEfs version is 0
message AwsDatasyncLocationEfs {
  string arn = 1;

  string efs_file_system_arn = 2 [json_name = "efs_file_system_arn"];

  string id = 3;

  string subdirectory = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  string uri = 7;

  Ec2Config ec2_config = 8 [json_name = "ec2_config"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Ec2Config {
    repeated string security_group_arns = 1 [json_name = "security_group_arns"];

    string subnet_arn = 2 [json_name = "subnet_arn"];
  }
}

//AwsDatasyncLocationFsxWindowsFileSystem version is 0
message AwsDatasyncLocationFsxWindowsFileSystem {
  string arn = 1;

  string creation_time = 2 [json_name = "creation_time"];

  string domain = 3;

  string fsx_filesystem_arn = 4 [json_name = "fsx_filesystem_arn"];

  string id = 5;

  string password = 6;

  repeated string security_group_arns = 7 [json_name = "security_group_arns"];

  string subdirectory = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string uri = 11;

  string user = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsDatasyncLocationNfs version is 0
message AwsDatasyncLocationNfs {
  string arn = 1;

  string id = 2;

  string server_hostname = 3 [json_name = "server_hostname"];

  string subdirectory = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  string uri = 7;

  MountOptions mount_options = 8 [json_name = "mount_options"];

  OnPremConfig on_prem_config = 9 [json_name = "on_prem_config"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message MountOptions {
    string version = 1;
  }

  message OnPremConfig {
    repeated string agent_arns = 1 [json_name = "agent_arns"];
  }
}

//AwsDatasyncLocationS3 version is 0
message AwsDatasyncLocationS3 {
  repeated string agent_arns = 1 [json_name = "agent_arns"];

  string arn = 2;

  string id = 3;

  string s3_bucket_arn = 4 [json_name = "s3_bucket_arn"];

  string s3_storage_class = 5 [json_name = "s3_storage_class"];

  string subdirectory = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string uri = 9;

  S3Config s3_config = 10 [json_name = "s3_config"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message S3Config {
    string bucket_access_role_arn = 1 [json_name = "bucket_access_role_arn"];
  }
}

//AwsDatasyncLocationSmb version is 0
message AwsDatasyncLocationSmb {
  repeated string agent_arns = 1 [json_name = "agent_arns"];

  string arn = 2;

  string domain = 3;

  string id = 4;

  string password = 5;

  string server_hostname = 6 [json_name = "server_hostname"];

  string subdirectory = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  string uri = 10;

  string user = 11;

  MountOptions mount_options = 12 [json_name = "mount_options"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message MountOptions {
    string version = 1;
  }
}

//AwsDatasyncTask version is 0
message AwsDatasyncTask {
  string arn = 1;

  string cloudwatch_log_group_arn = 2 [json_name = "cloudwatch_log_group_arn"];

  string destination_location_arn = 3 [json_name = "destination_location_arn"];

  string id = 4;

  string name = 5;

  string source_location_arn = 6 [json_name = "source_location_arn"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  Excludes excludes = 9;

  Options options = 10;

  Schedule schedule = 11;

  repeated Timeouts timeouts = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Excludes {
    string filter_type = 1 [json_name = "filter_type"];

    string value = 2;
  }

  message Options {
    string atime = 1;

    int64 bytes_per_second = 2 [json_name = "bytes_per_second"];

    string gid = 3;

    string log_level = 4 [json_name = "log_level"];

    string mtime = 5;

    string overwrite_mode = 6 [json_name = "overwrite_mode"];

    string posix_permissions = 7 [json_name = "posix_permissions"];

    string preserve_deleted_files = 8 [json_name = "preserve_deleted_files"];

    string preserve_devices = 9 [json_name = "preserve_devices"];

    string task_queueing = 10 [json_name = "task_queueing"];

    string transfer_mode = 11 [json_name = "transfer_mode"];

    string uid = 12;

    string verify_mode = 13 [json_name = "verify_mode"];
  }

  message Schedule {
    string schedule_expression = 1 [json_name = "schedule_expression"];
  }

  message Timeouts {
    string create = 1;
  }
}

//AwsDaxCluster version is 0
message AwsDaxCluster {
  string arn = 1;

  repeated string availability_zones = 2 [json_name = "availability_zones"];

  string cluster_address = 3 [json_name = "cluster_address"];

  string cluster_name = 4 [json_name = "cluster_name"];

  string configuration_endpoint = 5 [json_name = "configuration_endpoint"];

  string description = 6;

  string iam_role_arn = 7 [json_name = "iam_role_arn"];

  string id = 8;

  string maintenance_window = 9 [json_name = "maintenance_window"];

  string node_type = 10 [json_name = "node_type"];

  repeated Nodes nodes = 11;

  string notification_topic_arn = 12 [json_name = "notification_topic_arn"];

  string parameter_group_name = 13 [json_name = "parameter_group_name"];

  int64 port = 14;

  int64 replication_factor = 15 [json_name = "replication_factor"];

  repeated string security_group_ids = 16 [json_name = "security_group_ids"];

  string subnet_group_name = 17 [json_name = "subnet_group_name"];

  map<string, string> tags = 18;

  map<string, string> tags_all = 19 [json_name = "tags_all"];

  ServerSideEncryption server_side_encryption = 20 [json_name = "server_side_encryption"];

  repeated Timeouts timeouts = 21;

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message Nodes {
    //address: string
    string address = 1;

    //availability_zone: string
    string availability_zone = 2 [json_name = "availability_zone"];

    //id: string
    string id = 3;

    //port: number
    int64 port = 4;
  }

  message ServerSideEncryption {
    bool enabled = 1;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDaxParameterGroup version is 0
message AwsDaxParameterGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  repeated Parameters parameters = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Parameters {
    string name = 1;

    string value = 2;
  }
}

//AwsDaxSubnetGroup version is 0
message AwsDaxSubnetGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  repeated string subnet_ids = 4 [json_name = "subnet_ids"];

  string vpc_id = 5 [json_name = "vpc_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsDbClusterSnapshot version is 0
message AwsDbClusterSnapshot {
  int64 allocated_storage = 1 [json_name = "allocated_storage"];

  repeated string availability_zones = 2 [json_name = "availability_zones"];

  string db_cluster_identifier = 3 [json_name = "db_cluster_identifier"];

  string db_cluster_snapshot_arn = 4 [json_name = "db_cluster_snapshot_arn"];

  string db_cluster_snapshot_identifier = 5 [json_name = "db_cluster_snapshot_identifier"];

  string engine = 6;

  string engine_version = 7 [json_name = "engine_version"];

  string id = 8;

  string kms_key_id = 9 [json_name = "kms_key_id"];

  string license_model = 10 [json_name = "license_model"];

  int64 port = 11;

  string snapshot_type = 12 [json_name = "snapshot_type"];

  string source_db_cluster_snapshot_arn = 13 [json_name = "source_db_cluster_snapshot_arn"];

  string status = 14;

  bool storage_encrypted = 15 [json_name = "storage_encrypted"];

  map<string, string> tags = 16;

  map<string, string> tags_all = 17 [json_name = "tags_all"];

  string vpc_id = 18 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 19;

  repeated string depends_on = 20;

  int32 count = 21;

  map<string, string> for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message Timeouts {
    string create = 1;
  }
}

//AwsDbEventSubscription version is 0
message AwsDbEventSubscription {
  string arn = 1;

  string customer_aws_id = 2 [json_name = "customer_aws_id"];

  bool enabled = 3;

  repeated string event_categories = 4 [json_name = "event_categories"];

  string id = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string sns_topic = 8 [json_name = "sns_topic"];

  repeated string source_ids = 9 [json_name = "source_ids"];

  string source_type = 10 [json_name = "source_type"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDbInstance version is 1
message AwsDbInstance {
  string address = 1;

  int64 allocated_storage = 2 [json_name = "allocated_storage"];

  bool allow_major_version_upgrade = 3 [json_name = "allow_major_version_upgrade"];

  bool apply_immediately = 4 [json_name = "apply_immediately"];

  string arn = 5;

  bool auto_minor_version_upgrade = 6 [json_name = "auto_minor_version_upgrade"];

  string availability_zone = 7 [json_name = "availability_zone"];

  int64 backup_retention_period = 8 [json_name = "backup_retention_period"];

  string backup_window = 9 [json_name = "backup_window"];

  string ca_cert_identifier = 10 [json_name = "ca_cert_identifier"];

  string character_set_name = 11 [json_name = "character_set_name"];

  bool copy_tags_to_snapshot = 12 [json_name = "copy_tags_to_snapshot"];

  bool customer_owned_ip_enabled = 13 [json_name = "customer_owned_ip_enabled"];

  string db_subnet_group_name = 14 [json_name = "db_subnet_group_name"];

  bool delete_automated_backups = 15 [json_name = "delete_automated_backups"];

  bool deletion_protection = 16 [json_name = "deletion_protection"];

  string domain = 17;

  string domain_iam_role_name = 18 [json_name = "domain_iam_role_name"];

  repeated string enabled_cloudwatch_logs_exports = 19 [json_name = "enabled_cloudwatch_logs_exports"];

  string endpoint = 20;

  string engine = 21;

  string engine_version = 22 [json_name = "engine_version"];

  string engine_version_actual = 23 [json_name = "engine_version_actual"];

  string final_snapshot_identifier = 24 [json_name = "final_snapshot_identifier"];

  string hosted_zone_id = 25 [json_name = "hosted_zone_id"];

  bool iam_database_authentication_enabled = 26 [json_name = "iam_database_authentication_enabled"];

  string id = 27;

  string identifier = 28;

  string identifier_prefix = 29 [json_name = "identifier_prefix"];

  string instance_class = 30 [json_name = "instance_class"];

  int64 iops = 31;

  string kms_key_id = 32 [json_name = "kms_key_id"];

  string latest_restorable_time = 33 [json_name = "latest_restorable_time"];

  string license_model = 34 [json_name = "license_model"];

  string maintenance_window = 35 [json_name = "maintenance_window"];

  int64 max_allocated_storage = 36 [json_name = "max_allocated_storage"];

  int64 monitoring_interval = 37 [json_name = "monitoring_interval"];

  string monitoring_role_arn = 38 [json_name = "monitoring_role_arn"];

  bool multi_az = 39 [json_name = "multi_az"];

  string name = 40;

  string nchar_character_set_name = 41 [json_name = "nchar_character_set_name"];

  string option_group_name = 42 [json_name = "option_group_name"];

  string parameter_group_name = 43 [json_name = "parameter_group_name"];

  string password = 44;

  bool performance_insights_enabled = 45 [json_name = "performance_insights_enabled"];

  string performance_insights_kms_key_id = 46 [json_name = "performance_insights_kms_key_id"];

  int64 performance_insights_retention_period = 47 [json_name = "performance_insights_retention_period"];

  int64 port = 48;

  bool publicly_accessible = 49 [json_name = "publicly_accessible"];

  string replica_mode = 50 [json_name = "replica_mode"];

  repeated string replicas = 51;

  string replicate_source_db = 52 [json_name = "replicate_source_db"];

  string resource_id = 53 [json_name = "resource_id"];

  repeated string security_group_names = 54 [json_name = "security_group_names"];

  bool skip_final_snapshot = 55 [json_name = "skip_final_snapshot"];

  string snapshot_identifier = 56 [json_name = "snapshot_identifier"];

  string status = 57;

  bool storage_encrypted = 58 [json_name = "storage_encrypted"];

  string storage_type = 59 [json_name = "storage_type"];

  map<string, string> tags = 60;

  map<string, string> tags_all = 61 [json_name = "tags_all"];

  string timezone = 62;

  string username = 63;

  repeated string vpc_security_group_ids = 64 [json_name = "vpc_security_group_ids"];

  RestoreToPointInTime restore_to_point_in_time = 65 [json_name = "restore_to_point_in_time"];

  S3Import s3_import = 66 [json_name = "s3_import"];

  repeated Timeouts timeouts = 67;

  repeated string depends_on = 68;

  int32 count = 69;

  map<string, string> for_each = 70;

  string provider = 71;

  terraform.meta.Lifecycle lifecycle = 72;

  message RestoreToPointInTime {
    string restore_time = 1 [json_name = "restore_time"];

    string source_db_instance_identifier = 2 [json_name = "source_db_instance_identifier"];

    string source_dbi_resource_id = 3 [json_name = "source_dbi_resource_id"];

    bool use_latest_restorable_time = 4 [json_name = "use_latest_restorable_time"];
  }

  message S3Import {
    string bucket_name = 1 [json_name = "bucket_name"];

    string bucket_prefix = 2 [json_name = "bucket_prefix"];

    string ingestion_role = 3 [json_name = "ingestion_role"];

    string source_engine = 4 [json_name = "source_engine"];

    string source_engine_version = 5 [json_name = "source_engine_version"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDbInstanceRoleAssociation version is 0
message AwsDbInstanceRoleAssociation {
  string db_instance_identifier = 1 [json_name = "db_instance_identifier"];

  string feature_name = 2 [json_name = "feature_name"];

  string id = 3;

  string role_arn = 4 [json_name = "role_arn"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsDbOptionGroup version is 0
message AwsDbOptionGroup {
  string arn = 1;

  string engine_name = 2 [json_name = "engine_name"];

  string id = 3;

  string major_engine_version = 4 [json_name = "major_engine_version"];

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  string option_group_description = 7 [json_name = "option_group_description"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated Option option = 10;

  repeated Timeouts timeouts = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Option {
    repeated string db_security_group_memberships = 1 [json_name = "db_security_group_memberships"];

    string option_name = 2 [json_name = "option_name"];

    int64 port = 3;

    string version = 4;

    repeated string vpc_security_group_memberships = 5 [json_name = "vpc_security_group_memberships"];

    repeated OptionSettings option_settings = 6 [json_name = "option_settings"];

    message OptionSettings {
      string name = 1;

      string value = 2;
    }
  }

  message Timeouts {
    string delete = 1;
  }
}

//AwsDbParameterGroup version is 0
message AwsDbParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated Parameter parameter = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Parameter {
    string apply_method = 1 [json_name = "apply_method"];

    string name = 2;

    string value = 3;
  }
}

//AwsDbProxy version is 0
message AwsDbProxy {
  string arn = 1;

  bool debug_logging = 2 [json_name = "debug_logging"];

  string endpoint = 3;

  string engine_family = 4 [json_name = "engine_family"];

  string id = 5;

  int64 idle_client_timeout = 6 [json_name = "idle_client_timeout"];

  string name = 7;

  bool require_tls = 8 [json_name = "require_tls"];

  string role_arn = 9 [json_name = "role_arn"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  repeated string vpc_security_group_ids = 12 [json_name = "vpc_security_group_ids"];

  repeated string vpc_subnet_ids = 13 [json_name = "vpc_subnet_ids"];

  repeated Auth auth = 14;

  repeated Timeouts timeouts = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message Auth {
    string auth_scheme = 1 [json_name = "auth_scheme"];

    string description = 2;

    string iam_auth = 3 [json_name = "iam_auth"];

    string secret_arn = 4 [json_name = "secret_arn"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDbProxyDefaultTargetGroup version is 0
message AwsDbProxyDefaultTargetGroup {
  string arn = 1;

  string db_proxy_name = 2 [json_name = "db_proxy_name"];

  string id = 3;

  string name = 4;

  ConnectionPoolConfig connection_pool_config = 5 [json_name = "connection_pool_config"];

  repeated Timeouts timeouts = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message ConnectionPoolConfig {
    int64 connection_borrow_timeout = 1 [json_name = "connection_borrow_timeout"];

    string init_query = 2 [json_name = "init_query"];

    int64 max_connections_percent = 3 [json_name = "max_connections_percent"];

    int64 max_idle_connections_percent = 4 [json_name = "max_idle_connections_percent"];

    repeated string session_pinning_filters = 5 [json_name = "session_pinning_filters"];
  }

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsDbProxyEndpoint version is 0
message AwsDbProxyEndpoint {
  string arn = 1;

  string db_proxy_endpoint_name = 2 [json_name = "db_proxy_endpoint_name"];

  string db_proxy_name = 3 [json_name = "db_proxy_name"];

  string endpoint = 4;

  string id = 5;

  bool is_default = 6 [json_name = "is_default"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string target_role = 9 [json_name = "target_role"];

  string vpc_id = 10 [json_name = "vpc_id"];

  repeated string vpc_security_group_ids = 11 [json_name = "vpc_security_group_ids"];

  repeated string vpc_subnet_ids = 12 [json_name = "vpc_subnet_ids"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDbProxyTarget version is 0
message AwsDbProxyTarget {
  string db_cluster_identifier = 1 [json_name = "db_cluster_identifier"];

  string db_instance_identifier = 2 [json_name = "db_instance_identifier"];

  string db_proxy_name = 3 [json_name = "db_proxy_name"];

  string endpoint = 4;

  string id = 5;

  int64 port = 6;

  string rds_resource_id = 7 [json_name = "rds_resource_id"];

  string target_arn = 8 [json_name = "target_arn"];

  string target_group_name = 9 [json_name = "target_group_name"];

  string tracked_cluster_id = 10 [json_name = "tracked_cluster_id"];

  string type = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsDbSecurityGroup version is 0
message AwsDbSecurityGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated Ingress ingress = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Ingress {
    string cidr = 1;

    string security_group_id = 2 [json_name = "security_group_id"];

    string security_group_name = 3 [json_name = "security_group_name"];

    string security_group_owner_id = 4 [json_name = "security_group_owner_id"];
  }
}

//AwsDbSnapshot version is 0
message AwsDbSnapshot {
  int64 allocated_storage = 1 [json_name = "allocated_storage"];

  string availability_zone = 2 [json_name = "availability_zone"];

  string db_instance_identifier = 3 [json_name = "db_instance_identifier"];

  string db_snapshot_arn = 4 [json_name = "db_snapshot_arn"];

  string db_snapshot_identifier = 5 [json_name = "db_snapshot_identifier"];

  bool encrypted = 6;

  string engine = 7;

  string engine_version = 8 [json_name = "engine_version"];

  string id = 9;

  int64 iops = 10;

  string kms_key_id = 11 [json_name = "kms_key_id"];

  string license_model = 12 [json_name = "license_model"];

  string option_group_name = 13 [json_name = "option_group_name"];

  int64 port = 14;

  string snapshot_type = 15 [json_name = "snapshot_type"];

  string source_db_snapshot_identifier = 16 [json_name = "source_db_snapshot_identifier"];

  string source_region = 17 [json_name = "source_region"];

  string status = 18;

  string storage_type = 19 [json_name = "storage_type"];

  map<string, string> tags = 20;

  map<string, string> tags_all = 21 [json_name = "tags_all"];

  string vpc_id = 22 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 23;

  repeated string depends_on = 24;

  int32 count = 25;

  map<string, string> for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;

  message Timeouts {
    string read = 1;
  }
}

//AwsDbSubnetGroup version is 0
message AwsDbSubnetGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  repeated string subnet_ids = 6 [json_name = "subnet_ids"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsDefaultNetworkAcl version is 0
message AwsDefaultNetworkAcl {
  string arn = 1;

  string default_network_acl_id = 2 [json_name = "default_network_acl_id"];

  string id = 3;

  string owner_id = 4 [json_name = "owner_id"];

  repeated string subnet_ids = 5 [json_name = "subnet_ids"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string vpc_id = 8 [json_name = "vpc_id"];

  repeated Egress egress = 9;

  repeated Ingress ingress = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Egress {
    string action = 1;

    string cidr_block = 2 [json_name = "cidr_block"];

    int64 from_port = 3 [json_name = "from_port"];

    int64 icmp_code = 4 [json_name = "icmp_code"];

    int64 icmp_type = 5 [json_name = "icmp_type"];

    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    string protocol = 7;

    int64 rule_no = 8 [json_name = "rule_no"];

    int64 to_port = 9 [json_name = "to_port"];
  }

  message Ingress {
    string action = 1;

    string cidr_block = 2 [json_name = "cidr_block"];

    int64 from_port = 3 [json_name = "from_port"];

    int64 icmp_code = 4 [json_name = "icmp_code"];

    int64 icmp_type = 5 [json_name = "icmp_type"];

    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    string protocol = 7;

    int64 rule_no = 8 [json_name = "rule_no"];

    int64 to_port = 9 [json_name = "to_port"];
  }
}

//AwsDefaultRouteTable version is 0
message AwsDefaultRouteTable {
  string arn = 1;

  string default_route_table_id = 2 [json_name = "default_route_table_id"];

  string id = 3;

  string owner_id = 4 [json_name = "owner_id"];

  repeated string propagating_vgws = 5 [json_name = "propagating_vgws"];

  repeated Route route = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string vpc_id = 9 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Route {
    //cidr_block: string
    string cidr_block = 1 [json_name = "cidr_block"];

    //destination_prefix_list_id: string
    string destination_prefix_list_id = 2 [json_name = "destination_prefix_list_id"];

    //egress_only_gateway_id: string
    string egress_only_gateway_id = 3 [json_name = "egress_only_gateway_id"];

    //gateway_id: string
    string gateway_id = 4 [json_name = "gateway_id"];

    //instance_id: string
    string instance_id = 5 [json_name = "instance_id"];

    //ipv6_cidr_block: string
    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    //nat_gateway_id: string
    string nat_gateway_id = 7 [json_name = "nat_gateway_id"];

    //network_interface_id: string
    string network_interface_id = 8 [json_name = "network_interface_id"];

    //transit_gateway_id: string
    string transit_gateway_id = 9 [json_name = "transit_gateway_id"];

    //vpc_endpoint_id: string
    string vpc_endpoint_id = 10 [json_name = "vpc_endpoint_id"];

    //vpc_peering_connection_id: string
    string vpc_peering_connection_id = 11 [json_name = "vpc_peering_connection_id"];
  }

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsDefaultSecurityGroup version is 1
message AwsDefaultSecurityGroup {
  string arn = 1;

  string description = 2;

  repeated Egress egress = 3;

  string id = 4;

  repeated Ingress ingress = 5;

  string name = 6;

  string owner_id = 7 [json_name = "owner_id"];

  bool revoke_rules_on_delete = 8 [json_name = "revoke_rules_on_delete"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string vpc_id = 11 [json_name = "vpc_id"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Egress {
    //cidr_blocks: list of string
    repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

    //description: string
    string description = 2;

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //ipv6_cidr_blocks: list of string
    repeated string ipv6_cidr_blocks = 4 [json_name = "ipv6_cidr_blocks"];

    //prefix_list_ids: list of string
    repeated string prefix_list_ids = 5 [json_name = "prefix_list_ids"];

    //protocol: string
    string protocol = 6;

    //security_groups: set of string
    repeated string security_groups = 7 [json_name = "security_groups"];

    //self: bool
    bool self = 8;

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }

  message Ingress {
    //cidr_blocks: list of string
    repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

    //description: string
    string description = 2;

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //ipv6_cidr_blocks: list of string
    repeated string ipv6_cidr_blocks = 4 [json_name = "ipv6_cidr_blocks"];

    //prefix_list_ids: list of string
    repeated string prefix_list_ids = 5 [json_name = "prefix_list_ids"];

    //protocol: string
    string protocol = 6;

    //security_groups: set of string
    repeated string security_groups = 7 [json_name = "security_groups"];

    //self: bool
    bool self = 8;

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }
}

//AwsDefaultSubnet version is 1
message AwsDefaultSubnet {
  string arn = 1;

  bool assign_ipv6_address_on_creation = 2 [json_name = "assign_ipv6_address_on_creation"];

  string availability_zone = 3 [json_name = "availability_zone"];

  string availability_zone_id = 4 [json_name = "availability_zone_id"];

  string cidr_block = 5 [json_name = "cidr_block"];

  string customer_owned_ipv4_pool = 6 [json_name = "customer_owned_ipv4_pool"];

  string id = 7;

  string ipv6_cidr_block = 8 [json_name = "ipv6_cidr_block"];

  string ipv6_cidr_block_association_id = 9 [json_name = "ipv6_cidr_block_association_id"];

  bool map_customer_owned_ip_on_launch = 10 [json_name = "map_customer_owned_ip_on_launch"];

  bool map_public_ip_on_launch = 11 [json_name = "map_public_ip_on_launch"];

  string outpost_arn = 12 [json_name = "outpost_arn"];

  string owner_id = 13 [json_name = "owner_id"];

  map<string, string> tags = 14;

  map<string, string> tags_all = 15 [json_name = "tags_all"];

  string vpc_id = 16 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 17;

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDefaultVpc version is 1
message AwsDefaultVpc {
  string arn = 1;

  bool assign_generated_ipv6_cidr_block = 2 [json_name = "assign_generated_ipv6_cidr_block"];

  string cidr_block = 3 [json_name = "cidr_block"];

  string default_network_acl_id = 4 [json_name = "default_network_acl_id"];

  string default_route_table_id = 5 [json_name = "default_route_table_id"];

  string default_security_group_id = 6 [json_name = "default_security_group_id"];

  string dhcp_options_id = 7 [json_name = "dhcp_options_id"];

  bool enable_classiclink = 8 [json_name = "enable_classiclink"];

  bool enable_classiclink_dns_support = 9 [json_name = "enable_classiclink_dns_support"];

  bool enable_dns_hostnames = 10 [json_name = "enable_dns_hostnames"];

  bool enable_dns_support = 11 [json_name = "enable_dns_support"];

  string id = 12;

  string instance_tenancy = 13 [json_name = "instance_tenancy"];

  string ipv4_ipam_pool_id = 14 [json_name = "ipv4_ipam_pool_id"];

  int64 ipv4_netmask_length = 15 [json_name = "ipv4_netmask_length"];

  string ipv6_association_id = 16 [json_name = "ipv6_association_id"];

  string ipv6_cidr_block = 17 [json_name = "ipv6_cidr_block"];

  string ipv6_ipam_pool_id = 18 [json_name = "ipv6_ipam_pool_id"];

  int64 ipv6_netmask_length = 19 [json_name = "ipv6_netmask_length"];

  string main_route_table_id = 20 [json_name = "main_route_table_id"];

  string owner_id = 21 [json_name = "owner_id"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  repeated string depends_on = 24;

  int32 count = 25;

  map<string, string> for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;
}

//AwsDefaultVpcDhcpOptions version is 0
message AwsDefaultVpcDhcpOptions {
  string arn = 1;

  string domain_name = 2 [json_name = "domain_name"];

  string domain_name_servers = 3 [json_name = "domain_name_servers"];

  string id = 4;

  repeated string netbios_name_servers = 5 [json_name = "netbios_name_servers"];

  string netbios_node_type = 6 [json_name = "netbios_node_type"];

  string ntp_servers = 7 [json_name = "ntp_servers"];

  string owner_id = 8 [json_name = "owner_id"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsDetectiveGraph version is 0
message AwsDetectiveGraph {
  string created_time = 1 [json_name = "created_time"];

  string graph_arn = 2 [json_name = "graph_arn"];

  string id = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsDevicefarmProject version is 0
message AwsDevicefarmProject {
  string arn = 1;

  int64 default_job_timeout_minutes = 2 [json_name = "default_job_timeout_minutes"];

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsDirectoryServiceConditionalForwarder version is 0
message AwsDirectoryServiceConditionalForwarder {
  string directory_id = 1 [json_name = "directory_id"];

  repeated string dns_ips = 2 [json_name = "dns_ips"];

  string id = 3;

  string remote_domain_name = 4 [json_name = "remote_domain_name"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsDirectoryServiceDirectory version is 0
message AwsDirectoryServiceDirectory {
  string access_url = 1 [json_name = "access_url"];

  string alias = 2;

  string description = 3;

  repeated string dns_ip_addresses = 4 [json_name = "dns_ip_addresses"];

  string edition = 5;

  bool enable_sso = 6 [json_name = "enable_sso"];

  string id = 7;

  string name = 8;

  string password = 9;

  string security_group_id = 10 [json_name = "security_group_id"];

  string short_name = 11 [json_name = "short_name"];

  string size = 12;

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  string type = 15;

  ConnectSettings connect_settings = 16 [json_name = "connect_settings"];

  VpcSettings vpc_settings = 17 [json_name = "vpc_settings"];

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message ConnectSettings {
    repeated string availability_zones = 1 [json_name = "availability_zones"];

    repeated string connect_ips = 2 [json_name = "connect_ips"];

    repeated string customer_dns_ips = 3 [json_name = "customer_dns_ips"];

    string customer_username = 4 [json_name = "customer_username"];

    repeated string subnet_ids = 5 [json_name = "subnet_ids"];

    string vpc_id = 6 [json_name = "vpc_id"];
  }

  message VpcSettings {
    repeated string availability_zones = 1 [json_name = "availability_zones"];

    repeated string subnet_ids = 2 [json_name = "subnet_ids"];

    string vpc_id = 3 [json_name = "vpc_id"];
  }
}

//AwsDirectoryServiceLogSubscription version is 0
message AwsDirectoryServiceLogSubscription {
  string directory_id = 1 [json_name = "directory_id"];

  string id = 2;

  string log_group_name = 3 [json_name = "log_group_name"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsDlmLifecyclePolicy version is 0
message AwsDlmLifecyclePolicy {
  string arn = 1;

  string description = 2;

  string execution_role_arn = 3 [json_name = "execution_role_arn"];

  string id = 4;

  string state = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  PolicyDetails policy_details = 8 [json_name = "policy_details"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message PolicyDetails {
    repeated string resource_types = 1 [json_name = "resource_types"];

    map<string, string> target_tags = 2 [json_name = "target_tags"];

    repeated Schedule schedule = 3;

    message Schedule {
      bool copy_tags = 1 [json_name = "copy_tags"];

      string name = 2;

      map<string, string> tags_to_add = 3 [json_name = "tags_to_add"];

      CreateRule create_rule = 4 [json_name = "create_rule"];

      repeated CrossRegionCopyRule cross_region_copy_rule = 5 [json_name = "cross_region_copy_rule"];

      RetainRule retain_rule = 6 [json_name = "retain_rule"];

      message CreateRule {
        int64 interval = 1;

        string interval_unit = 2 [json_name = "interval_unit"];

        repeated string times = 3;
      }

      message CrossRegionCopyRule {
        string cmk_arn = 1 [json_name = "cmk_arn"];

        bool copy_tags = 2 [json_name = "copy_tags"];

        bool encrypted = 3;

        string target = 4;

        DeprecateRule deprecate_rule = 5 [json_name = "deprecate_rule"];

        RetainRule retain_rule = 6 [json_name = "retain_rule"];

        message DeprecateRule {
          int64 interval = 1;

          string interval_unit = 2 [json_name = "interval_unit"];
        }

        message RetainRule {
          int64 interval = 1;

          string interval_unit = 2 [json_name = "interval_unit"];
        }
      }

      message RetainRule {
        int64 count = 1;
      }
    }
  }
}

//AwsDmsCertificate version is 0
message AwsDmsCertificate {
  string certificate_arn = 1 [json_name = "certificate_arn"];

  string certificate_id = 2 [json_name = "certificate_id"];

  string certificate_pem = 3 [json_name = "certificate_pem"];

  string certificate_wallet = 4 [json_name = "certificate_wallet"];

  string id = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsDmsEndpoint version is 0
message AwsDmsEndpoint {
  string certificate_arn = 1 [json_name = "certificate_arn"];

  string database_name = 2 [json_name = "database_name"];

  string endpoint_arn = 3 [json_name = "endpoint_arn"];

  string endpoint_id = 4 [json_name = "endpoint_id"];

  string endpoint_type = 5 [json_name = "endpoint_type"];

  string engine_name = 6 [json_name = "engine_name"];

  string extra_connection_attributes = 7 [json_name = "extra_connection_attributes"];

  string id = 8;

  string kms_key_arn = 9 [json_name = "kms_key_arn"];

  string password = 10;

  int64 port = 11;

  string secrets_manager_access_role_arn = 12 [json_name = "secrets_manager_access_role_arn"];

  string secrets_manager_arn = 13 [json_name = "secrets_manager_arn"];

  string server_name = 14 [json_name = "server_name"];

  string service_access_role = 15 [json_name = "service_access_role"];

  string ssl_mode = 16 [json_name = "ssl_mode"];

  map<string, string> tags = 17;

  map<string, string> tags_all = 18 [json_name = "tags_all"];

  string username = 19;

  ElasticsearchSettings elasticsearch_settings = 20 [json_name = "elasticsearch_settings"];

  KafkaSettings kafka_settings = 21 [json_name = "kafka_settings"];

  KinesisSettings kinesis_settings = 22 [json_name = "kinesis_settings"];

  MongodbSettings mongodb_settings = 23 [json_name = "mongodb_settings"];

  S3Settings s3_settings = 24 [json_name = "s3_settings"];

  repeated string depends_on = 25;

  int32 count = 26;

  map<string, string> for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message ElasticsearchSettings {
    string endpoint_uri = 1 [json_name = "endpoint_uri"];

    int64 error_retry_duration = 2 [json_name = "error_retry_duration"];

    int64 full_load_error_percentage = 3 [json_name = "full_load_error_percentage"];

    string service_access_role_arn = 4 [json_name = "service_access_role_arn"];
  }

  message KafkaSettings {
    string broker = 1;

    bool include_control_details = 2 [json_name = "include_control_details"];

    bool include_null_and_empty = 3 [json_name = "include_null_and_empty"];

    bool include_partition_value = 4 [json_name = "include_partition_value"];

    bool include_table_alter_operations = 5 [json_name = "include_table_alter_operations"];

    bool include_transaction_details = 6 [json_name = "include_transaction_details"];

    string message_format = 7 [json_name = "message_format"];

    int64 message_max_bytes = 8 [json_name = "message_max_bytes"];

    bool no_hex_prefix = 9 [json_name = "no_hex_prefix"];

    bool partition_include_schema_table = 10 [json_name = "partition_include_schema_table"];

    string sasl_password = 11 [json_name = "sasl_password"];

    string sasl_username = 12 [json_name = "sasl_username"];

    string security_protocol = 13 [json_name = "security_protocol"];

    string ssl_ca_certificate_arn = 14 [json_name = "ssl_ca_certificate_arn"];

    string ssl_client_certificate_arn = 15 [json_name = "ssl_client_certificate_arn"];

    string ssl_client_key_arn = 16 [json_name = "ssl_client_key_arn"];

    string ssl_client_key_password = 17 [json_name = "ssl_client_key_password"];

    string topic = 18;
  }

  message KinesisSettings {
    bool include_control_details = 1 [json_name = "include_control_details"];

    bool include_null_and_empty = 2 [json_name = "include_null_and_empty"];

    bool include_partition_value = 3 [json_name = "include_partition_value"];

    bool include_table_alter_operations = 4 [json_name = "include_table_alter_operations"];

    bool include_transaction_details = 5 [json_name = "include_transaction_details"];

    string message_format = 6 [json_name = "message_format"];

    bool partition_include_schema_table = 7 [json_name = "partition_include_schema_table"];

    string service_access_role_arn = 8 [json_name = "service_access_role_arn"];

    string stream_arn = 9 [json_name = "stream_arn"];
  }

  message MongodbSettings {
    string auth_mechanism = 1 [json_name = "auth_mechanism"];

    string auth_source = 2 [json_name = "auth_source"];

    string auth_type = 3 [json_name = "auth_type"];

    string docs_to_investigate = 4 [json_name = "docs_to_investigate"];

    string extract_doc_id = 5 [json_name = "extract_doc_id"];

    string nesting_level = 6 [json_name = "nesting_level"];
  }

  message S3Settings {
    string bucket_folder = 1 [json_name = "bucket_folder"];

    string bucket_name = 2 [json_name = "bucket_name"];

    string compression_type = 3 [json_name = "compression_type"];

    string csv_delimiter = 4 [json_name = "csv_delimiter"];

    string csv_row_delimiter = 5 [json_name = "csv_row_delimiter"];

    string data_format = 6 [json_name = "data_format"];

    bool date_partition_enabled = 7 [json_name = "date_partition_enabled"];

    string encryption_mode = 8 [json_name = "encryption_mode"];

    string external_table_definition = 9 [json_name = "external_table_definition"];

    bool parquet_timestamp_in_millisecond = 10 [json_name = "parquet_timestamp_in_millisecond"];

    string parquet_version = 11 [json_name = "parquet_version"];

    string server_side_encryption_kms_key_id = 12 [json_name = "server_side_encryption_kms_key_id"];

    string service_access_role_arn = 13 [json_name = "service_access_role_arn"];
  }
}

//AwsDmsEventSubscription version is 0
message AwsDmsEventSubscription {
  string arn = 1;

  bool enabled = 2;

  repeated string event_categories = 3 [json_name = "event_categories"];

  string id = 4;

  string name = 5;

  string sns_topic_arn = 6 [json_name = "sns_topic_arn"];

  repeated string source_ids = 7 [json_name = "source_ids"];

  string source_type = 8 [json_name = "source_type"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated Timeouts timeouts = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDmsReplicationInstance version is 0
message AwsDmsReplicationInstance {
  int64 allocated_storage = 1 [json_name = "allocated_storage"];

  bool allow_major_version_upgrade = 2 [json_name = "allow_major_version_upgrade"];

  bool apply_immediately = 3 [json_name = "apply_immediately"];

  bool auto_minor_version_upgrade = 4 [json_name = "auto_minor_version_upgrade"];

  string availability_zone = 5 [json_name = "availability_zone"];

  string engine_version = 6 [json_name = "engine_version"];

  string id = 7;

  string kms_key_arn = 8 [json_name = "kms_key_arn"];

  bool multi_az = 9 [json_name = "multi_az"];

  string preferred_maintenance_window = 10 [json_name = "preferred_maintenance_window"];

  bool publicly_accessible = 11 [json_name = "publicly_accessible"];

  string replication_instance_arn = 12 [json_name = "replication_instance_arn"];

  string replication_instance_class = 13 [json_name = "replication_instance_class"];

  string replication_instance_id = 14 [json_name = "replication_instance_id"];

  repeated string replication_instance_private_ips = 15 [json_name = "replication_instance_private_ips"];

  repeated string replication_instance_public_ips = 16 [json_name = "replication_instance_public_ips"];

  string replication_subnet_group_id = 17 [json_name = "replication_subnet_group_id"];

  map<string, string> tags = 18;

  map<string, string> tags_all = 19 [json_name = "tags_all"];

  repeated string vpc_security_group_ids = 20 [json_name = "vpc_security_group_ids"];

  repeated Timeouts timeouts = 21;

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDmsReplicationSubnetGroup version is 0
message AwsDmsReplicationSubnetGroup {
  string id = 1;

  string replication_subnet_group_arn = 2 [json_name = "replication_subnet_group_arn"];

  string replication_subnet_group_description = 3 [json_name = "replication_subnet_group_description"];

  string replication_subnet_group_id = 4 [json_name = "replication_subnet_group_id"];

  repeated string subnet_ids = 5 [json_name = "subnet_ids"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string vpc_id = 8 [json_name = "vpc_id"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsDmsReplicationTask version is 0
message AwsDmsReplicationTask {
  string cdc_start_position = 1 [json_name = "cdc_start_position"];

  string cdc_start_time = 2 [json_name = "cdc_start_time"];

  string id = 3;

  string migration_type = 4 [json_name = "migration_type"];

  string replication_instance_arn = 5 [json_name = "replication_instance_arn"];

  string replication_task_arn = 6 [json_name = "replication_task_arn"];

  string replication_task_id = 7 [json_name = "replication_task_id"];

  string replication_task_settings = 8 [json_name = "replication_task_settings"];

  string source_endpoint_arn = 9 [json_name = "source_endpoint_arn"];

  string table_mappings = 10 [json_name = "table_mappings"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  string target_endpoint_arn = 13 [json_name = "target_endpoint_arn"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;
}

//AwsDocdbCluster version is 0
message AwsDocdbCluster {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  repeated string availability_zones = 3 [json_name = "availability_zones"];

  int64 backup_retention_period = 4 [json_name = "backup_retention_period"];

  string cluster_identifier = 5 [json_name = "cluster_identifier"];

  string cluster_identifier_prefix = 6 [json_name = "cluster_identifier_prefix"];

  repeated string cluster_members = 7 [json_name = "cluster_members"];

  string cluster_resource_id = 8 [json_name = "cluster_resource_id"];

  string db_cluster_parameter_group_name = 9 [json_name = "db_cluster_parameter_group_name"];

  string db_subnet_group_name = 10 [json_name = "db_subnet_group_name"];

  bool deletion_protection = 11 [json_name = "deletion_protection"];

  repeated string enabled_cloudwatch_logs_exports = 12 [json_name = "enabled_cloudwatch_logs_exports"];

  string endpoint = 13;

  string engine = 14;

  string engine_version = 15 [json_name = "engine_version"];

  string final_snapshot_identifier = 16 [json_name = "final_snapshot_identifier"];

  string global_cluster_identifier = 17 [json_name = "global_cluster_identifier"];

  string hosted_zone_id = 18 [json_name = "hosted_zone_id"];

  string id = 19;

  string kms_key_id = 20 [json_name = "kms_key_id"];

  string master_password = 21 [json_name = "master_password"];

  string master_username = 22 [json_name = "master_username"];

  int64 port = 23;

  string preferred_backup_window = 24 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 25 [json_name = "preferred_maintenance_window"];

  string reader_endpoint = 26 [json_name = "reader_endpoint"];

  bool skip_final_snapshot = 27 [json_name = "skip_final_snapshot"];

  string snapshot_identifier = 28 [json_name = "snapshot_identifier"];

  bool storage_encrypted = 29 [json_name = "storage_encrypted"];

  map<string, string> tags = 30;

  map<string, string> tags_all = 31 [json_name = "tags_all"];

  repeated string vpc_security_group_ids = 32 [json_name = "vpc_security_group_ids"];

  repeated Timeouts timeouts = 33;

  repeated string depends_on = 34;

  int32 count = 35;

  map<string, string> for_each = 36;

  string provider = 37;

  terraform.meta.Lifecycle lifecycle = 38;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDocdbClusterInstance version is 0
message AwsDocdbClusterInstance {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  bool auto_minor_version_upgrade = 3 [json_name = "auto_minor_version_upgrade"];

  string availability_zone = 4 [json_name = "availability_zone"];

  string ca_cert_identifier = 5 [json_name = "ca_cert_identifier"];

  string cluster_identifier = 6 [json_name = "cluster_identifier"];

  string db_subnet_group_name = 7 [json_name = "db_subnet_group_name"];

  string dbi_resource_id = 8 [json_name = "dbi_resource_id"];

  string endpoint = 9;

  string engine = 10;

  string engine_version = 11 [json_name = "engine_version"];

  string id = 12;

  string identifier = 13;

  string identifier_prefix = 14 [json_name = "identifier_prefix"];

  string instance_class = 15 [json_name = "instance_class"];

  string kms_key_id = 16 [json_name = "kms_key_id"];

  int64 port = 17;

  string preferred_backup_window = 18 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 19 [json_name = "preferred_maintenance_window"];

  int64 promotion_tier = 20 [json_name = "promotion_tier"];

  bool publicly_accessible = 21 [json_name = "publicly_accessible"];

  bool storage_encrypted = 22 [json_name = "storage_encrypted"];

  map<string, string> tags = 23;

  map<string, string> tags_all = 24 [json_name = "tags_all"];

  bool writer = 25;

  repeated Timeouts timeouts = 26;

  repeated string depends_on = 27;

  int32 count = 28;

  map<string, string> for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDocdbClusterParameterGroup version is 0
message AwsDocdbClusterParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated Parameter parameter = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Parameter {
    string apply_method = 1 [json_name = "apply_method"];

    string name = 2;

    string value = 3;
  }
}

//AwsDocdbClusterSnapshot version is 0
message AwsDocdbClusterSnapshot {
  repeated string availability_zones = 1 [json_name = "availability_zones"];

  string db_cluster_identifier = 2 [json_name = "db_cluster_identifier"];

  string db_cluster_snapshot_arn = 3 [json_name = "db_cluster_snapshot_arn"];

  string db_cluster_snapshot_identifier = 4 [json_name = "db_cluster_snapshot_identifier"];

  string engine = 5;

  string engine_version = 6 [json_name = "engine_version"];

  string id = 7;

  string kms_key_id = 8 [json_name = "kms_key_id"];

  int64 port = 9;

  string snapshot_type = 10 [json_name = "snapshot_type"];

  string source_db_cluster_snapshot_arn = 11 [json_name = "source_db_cluster_snapshot_arn"];

  string status = 12;

  bool storage_encrypted = 13 [json_name = "storage_encrypted"];

  string vpc_id = 14 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message Timeouts {
    string create = 1;
  }
}

//AwsDocdbGlobalCluster version is 0
message AwsDocdbGlobalCluster {
  string arn = 1;

  string database_name = 2 [json_name = "database_name"];

  bool deletion_protection = 3 [json_name = "deletion_protection"];

  string engine = 4;

  string engine_version = 5 [json_name = "engine_version"];

  string global_cluster_identifier = 6 [json_name = "global_cluster_identifier"];

  repeated GlobalClusterMembers global_cluster_members = 7 [json_name = "global_cluster_members"];

  string global_cluster_resource_id = 8 [json_name = "global_cluster_resource_id"];

  string id = 9;

  string source_db_cluster_identifier = 10 [json_name = "source_db_cluster_identifier"];

  string status = 11;

  bool storage_encrypted = 12 [json_name = "storage_encrypted"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message GlobalClusterMembers {
    //db_cluster_arn: string
    string db_cluster_arn = 1 [json_name = "db_cluster_arn"];

    //is_writer: bool
    bool is_writer = 2 [json_name = "is_writer"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDocdbSubnetGroup version is 0
message AwsDocdbSubnetGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  repeated string subnet_ids = 6 [json_name = "subnet_ids"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsDxBgpPeer version is 0
message AwsDxBgpPeer {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string aws_device = 3 [json_name = "aws_device"];

  int64 bgp_asn = 4 [json_name = "bgp_asn"];

  string bgp_auth_key = 5 [json_name = "bgp_auth_key"];

  string bgp_peer_id = 6 [json_name = "bgp_peer_id"];

  string bgp_status = 7 [json_name = "bgp_status"];

  string customer_address = 8 [json_name = "customer_address"];

  string id = 9;

  string virtual_interface_id = 10 [json_name = "virtual_interface_id"];

  repeated Timeouts timeouts = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxConnection version is 0
message AwsDxConnection {
  string arn = 1;

  string aws_device = 2 [json_name = "aws_device"];

  string bandwidth = 3;

  string has_logical_redundancy = 4 [json_name = "has_logical_redundancy"];

  string id = 5;

  bool jumbo_frame_capable = 6 [json_name = "jumbo_frame_capable"];

  string location = 7;

  string name = 8;

  string owner_account_id = 9 [json_name = "owner_account_id"];

  string provider_name = 10 [json_name = "provider_name"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsDxConnectionAssociation version is 0
message AwsDxConnectionAssociation {
  string connection_id = 1 [json_name = "connection_id"];

  string id = 2;

  string lag_id = 3 [json_name = "lag_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsDxConnectionConfirmation version is 0
message AwsDxConnectionConfirmation {
  string connection_id = 1 [json_name = "connection_id"];

  string id = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsDxGateway version is 0
message AwsDxGateway {
  string amazon_side_asn = 1 [json_name = "amazon_side_asn"];

  string id = 2;

  string name = 3;

  string owner_account_id = 4 [json_name = "owner_account_id"];

  repeated Timeouts timeouts = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxGatewayAssociation version is 1
message AwsDxGatewayAssociation {
  repeated string allowed_prefixes = 1 [json_name = "allowed_prefixes"];

  string associated_gateway_id = 2 [json_name = "associated_gateway_id"];

  string associated_gateway_owner_account_id = 3 [json_name = "associated_gateway_owner_account_id"];

  string associated_gateway_type = 4 [json_name = "associated_gateway_type"];

  string dx_gateway_association_id = 5 [json_name = "dx_gateway_association_id"];

  string dx_gateway_id = 6 [json_name = "dx_gateway_id"];

  string dx_gateway_owner_account_id = 7 [json_name = "dx_gateway_owner_account_id"];

  string id = 8;

  string proposal_id = 9 [json_name = "proposal_id"];

  string vpn_gateway_id = 10 [json_name = "vpn_gateway_id"];

  repeated Timeouts timeouts = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDxGatewayAssociationProposal version is 0
message AwsDxGatewayAssociationProposal {
  repeated string allowed_prefixes = 1 [json_name = "allowed_prefixes"];

  string associated_gateway_id = 2 [json_name = "associated_gateway_id"];

  string associated_gateway_owner_account_id = 3 [json_name = "associated_gateway_owner_account_id"];

  string associated_gateway_type = 4 [json_name = "associated_gateway_type"];

  string dx_gateway_id = 5 [json_name = "dx_gateway_id"];

  string dx_gateway_owner_account_id = 6 [json_name = "dx_gateway_owner_account_id"];

  string id = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsDxHostedConnection version is 0
message AwsDxHostedConnection {
  string aws_device = 1 [json_name = "aws_device"];

  string bandwidth = 2;

  string connection_id = 3 [json_name = "connection_id"];

  string has_logical_redundancy = 4 [json_name = "has_logical_redundancy"];

  string id = 5;

  bool jumbo_frame_capable = 6 [json_name = "jumbo_frame_capable"];

  string lag_id = 7 [json_name = "lag_id"];

  string loa_issue_time = 8 [json_name = "loa_issue_time"];

  string location = 9;

  string name = 10;

  string owner_account_id = 11 [json_name = "owner_account_id"];

  string partner_name = 12 [json_name = "partner_name"];

  string provider_name = 13 [json_name = "provider_name"];

  string region = 14;

  string state = 15;

  int64 vlan = 16;

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;
}

//AwsDxHostedPrivateVirtualInterface version is 0
message AwsDxHostedPrivateVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string id = 10;

  bool jumbo_frame_capable = 11 [json_name = "jumbo_frame_capable"];

  int64 mtu = 12;

  string name = 13;

  string owner_account_id = 14 [json_name = "owner_account_id"];

  int64 vlan = 15;

  repeated Timeouts timeouts = 16;

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxHostedPrivateVirtualInterfaceAccepter version is 0
message AwsDxHostedPrivateVirtualInterfaceAccepter {
  string arn = 1;

  string dx_gateway_id = 2 [json_name = "dx_gateway_id"];

  string id = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  string virtual_interface_id = 6 [json_name = "virtual_interface_id"];

  string vpn_gateway_id = 7 [json_name = "vpn_gateway_id"];

  repeated Timeouts timeouts = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxHostedPublicVirtualInterface version is 0
message AwsDxHostedPublicVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string id = 10;

  string name = 11;

  string owner_account_id = 12 [json_name = "owner_account_id"];

  repeated string route_filter_prefixes = 13 [json_name = "route_filter_prefixes"];

  int64 vlan = 14;

  repeated Timeouts timeouts = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxHostedPublicVirtualInterfaceAccepter version is 0
message AwsDxHostedPublicVirtualInterfaceAccepter {
  string arn = 1;

  string id = 2;

  map<string, string> tags = 3;

  map<string, string> tags_all = 4 [json_name = "tags_all"];

  string virtual_interface_id = 5 [json_name = "virtual_interface_id"];

  repeated Timeouts timeouts = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxHostedTransitVirtualInterface version is 0
message AwsDxHostedTransitVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string id = 10;

  bool jumbo_frame_capable = 11 [json_name = "jumbo_frame_capable"];

  int64 mtu = 12;

  string name = 13;

  string owner_account_id = 14 [json_name = "owner_account_id"];

  int64 vlan = 15;

  repeated Timeouts timeouts = 16;

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxHostedTransitVirtualInterfaceAccepter version is 0
message AwsDxHostedTransitVirtualInterfaceAccepter {
  string arn = 1;

  string dx_gateway_id = 2 [json_name = "dx_gateway_id"];

  string id = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  string virtual_interface_id = 6 [json_name = "virtual_interface_id"];

  repeated Timeouts timeouts = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxLag version is 0
message AwsDxLag {
  string arn = 1;

  string connection_id = 2 [json_name = "connection_id"];

  string connections_bandwidth = 3 [json_name = "connections_bandwidth"];

  bool force_destroy = 4 [json_name = "force_destroy"];

  string has_logical_redundancy = 5 [json_name = "has_logical_redundancy"];

  string id = 6;

  bool jumbo_frame_capable = 7 [json_name = "jumbo_frame_capable"];

  string location = 8;

  string name = 9;

  string owner_account_id = 10 [json_name = "owner_account_id"];

  string provider_name = 11 [json_name = "provider_name"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;
}

//AwsDxPrivateVirtualInterface version is 0
message AwsDxPrivateVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string dx_gateway_id = 10 [json_name = "dx_gateway_id"];

  string id = 11;

  bool jumbo_frame_capable = 12 [json_name = "jumbo_frame_capable"];

  int64 mtu = 13;

  string name = 14;

  map<string, string> tags = 15;

  map<string, string> tags_all = 16 [json_name = "tags_all"];

  int64 vlan = 17;

  string vpn_gateway_id = 18 [json_name = "vpn_gateway_id"];

  repeated Timeouts timeouts = 19;

  repeated string depends_on = 20;

  int32 count = 21;

  map<string, string> for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDxPublicVirtualInterface version is 0
message AwsDxPublicVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string id = 10;

  string name = 11;

  repeated string route_filter_prefixes = 12 [json_name = "route_filter_prefixes"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  int64 vlan = 15;

  repeated Timeouts timeouts = 16;

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsDxTransitVirtualInterface version is 0
message AwsDxTransitVirtualInterface {
  string address_family = 1 [json_name = "address_family"];

  string amazon_address = 2 [json_name = "amazon_address"];

  string amazon_side_asn = 3 [json_name = "amazon_side_asn"];

  string arn = 4;

  string aws_device = 5 [json_name = "aws_device"];

  int64 bgp_asn = 6 [json_name = "bgp_asn"];

  string bgp_auth_key = 7 [json_name = "bgp_auth_key"];

  string connection_id = 8 [json_name = "connection_id"];

  string customer_address = 9 [json_name = "customer_address"];

  string dx_gateway_id = 10 [json_name = "dx_gateway_id"];

  string id = 11;

  bool jumbo_frame_capable = 12 [json_name = "jumbo_frame_capable"];

  int64 mtu = 13;

  string name = 14;

  map<string, string> tags = 15;

  map<string, string> tags_all = 16 [json_name = "tags_all"];

  int64 vlan = 17;

  repeated Timeouts timeouts = 18;

  repeated string depends_on = 19;

  int32 count = 20;

  map<string, string> for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDynamodbGlobalTable version is 0
message AwsDynamodbGlobalTable {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated Replica replica = 4;

  repeated Timeouts timeouts = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Replica {
    string region_name = 1 [json_name = "region_name"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsDynamodbKinesisStreamingDestination version is 0
message AwsDynamodbKinesisStreamingDestination {
  string id = 1;

  string stream_arn = 2 [json_name = "stream_arn"];

  string table_name = 3 [json_name = "table_name"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsDynamodbTable version is 1
message AwsDynamodbTable {
  string arn = 1;

  string billing_mode = 2 [json_name = "billing_mode"];

  string hash_key = 3 [json_name = "hash_key"];

  string id = 4;

  string name = 5;

  string range_key = 6 [json_name = "range_key"];

  int64 read_capacity = 7 [json_name = "read_capacity"];

  string restore_date_time = 8 [json_name = "restore_date_time"];

  string restore_source_name = 9 [json_name = "restore_source_name"];

  bool restore_to_latest_time = 10 [json_name = "restore_to_latest_time"];

  string stream_arn = 11 [json_name = "stream_arn"];

  bool stream_enabled = 12 [json_name = "stream_enabled"];

  string stream_label = 13 [json_name = "stream_label"];

  string stream_view_type = 14 [json_name = "stream_view_type"];

  string table_class = 15 [json_name = "table_class"];

  map<string, string> tags = 16;

  map<string, string> tags_all = 17 [json_name = "tags_all"];

  int64 write_capacity = 18 [json_name = "write_capacity"];

  repeated Attribute attribute = 19;

  repeated GlobalSecondaryIndex global_secondary_index = 20 [json_name = "global_secondary_index"];

  repeated LocalSecondaryIndex local_secondary_index = 21 [json_name = "local_secondary_index"];

  PointInTimeRecovery point_in_time_recovery = 22 [json_name = "point_in_time_recovery"];

  repeated Replica replica = 23;

  ServerSideEncryption server_side_encryption = 24 [json_name = "server_side_encryption"];

  repeated Timeouts timeouts = 25;

  Ttl ttl = 26;

  repeated string depends_on = 27;

  int32 count = 28;

  map<string, string> for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message Attribute {
    string name = 1;

    string type = 2;
  }

  message GlobalSecondaryIndex {
    string hash_key = 1 [json_name = "hash_key"];

    string name = 2;

    repeated string non_key_attributes = 3 [json_name = "non_key_attributes"];

    string projection_type = 4 [json_name = "projection_type"];

    string range_key = 5 [json_name = "range_key"];

    int64 read_capacity = 6 [json_name = "read_capacity"];

    int64 write_capacity = 7 [json_name = "write_capacity"];
  }

  message LocalSecondaryIndex {
    string name = 1;

    repeated string non_key_attributes = 2 [json_name = "non_key_attributes"];

    string projection_type = 3 [json_name = "projection_type"];

    string range_key = 4 [json_name = "range_key"];
  }

  message PointInTimeRecovery {
    bool enabled = 1;
  }

  message Replica {
    string kms_key_arn = 1 [json_name = "kms_key_arn"];

    string region_name = 2 [json_name = "region_name"];
  }

  message ServerSideEncryption {
    bool enabled = 1;

    string kms_key_arn = 2 [json_name = "kms_key_arn"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message Ttl {
    string attribute_name = 1 [json_name = "attribute_name"];

    bool enabled = 2;

    string kms_key_arn = 3 [json_name = "kms_key_arn"];
  }
}

//AwsDynamodbTableItem version is 0
message AwsDynamodbTableItem {
  string hash_key = 1 [json_name = "hash_key"];

  string id = 2;

  string item = 3;

  string range_key = 4 [json_name = "range_key"];

  string table_name = 5 [json_name = "table_name"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsDynamodbTag version is 0
message AwsDynamodbTag {
  string id = 1;

  string key = 2;

  string resource_arn = 3 [json_name = "resource_arn"];

  string value = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEbsDefaultKmsKey version is 0
message AwsEbsDefaultKmsKey {
  string id = 1;

  string key_arn = 2 [json_name = "key_arn"];

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsEbsEncryptionByDefault version is 0
message AwsEbsEncryptionByDefault {
  bool enabled = 1;

  string id = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsEbsSnapshot version is 0
message AwsEbsSnapshot {
  string arn = 1;

  string data_encryption_key_id = 2 [json_name = "data_encryption_key_id"];

  string description = 3;

  bool encrypted = 4;

  string id = 5;

  string kms_key_id = 6 [json_name = "kms_key_id"];

  string owner_alias = 7 [json_name = "owner_alias"];

  string owner_id = 8 [json_name = "owner_id"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string volume_id = 11 [json_name = "volume_id"];

  int64 volume_size = 12 [json_name = "volume_size"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsEbsSnapshotCopy version is 0
message AwsEbsSnapshotCopy {
  string arn = 1;

  string data_encryption_key_id = 2 [json_name = "data_encryption_key_id"];

  string description = 3;

  bool encrypted = 4;

  string id = 5;

  string kms_key_id = 6 [json_name = "kms_key_id"];

  string owner_alias = 7 [json_name = "owner_alias"];

  string owner_id = 8 [json_name = "owner_id"];

  string source_region = 9 [json_name = "source_region"];

  string source_snapshot_id = 10 [json_name = "source_snapshot_id"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  string volume_id = 13 [json_name = "volume_id"];

  int64 volume_size = 14 [json_name = "volume_size"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;
}

//AwsEbsSnapshotImport version is 0
message AwsEbsSnapshotImport {
  string arn = 1;

  string data_encryption_key_id = 2 [json_name = "data_encryption_key_id"];

  string description = 3;

  bool encrypted = 4;

  string id = 5;

  string kms_key_id = 6 [json_name = "kms_key_id"];

  string owner_alias = 7 [json_name = "owner_alias"];

  string owner_id = 8 [json_name = "owner_id"];

  string role_name = 9 [json_name = "role_name"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  int64 volume_size = 12 [json_name = "volume_size"];

  ClientData client_data = 13 [json_name = "client_data"];

  DiskContainer disk_container = 14 [json_name = "disk_container"];

  repeated Timeouts timeouts = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message ClientData {
    string comment = 1;

    string upload_end = 2 [json_name = "upload_end"];

    int64 upload_size = 3 [json_name = "upload_size"];

    string upload_start = 4 [json_name = "upload_start"];
  }

  message DiskContainer {
    string description = 1;

    string format = 2;

    string url = 3;

    UserBucket user_bucket = 4 [json_name = "user_bucket"];

    message UserBucket {
      string s3_bucket = 1 [json_name = "s3_bucket"];

      string s3_key = 2 [json_name = "s3_key"];
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsEbsVolume version is 0
message AwsEbsVolume {
  string arn = 1;

  string availability_zone = 2 [json_name = "availability_zone"];

  bool encrypted = 3;

  string id = 4;

  int64 iops = 5;

  string kms_key_id = 6 [json_name = "kms_key_id"];

  bool multi_attach_enabled = 7 [json_name = "multi_attach_enabled"];

  string outpost_arn = 8 [json_name = "outpost_arn"];

  int64 size = 9;

  string snapshot_id = 10 [json_name = "snapshot_id"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  int64 throughput = 13;

  string type = 14;

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;
}

//AwsEc2AvailabilityZoneGroup version is 0
message AwsEc2AvailabilityZoneGroup {
  string group_name = 1 [json_name = "group_name"];

  string id = 2;

  string opt_in_status = 3 [json_name = "opt_in_status"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsEc2CapacityReservation version is 0
message AwsEc2CapacityReservation {
  string arn = 1;

  string availability_zone = 2 [json_name = "availability_zone"];

  bool ebs_optimized = 3 [json_name = "ebs_optimized"];

  string end_date = 4 [json_name = "end_date"];

  string end_date_type = 5 [json_name = "end_date_type"];

  bool ephemeral_storage = 6 [json_name = "ephemeral_storage"];

  string id = 7;

  int64 instance_count = 8 [json_name = "instance_count"];

  string instance_match_criteria = 9 [json_name = "instance_match_criteria"];

  string instance_platform = 10 [json_name = "instance_platform"];

  string instance_type = 11 [json_name = "instance_type"];

  string outpost_arn = 12 [json_name = "outpost_arn"];

  string owner_id = 13 [json_name = "owner_id"];

  map<string, string> tags = 14;

  map<string, string> tags_all = 15 [json_name = "tags_all"];

  string tenancy = 16;

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;
}

//AwsEc2CarrierGateway version is 0
message AwsEc2CarrierGateway {
  string arn = 1;

  string id = 2;

  string owner_id = 3 [json_name = "owner_id"];

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  string vpc_id = 6 [json_name = "vpc_id"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsEc2ClientVpnAuthorizationRule version is 0
message AwsEc2ClientVpnAuthorizationRule {
  string access_group_id = 1 [json_name = "access_group_id"];

  bool authorize_all_groups = 2 [json_name = "authorize_all_groups"];

  string client_vpn_endpoint_id = 3 [json_name = "client_vpn_endpoint_id"];

  string description = 4;

  string id = 5;

  string target_network_cidr = 6 [json_name = "target_network_cidr"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsEc2ClientVpnEndpoint version is 0
message AwsEc2ClientVpnEndpoint {
  string arn = 1;

  string client_cidr_block = 2 [json_name = "client_cidr_block"];

  string description = 3;

  string dns_name = 4 [json_name = "dns_name"];

  repeated string dns_servers = 5 [json_name = "dns_servers"];

  string id = 6;

  string self_service_portal = 7 [json_name = "self_service_portal"];

  string server_certificate_arn = 8 [json_name = "server_certificate_arn"];

  bool split_tunnel = 9 [json_name = "split_tunnel"];

  string status = 10;

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  string transport_protocol = 13 [json_name = "transport_protocol"];

  repeated AuthenticationOptions authentication_options = 14 [json_name = "authentication_options"];

  ConnectionLogOptions connection_log_options = 15 [json_name = "connection_log_options"];

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message AuthenticationOptions {
    string active_directory_id = 1 [json_name = "active_directory_id"];

    string root_certificate_chain_arn = 2 [json_name = "root_certificate_chain_arn"];

    string saml_provider_arn = 3 [json_name = "saml_provider_arn"];

    string self_service_saml_provider_arn = 4 [json_name = "self_service_saml_provider_arn"];

    string type = 5;
  }

  message ConnectionLogOptions {
    string cloudwatch_log_group = 1 [json_name = "cloudwatch_log_group"];

    string cloudwatch_log_stream = 2 [json_name = "cloudwatch_log_stream"];

    bool enabled = 3;
  }
}

//AwsEc2ClientVpnNetworkAssociation version is 0
message AwsEc2ClientVpnNetworkAssociation {
  string association_id = 1 [json_name = "association_id"];

  string client_vpn_endpoint_id = 2 [json_name = "client_vpn_endpoint_id"];

  string id = 3;

  repeated string security_groups = 4 [json_name = "security_groups"];

  string status = 5;

  string subnet_id = 6 [json_name = "subnet_id"];

  string vpc_id = 7 [json_name = "vpc_id"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsEc2ClientVpnRoute version is 0
message AwsEc2ClientVpnRoute {
  string client_vpn_endpoint_id = 1 [json_name = "client_vpn_endpoint_id"];

  string description = 2;

  string destination_cidr_block = 3 [json_name = "destination_cidr_block"];

  string id = 4;

  string origin = 5;

  string target_vpc_subnet_id = 6 [json_name = "target_vpc_subnet_id"];

  string type = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsEc2Fleet version is 0
message AwsEc2Fleet {
  string excess_capacity_termination_policy = 1 [json_name = "excess_capacity_termination_policy"];

  string id = 2;

  bool replace_unhealthy_instances = 3 [json_name = "replace_unhealthy_instances"];

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  bool terminate_instances = 6 [json_name = "terminate_instances"];

  bool terminate_instances_with_expiration = 7 [json_name = "terminate_instances_with_expiration"];

  string type = 8;

  LaunchTemplateConfig launch_template_config = 9 [json_name = "launch_template_config"];

  OnDemandOptions on_demand_options = 10 [json_name = "on_demand_options"];

  SpotOptions spot_options = 11 [json_name = "spot_options"];

  TargetCapacitySpecification target_capacity_specification = 12 [json_name = "target_capacity_specification"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message LaunchTemplateConfig {
    LaunchTemplateSpecification launch_template_specification = 1 [json_name = "launch_template_specification"];

    repeated Override override = 2;

    message LaunchTemplateSpecification {
      string launch_template_id = 1 [json_name = "launch_template_id"];

      string launch_template_name = 2 [json_name = "launch_template_name"];

      string version = 3;
    }

    message Override {
      string availability_zone = 1 [json_name = "availability_zone"];

      string instance_type = 2 [json_name = "instance_type"];

      string max_price = 3 [json_name = "max_price"];

      int64 priority = 4;

      string subnet_id = 5 [json_name = "subnet_id"];

      int64 weighted_capacity = 6 [json_name = "weighted_capacity"];
    }
  }

  message OnDemandOptions {
    string allocation_strategy = 1 [json_name = "allocation_strategy"];
  }

  message SpotOptions {
    string allocation_strategy = 1 [json_name = "allocation_strategy"];

    string instance_interruption_behavior = 2 [json_name = "instance_interruption_behavior"];

    int64 instance_pools_to_use_count = 3 [json_name = "instance_pools_to_use_count"];

    MaintenanceStrategies maintenance_strategies = 4 [json_name = "maintenance_strategies"];

    message MaintenanceStrategies {
      CapacityRebalance capacity_rebalance = 1 [json_name = "capacity_rebalance"];

      message CapacityRebalance {
        string replacement_strategy = 1 [json_name = "replacement_strategy"];
      }
    }
  }

  message TargetCapacitySpecification {
    string default_target_capacity_type = 1 [json_name = "default_target_capacity_type"];

    int64 on_demand_target_capacity = 2 [json_name = "on_demand_target_capacity"];

    int64 spot_target_capacity = 3 [json_name = "spot_target_capacity"];

    int64 total_target_capacity = 4 [json_name = "total_target_capacity"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsEc2Host version is 0
message AwsEc2Host {
  string arn = 1;

  string auto_placement = 2 [json_name = "auto_placement"];

  string availability_zone = 3 [json_name = "availability_zone"];

  string host_recovery = 4 [json_name = "host_recovery"];

  string id = 5;

  string instance_family = 6 [json_name = "instance_family"];

  string instance_type = 7 [json_name = "instance_type"];

  string owner_id = 8 [json_name = "owner_id"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsEc2LocalGatewayRoute version is 0
message AwsEc2LocalGatewayRoute {
  string destination_cidr_block = 1 [json_name = "destination_cidr_block"];

  string id = 2;

  string local_gateway_route_table_id = 3 [json_name = "local_gateway_route_table_id"];

  string local_gateway_virtual_interface_group_id = 4 [json_name = "local_gateway_virtual_interface_group_id"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEc2LocalGatewayRouteTableVpcAssociation version is 0
message AwsEc2LocalGatewayRouteTableVpcAssociation {
  string id = 1;

  string local_gateway_id = 2 [json_name = "local_gateway_id"];

  string local_gateway_route_table_id = 3 [json_name = "local_gateway_route_table_id"];

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  string vpc_id = 6 [json_name = "vpc_id"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsEc2ManagedPrefixList version is 0
message AwsEc2ManagedPrefixList {
  string address_family = 1 [json_name = "address_family"];

  string arn = 2;

  string id = 3;

  int64 max_entries = 4 [json_name = "max_entries"];

  string name = 5;

  string owner_id = 6 [json_name = "owner_id"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  int64 version = 9;

  repeated Entry entry = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Entry {
    string cidr = 1;

    string description = 2;
  }
}

//AwsEc2ManagedPrefixListEntry version is 0
message AwsEc2ManagedPrefixListEntry {
  string cidr = 1;

  string description = 2;

  string id = 3;

  string prefix_list_id = 4 [json_name = "prefix_list_id"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEc2SubnetCidrReservation version is 0
message AwsEc2SubnetCidrReservation {
  string cidr_block = 1 [json_name = "cidr_block"];

  string description = 2;

  string id = 3;

  string owner_id = 4 [json_name = "owner_id"];

  string reservation_type = 5 [json_name = "reservation_type"];

  string subnet_id = 6 [json_name = "subnet_id"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsEc2Tag version is 0
message AwsEc2Tag {
  string id = 1;

  string key = 2;

  string resource_id = 3 [json_name = "resource_id"];

  string value = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEc2TrafficMirrorFilter version is 0
message AwsEc2TrafficMirrorFilter {
  string arn = 1;

  string description = 2;

  string id = 3;

  repeated string network_services = 4 [json_name = "network_services"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsEc2TrafficMirrorFilterRule version is 0
message AwsEc2TrafficMirrorFilterRule {
  string arn = 1;

  string description = 2;

  string destination_cidr_block = 3 [json_name = "destination_cidr_block"];

  string id = 4;

  int64 protocol = 5;

  string rule_action = 6 [json_name = "rule_action"];

  int64 rule_number = 7 [json_name = "rule_number"];

  string source_cidr_block = 8 [json_name = "source_cidr_block"];

  string traffic_direction = 9 [json_name = "traffic_direction"];

  string traffic_mirror_filter_id = 10 [json_name = "traffic_mirror_filter_id"];

  DestinationPortRange destination_port_range = 11 [json_name = "destination_port_range"];

  SourcePortRange source_port_range = 12 [json_name = "source_port_range"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message DestinationPortRange {
    int64 from_port = 1 [json_name = "from_port"];

    int64 to_port = 2 [json_name = "to_port"];
  }

  message SourcePortRange {
    int64 from_port = 1 [json_name = "from_port"];

    int64 to_port = 2 [json_name = "to_port"];
  }
}

//AwsEc2TrafficMirrorSession version is 0
message AwsEc2TrafficMirrorSession {
  string arn = 1;

  string description = 2;

  string id = 3;

  string network_interface_id = 4 [json_name = "network_interface_id"];

  string owner_id = 5 [json_name = "owner_id"];

  int64 packet_length = 6 [json_name = "packet_length"];

  int64 session_number = 7 [json_name = "session_number"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  string traffic_mirror_filter_id = 10 [json_name = "traffic_mirror_filter_id"];

  string traffic_mirror_target_id = 11 [json_name = "traffic_mirror_target_id"];

  int64 virtual_network_id = 12 [json_name = "virtual_network_id"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsEc2TrafficMirrorTarget version is 0
message AwsEc2TrafficMirrorTarget {
  string arn = 1;

  string description = 2;

  string id = 3;

  string network_interface_id = 4 [json_name = "network_interface_id"];

  string network_load_balancer_arn = 5 [json_name = "network_load_balancer_arn"];

  string owner_id = 6 [json_name = "owner_id"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsEc2TransitGateway version is 0
message AwsEc2TransitGateway {
  int64 amazon_side_asn = 1 [json_name = "amazon_side_asn"];

  string arn = 2;

  string association_default_route_table_id = 3 [json_name = "association_default_route_table_id"];

  string auto_accept_shared_attachments = 4 [json_name = "auto_accept_shared_attachments"];

  string default_route_table_association = 5 [json_name = "default_route_table_association"];

  string default_route_table_propagation = 6 [json_name = "default_route_table_propagation"];

  string description = 7;

  string dns_support = 8 [json_name = "dns_support"];

  string id = 9;

  string owner_id = 10 [json_name = "owner_id"];

  string propagation_default_route_table_id = 11 [json_name = "propagation_default_route_table_id"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string vpn_ecmp_support = 14 [json_name = "vpn_ecmp_support"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;
}

//AwsEc2TransitGatewayPeeringAttachment version is 0
message AwsEc2TransitGatewayPeeringAttachment {
  string id = 1;

  string peer_account_id = 2 [json_name = "peer_account_id"];

  string peer_region = 3 [json_name = "peer_region"];

  string peer_transit_gateway_id = 4 [json_name = "peer_transit_gateway_id"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  string transit_gateway_id = 7 [json_name = "transit_gateway_id"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsEc2TransitGatewayPeeringAttachmentAccepter version is 0
message AwsEc2TransitGatewayPeeringAttachmentAccepter {
  string id = 1;

  string peer_account_id = 2 [json_name = "peer_account_id"];

  string peer_region = 3 [json_name = "peer_region"];

  string peer_transit_gateway_id = 4 [json_name = "peer_transit_gateway_id"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  string transit_gateway_attachment_id = 7 [json_name = "transit_gateway_attachment_id"];

  string transit_gateway_id = 8 [json_name = "transit_gateway_id"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsEc2TransitGatewayPrefixListReference version is 0
message AwsEc2TransitGatewayPrefixListReference {
  bool blackhole = 1;

  string id = 2;

  string prefix_list_id = 3 [json_name = "prefix_list_id"];

  string prefix_list_owner_id = 4 [json_name = "prefix_list_owner_id"];

  string transit_gateway_attachment_id = 5 [json_name = "transit_gateway_attachment_id"];

  string transit_gateway_route_table_id = 6 [json_name = "transit_gateway_route_table_id"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsEc2TransitGatewayRoute version is 0
message AwsEc2TransitGatewayRoute {
  bool blackhole = 1;

  string destination_cidr_block = 2 [json_name = "destination_cidr_block"];

  string id = 3;

  string transit_gateway_attachment_id = 4 [json_name = "transit_gateway_attachment_id"];

  string transit_gateway_route_table_id = 5 [json_name = "transit_gateway_route_table_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsEc2TransitGatewayRouteTable version is 0
message AwsEc2TransitGatewayRouteTable {
  string arn = 1;

  bool default_association_route_table = 2 [json_name = "default_association_route_table"];

  bool default_propagation_route_table = 3 [json_name = "default_propagation_route_table"];

  string id = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  string transit_gateway_id = 7 [json_name = "transit_gateway_id"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsEc2TransitGatewayRouteTableAssociation version is 0
message AwsEc2TransitGatewayRouteTableAssociation {
  string id = 1;

  string resource_id = 2 [json_name = "resource_id"];

  string resource_type = 3 [json_name = "resource_type"];

  string transit_gateway_attachment_id = 4 [json_name = "transit_gateway_attachment_id"];

  string transit_gateway_route_table_id = 5 [json_name = "transit_gateway_route_table_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsEc2TransitGatewayRouteTablePropagation version is 0
message AwsEc2TransitGatewayRouteTablePropagation {
  string id = 1;

  string resource_id = 2 [json_name = "resource_id"];

  string resource_type = 3 [json_name = "resource_type"];

  string transit_gateway_attachment_id = 4 [json_name = "transit_gateway_attachment_id"];

  string transit_gateway_route_table_id = 5 [json_name = "transit_gateway_route_table_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsEc2TransitGatewayVpcAttachment version is 0
message AwsEc2TransitGatewayVpcAttachment {
  string appliance_mode_support = 1 [json_name = "appliance_mode_support"];

  string dns_support = 2 [json_name = "dns_support"];

  string id = 3;

  string ipv6_support = 4 [json_name = "ipv6_support"];

  repeated string subnet_ids = 5 [json_name = "subnet_ids"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  bool transit_gateway_default_route_table_association = 8 [json_name = "transit_gateway_default_route_table_association"];

  bool transit_gateway_default_route_table_propagation = 9 [json_name = "transit_gateway_default_route_table_propagation"];

  string transit_gateway_id = 10 [json_name = "transit_gateway_id"];

  string vpc_id = 11 [json_name = "vpc_id"];

  string vpc_owner_id = 12 [json_name = "vpc_owner_id"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsEc2TransitGatewayVpcAttachmentAccepter version is 0
message AwsEc2TransitGatewayVpcAttachmentAccepter {
  string appliance_mode_support = 1 [json_name = "appliance_mode_support"];

  string dns_support = 2 [json_name = "dns_support"];

  string id = 3;

  string ipv6_support = 4 [json_name = "ipv6_support"];

  repeated string subnet_ids = 5 [json_name = "subnet_ids"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string transit_gateway_attachment_id = 8 [json_name = "transit_gateway_attachment_id"];

  bool transit_gateway_default_route_table_association = 9 [json_name = "transit_gateway_default_route_table_association"];

  bool transit_gateway_default_route_table_propagation = 10 [json_name = "transit_gateway_default_route_table_propagation"];

  string transit_gateway_id = 11 [json_name = "transit_gateway_id"];

  string vpc_id = 12 [json_name = "vpc_id"];

  string vpc_owner_id = 13 [json_name = "vpc_owner_id"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;
}

//AwsEcrLifecyclePolicy version is 0
message AwsEcrLifecyclePolicy {
  string id = 1;

  string policy = 2;

  string registry_id = 3 [json_name = "registry_id"];

  string repository = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEcrPullThroughCacheRule version is 0
message AwsEcrPullThroughCacheRule {
  string ecr_repository_prefix = 1 [json_name = "ecr_repository_prefix"];

  string id = 2;

  string registry_id = 3 [json_name = "registry_id"];

  string upstream_registry_url = 4 [json_name = "upstream_registry_url"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEcrRegistryPolicy version is 0
message AwsEcrRegistryPolicy {
  string id = 1;

  string policy = 2;

  string registry_id = 3 [json_name = "registry_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsEcrRegistryScanningConfiguration version is 0
message AwsEcrRegistryScanningConfiguration {
  string id = 1;

  string registry_id = 2 [json_name = "registry_id"];

  string scan_type = 3 [json_name = "scan_type"];

  repeated Rule rule = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Rule {
    string scan_frequency = 1 [json_name = "scan_frequency"];

    repeated RepositoryFilter repository_filter = 2 [json_name = "repository_filter"];

    message RepositoryFilter {
      string filter = 1;

      string filter_type = 2 [json_name = "filter_type"];
    }
  }
}

//AwsEcrReplicationConfiguration version is 0
message AwsEcrReplicationConfiguration {
  string id = 1;

  string registry_id = 2 [json_name = "registry_id"];

  ReplicationConfiguration replication_configuration = 3 [json_name = "replication_configuration"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message ReplicationConfiguration {
    Rule rule = 1;

    message Rule {
      repeated Destination destination = 1;

      message Destination {
        string region = 1;

        string registry_id = 2 [json_name = "registry_id"];
      }
    }
  }
}

//AwsEcrRepository version is 0
message AwsEcrRepository {
  string arn = 1;

  string id = 2;

  string image_tag_mutability = 3 [json_name = "image_tag_mutability"];

  string name = 4;

  string registry_id = 5 [json_name = "registry_id"];

  string repository_url = 6 [json_name = "repository_url"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated EncryptionConfiguration encryption_configuration = 9 [json_name = "encryption_configuration"];

  ImageScanningConfiguration image_scanning_configuration = 10 [json_name = "image_scanning_configuration"];

  repeated Timeouts timeouts = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message EncryptionConfiguration {
    string encryption_type = 1 [json_name = "encryption_type"];

    string kms_key = 2 [json_name = "kms_key"];
  }

  message ImageScanningConfiguration {
    bool scan_on_push = 1 [json_name = "scan_on_push"];
  }

  message Timeouts {
    string delete = 1;
  }
}

//AwsEcrRepositoryPolicy version is 0
message AwsEcrRepositoryPolicy {
  string id = 1;

  string policy = 2;

  string registry_id = 3 [json_name = "registry_id"];

  string repository = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEcrpublicRepository version is 0
message AwsEcrpublicRepository {
  string arn = 1;

  bool force_destroy = 2 [json_name = "force_destroy"];

  string id = 3;

  string registry_id = 4 [json_name = "registry_id"];

  string repository_name = 5 [json_name = "repository_name"];

  string repository_uri = 6 [json_name = "repository_uri"];

  CatalogData catalog_data = 7 [json_name = "catalog_data"];

  repeated Timeouts timeouts = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message CatalogData {
    string about_text = 1 [json_name = "about_text"];

    repeated string architectures = 2;

    string description = 3;

    string logo_image_blob = 4 [json_name = "logo_image_blob"];

    repeated string operating_systems = 5 [json_name = "operating_systems"];

    string usage_text = 6 [json_name = "usage_text"];
  }

  message Timeouts {
    string delete = 1;
  }
}

//AwsEcrpublicRepositoryPolicy version is 0
message AwsEcrpublicRepositoryPolicy {
  string id = 1;

  string policy = 2;

  string registry_id = 3 [json_name = "registry_id"];

  string repository_name = 4 [json_name = "repository_name"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEcsAccountSettingDefault version is 0
message AwsEcsAccountSettingDefault {
  string id = 1;

  string name = 2;

  string principal_arn = 3 [json_name = "principal_arn"];

  string value = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEcsCapacityProvider version is 0
message AwsEcsCapacityProvider {
  string arn = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  AutoScalingGroupProvider auto_scaling_group_provider = 6 [json_name = "auto_scaling_group_provider"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message AutoScalingGroupProvider {
    string auto_scaling_group_arn = 1 [json_name = "auto_scaling_group_arn"];

    string managed_termination_protection = 2 [json_name = "managed_termination_protection"];

    ManagedScaling managed_scaling = 3 [json_name = "managed_scaling"];

    message ManagedScaling {
      int64 instance_warmup_period = 1 [json_name = "instance_warmup_period"];

      int64 maximum_scaling_step_size = 2 [json_name = "maximum_scaling_step_size"];

      int64 minimum_scaling_step_size = 3 [json_name = "minimum_scaling_step_size"];

      string status = 4;

      int64 target_capacity = 5 [json_name = "target_capacity"];
    }
  }
}

//AwsEcsCluster version is 0
message AwsEcsCluster {
  string arn = 1;

  repeated string capacity_providers = 2 [json_name = "capacity_providers"];

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  Configuration configuration = 7;

  repeated DefaultCapacityProviderStrategy default_capacity_provider_strategy = 8 [json_name = "default_capacity_provider_strategy"];

  repeated Setting setting = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Configuration {
    ExecuteCommandConfiguration execute_command_configuration = 1 [json_name = "execute_command_configuration"];

    message ExecuteCommandConfiguration {
      string kms_key_id = 1 [json_name = "kms_key_id"];

      string logging = 2;

      LogConfiguration log_configuration = 3 [json_name = "log_configuration"];

      message LogConfiguration {
        bool cloud_watch_encryption_enabled = 1 [json_name = "cloud_watch_encryption_enabled"];

        string cloud_watch_log_group_name = 2 [json_name = "cloud_watch_log_group_name"];

        bool s3_bucket_encryption_enabled = 3 [json_name = "s3_bucket_encryption_enabled"];

        string s3_bucket_name = 4 [json_name = "s3_bucket_name"];

        string s3_key_prefix = 5 [json_name = "s3_key_prefix"];
      }
    }
  }

  message DefaultCapacityProviderStrategy {
    int64 base = 1;

    string capacity_provider = 2 [json_name = "capacity_provider"];

    int64 weight = 3;
  }

  message Setting {
    string name = 1;

    string value = 2;
  }
}

//AwsEcsService version is 0
message AwsEcsService {
  string cluster = 1;

  int64 deployment_maximum_percent = 2 [json_name = "deployment_maximum_percent"];

  int64 deployment_minimum_healthy_percent = 3 [json_name = "deployment_minimum_healthy_percent"];

  int64 desired_count = 4 [json_name = "desired_count"];

  bool enable_ecs_managed_tags = 5 [json_name = "enable_ecs_managed_tags"];

  bool enable_execute_command = 6 [json_name = "enable_execute_command"];

  bool force_new_deployment = 7 [json_name = "force_new_deployment"];

  int64 health_check_grace_period_seconds = 8 [json_name = "health_check_grace_period_seconds"];

  string iam_role = 9 [json_name = "iam_role"];

  string id = 10;

  string launch_type = 11 [json_name = "launch_type"];

  string name = 12;

  string platform_version = 13 [json_name = "platform_version"];

  string propagate_tags = 14 [json_name = "propagate_tags"];

  string scheduling_strategy = 15 [json_name = "scheduling_strategy"];

  map<string, string> tags = 16;

  map<string, string> tags_all = 17 [json_name = "tags_all"];

  string task_definition = 18 [json_name = "task_definition"];

  bool wait_for_steady_state = 19 [json_name = "wait_for_steady_state"];

  repeated CapacityProviderStrategy capacity_provider_strategy = 20 [json_name = "capacity_provider_strategy"];

  DeploymentCircuitBreaker deployment_circuit_breaker = 21 [json_name = "deployment_circuit_breaker"];

  DeploymentController deployment_controller = 22 [json_name = "deployment_controller"];

  repeated LoadBalancer load_balancer = 23 [json_name = "load_balancer"];

  NetworkConfiguration network_configuration = 24 [json_name = "network_configuration"];

  repeated OrderedPlacementStrategy ordered_placement_strategy = 25 [json_name = "ordered_placement_strategy"];

  repeated PlacementConstraints placement_constraints = 26 [json_name = "placement_constraints"];

  ServiceRegistries service_registries = 27 [json_name = "service_registries"];

  repeated Timeouts timeouts = 28;

  repeated string depends_on = 29;

  int32 count = 30;

  map<string, string> for_each = 31;

  string provider = 32;

  terraform.meta.Lifecycle lifecycle = 33;

  message CapacityProviderStrategy {
    int64 base = 1;

    string capacity_provider = 2 [json_name = "capacity_provider"];

    int64 weight = 3;
  }

  message DeploymentCircuitBreaker {
    bool enable = 1;

    bool rollback = 2;
  }

  message DeploymentController {
    string type = 1;
  }

  message LoadBalancer {
    string container_name = 1 [json_name = "container_name"];

    int64 container_port = 2 [json_name = "container_port"];

    string elb_name = 3 [json_name = "elb_name"];

    string target_group_arn = 4 [json_name = "target_group_arn"];
  }

  message NetworkConfiguration {
    bool assign_public_ip = 1 [json_name = "assign_public_ip"];

    repeated string security_groups = 2 [json_name = "security_groups"];

    repeated string subnets = 3;
  }

  message OrderedPlacementStrategy {
    string field = 1;

    string type = 2;
  }

  message PlacementConstraints {
    string expression = 1;

    string type = 2;
  }

  message ServiceRegistries {
    string container_name = 1 [json_name = "container_name"];

    int64 container_port = 2 [json_name = "container_port"];

    int64 port = 3;

    string registry_arn = 4 [json_name = "registry_arn"];
  }

  message Timeouts {
    string delete = 1;
  }
}

//AwsEcsTag version is 0
message AwsEcsTag {
  string id = 1;

  string key = 2;

  string resource_arn = 3 [json_name = "resource_arn"];

  string value = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEcsTaskDefinition version is 1
message AwsEcsTaskDefinition {
  string arn = 1;

  string container_definitions = 2 [json_name = "container_definitions"];

  string cpu = 3;

  string execution_role_arn = 4 [json_name = "execution_role_arn"];

  string family = 5;

  string id = 6;

  string ipc_mode = 7 [json_name = "ipc_mode"];

  string memory = 8;

  string network_mode = 9 [json_name = "network_mode"];

  string pid_mode = 10 [json_name = "pid_mode"];

  repeated string requires_compatibilities = 11 [json_name = "requires_compatibilities"];

  int64 revision = 12;

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  string task_role_arn = 15 [json_name = "task_role_arn"];

  EphemeralStorage ephemeral_storage = 16 [json_name = "ephemeral_storage"];

  repeated InferenceAccelerator inference_accelerator = 17 [json_name = "inference_accelerator"];

  repeated PlacementConstraints placement_constraints = 18 [json_name = "placement_constraints"];

  ProxyConfiguration proxy_configuration = 19 [json_name = "proxy_configuration"];

  RuntimePlatform runtime_platform = 20 [json_name = "runtime_platform"];

  repeated Volume volume = 21;

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message EphemeralStorage {
    int64 size_in_gib = 1 [json_name = "size_in_gib"];
  }

  message InferenceAccelerator {
    string device_name = 1 [json_name = "device_name"];

    string device_type = 2 [json_name = "device_type"];
  }

  message PlacementConstraints {
    string expression = 1;

    string type = 2;
  }

  message ProxyConfiguration {
    string container_name = 1 [json_name = "container_name"];

    map<string, string> properties = 2;

    string type = 3;
  }

  message RuntimePlatform {
    string cpu_architecture = 1 [json_name = "cpu_architecture"];

    string operating_system_family = 2 [json_name = "operating_system_family"];
  }

  message Volume {
    string host_path = 1 [json_name = "host_path"];

    string name = 2;

    DockerVolumeConfiguration docker_volume_configuration = 3 [json_name = "docker_volume_configuration"];

    EfsVolumeConfiguration efs_volume_configuration = 4 [json_name = "efs_volume_configuration"];

    FsxWindowsFileServerVolumeConfiguration fsx_windows_file_server_volume_configuration = 5 [json_name = "fsx_windows_file_server_volume_configuration"];

    message DockerVolumeConfiguration {
      bool autoprovision = 1;

      string driver = 2;

      map<string, string> driver_opts = 3 [json_name = "driver_opts"];

      map<string, string> labels = 4;

      string scope = 5;
    }

    message EfsVolumeConfiguration {
      string file_system_id = 1 [json_name = "file_system_id"];

      string root_directory = 2 [json_name = "root_directory"];

      string transit_encryption = 3 [json_name = "transit_encryption"];

      int64 transit_encryption_port = 4 [json_name = "transit_encryption_port"];

      AuthorizationConfig authorization_config = 5 [json_name = "authorization_config"];

      message AuthorizationConfig {
        string access_point_id = 1 [json_name = "access_point_id"];

        string iam = 2;
      }
    }

    message FsxWindowsFileServerVolumeConfiguration {
      string file_system_id = 1 [json_name = "file_system_id"];

      string root_directory = 2 [json_name = "root_directory"];

      AuthorizationConfig authorization_config = 3 [json_name = "authorization_config"];

      message AuthorizationConfig {
        string credentials_parameter = 1 [json_name = "credentials_parameter"];

        string domain = 2;
      }
    }
  }
}

//AwsEcsTaskSet version is 0
message AwsEcsTaskSet {
  string arn = 1;

  string cluster = 2;

  string external_id = 3 [json_name = "external_id"];

  bool force_delete = 4 [json_name = "force_delete"];

  string id = 5;

  string launch_type = 6 [json_name = "launch_type"];

  string platform_version = 7 [json_name = "platform_version"];

  string service = 8;

  string stability_status = 9 [json_name = "stability_status"];

  string status = 10;

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  string task_definition = 13 [json_name = "task_definition"];

  string task_set_id = 14 [json_name = "task_set_id"];

  bool wait_until_stable = 15 [json_name = "wait_until_stable"];

  string wait_until_stable_timeout = 16 [json_name = "wait_until_stable_timeout"];

  repeated CapacityProviderStrategy capacity_provider_strategy = 17 [json_name = "capacity_provider_strategy"];

  repeated LoadBalancer load_balancer = 18 [json_name = "load_balancer"];

  NetworkConfiguration network_configuration = 19 [json_name = "network_configuration"];

  Scale scale = 20;

  ServiceRegistries service_registries = 21 [json_name = "service_registries"];

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message CapacityProviderStrategy {
    int64 base = 1;

    string capacity_provider = 2 [json_name = "capacity_provider"];

    int64 weight = 3;
  }

  message LoadBalancer {
    string container_name = 1 [json_name = "container_name"];

    int64 container_port = 2 [json_name = "container_port"];

    string load_balancer_name = 3 [json_name = "load_balancer_name"];

    string target_group_arn = 4 [json_name = "target_group_arn"];
  }

  message NetworkConfiguration {
    bool assign_public_ip = 1 [json_name = "assign_public_ip"];

    repeated string security_groups = 2 [json_name = "security_groups"];

    repeated string subnets = 3;
  }

  message Scale {
    string unit = 1;

    int64 value = 2;
  }

  message ServiceRegistries {
    string container_name = 1 [json_name = "container_name"];

    int64 container_port = 2 [json_name = "container_port"];

    int64 port = 3;

    string registry_arn = 4 [json_name = "registry_arn"];
  }
}

//AwsEfsAccessPoint version is 0
message AwsEfsAccessPoint {
  string arn = 1;

  string file_system_arn = 2 [json_name = "file_system_arn"];

  string file_system_id = 3 [json_name = "file_system_id"];

  string id = 4;

  string owner_id = 5 [json_name = "owner_id"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  PosixUser posix_user = 8 [json_name = "posix_user"];

  RootDirectory root_directory = 9 [json_name = "root_directory"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message PosixUser {
    int64 gid = 1;

    repeated int64 secondary_gids = 2 [json_name = "secondary_gids"];

    int64 uid = 3;
  }

  message RootDirectory {
    string path = 1;

    CreationInfo creation_info = 2 [json_name = "creation_info"];

    message CreationInfo {
      int64 owner_gid = 1 [json_name = "owner_gid"];

      int64 owner_uid = 2 [json_name = "owner_uid"];

      string permissions = 3;
    }
  }
}

//AwsEfsBackupPolicy version is 0
message AwsEfsBackupPolicy {
  string file_system_id = 1 [json_name = "file_system_id"];

  string id = 2;

  BackupPolicy backup_policy = 3 [json_name = "backup_policy"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message BackupPolicy {
    string status = 1;
  }
}

//AwsEfsFileSystem version is 0
message AwsEfsFileSystem {
  string arn = 1;

  string availability_zone_id = 2 [json_name = "availability_zone_id"];

  string availability_zone_name = 3 [json_name = "availability_zone_name"];

  string creation_token = 4 [json_name = "creation_token"];

  string dns_name = 5 [json_name = "dns_name"];

  bool encrypted = 6;

  string id = 7;

  string kms_key_id = 8 [json_name = "kms_key_id"];

  int64 number_of_mount_targets = 9 [json_name = "number_of_mount_targets"];

  string owner_id = 10 [json_name = "owner_id"];

  string performance_mode = 11 [json_name = "performance_mode"];

  int64 provisioned_throughput_in_mibps = 12 [json_name = "provisioned_throughput_in_mibps"];

  repeated SizeInBytes size_in_bytes = 13 [json_name = "size_in_bytes"];

  map<string, string> tags = 14;

  map<string, string> tags_all = 15 [json_name = "tags_all"];

  string throughput_mode = 16 [json_name = "throughput_mode"];

  repeated LifecyclePolicy lifecycle_policy = 17 [json_name = "lifecycle_policy"];

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message SizeInBytes {
    //value: number
    int64 value = 1;

    //value_in_ia: number
    int64 value_in_ia = 2 [json_name = "value_in_ia"];

    //value_in_standard: number
    int64 value_in_standard = 3 [json_name = "value_in_standard"];
  }

  message LifecyclePolicy {
    string transition_to_ia = 1 [json_name = "transition_to_ia"];

    string transition_to_primary_storage_class = 2 [json_name = "transition_to_primary_storage_class"];
  }
}

//AwsEfsFileSystemPolicy version is 0
message AwsEfsFileSystemPolicy {
  bool bypass_policy_lockout_safety_check = 1 [json_name = "bypass_policy_lockout_safety_check"];

  string file_system_id = 2 [json_name = "file_system_id"];

  string id = 3;

  string policy = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEfsMountTarget version is 0
message AwsEfsMountTarget {
  string availability_zone_id = 1 [json_name = "availability_zone_id"];

  string availability_zone_name = 2 [json_name = "availability_zone_name"];

  string dns_name = 3 [json_name = "dns_name"];

  string file_system_arn = 4 [json_name = "file_system_arn"];

  string file_system_id = 5 [json_name = "file_system_id"];

  string id = 6;

  string ip_address = 7 [json_name = "ip_address"];

  string mount_target_dns_name = 8 [json_name = "mount_target_dns_name"];

  string network_interface_id = 9 [json_name = "network_interface_id"];

  string owner_id = 10 [json_name = "owner_id"];

  repeated string security_groups = 11 [json_name = "security_groups"];

  string subnet_id = 12 [json_name = "subnet_id"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsEgressOnlyInternetGateway version is 0
message AwsEgressOnlyInternetGateway {
  string id = 1;

  map<string, string> tags = 2;

  map<string, string> tags_all = 3 [json_name = "tags_all"];

  string vpc_id = 4 [json_name = "vpc_id"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsEip version is 0
message AwsEip {
  string address = 1;

  string allocation_id = 2 [json_name = "allocation_id"];

  string associate_with_private_ip = 3 [json_name = "associate_with_private_ip"];

  string association_id = 4 [json_name = "association_id"];

  string carrier_ip = 5 [json_name = "carrier_ip"];

  string customer_owned_ip = 6 [json_name = "customer_owned_ip"];

  string customer_owned_ipv4_pool = 7 [json_name = "customer_owned_ipv4_pool"];

  string domain = 8;

  string id = 9;

  string instance = 10;

  string network_border_group = 11 [json_name = "network_border_group"];

  string network_interface = 12 [json_name = "network_interface"];

  string private_dns = 13 [json_name = "private_dns"];

  string private_ip = 14 [json_name = "private_ip"];

  string public_dns = 15 [json_name = "public_dns"];

  string public_ip = 16 [json_name = "public_ip"];

  string public_ipv4_pool = 17 [json_name = "public_ipv4_pool"];

  map<string, string> tags = 18;

  map<string, string> tags_all = 19 [json_name = "tags_all"];

  bool vpc = 20;

  repeated Timeouts timeouts = 21;

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message Timeouts {
    string delete = 1;

    string read = 2;

    string update = 3;
  }
}

//AwsEipAssociation version is 0
message AwsEipAssociation {
  string allocation_id = 1 [json_name = "allocation_id"];

  bool allow_reassociation = 2 [json_name = "allow_reassociation"];

  string id = 3;

  string instance_id = 4 [json_name = "instance_id"];

  string network_interface_id = 5 [json_name = "network_interface_id"];

  string private_ip_address = 6 [json_name = "private_ip_address"];

  string public_ip = 7 [json_name = "public_ip"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsEksAddon version is 0
message AwsEksAddon {
  string addon_name = 1 [json_name = "addon_name"];

  string addon_version = 2 [json_name = "addon_version"];

  string arn = 3;

  string cluster_name = 4 [json_name = "cluster_name"];

  string created_at = 5 [json_name = "created_at"];

  string id = 6;

  string modified_at = 7 [json_name = "modified_at"];

  string resolve_conflicts = 8 [json_name = "resolve_conflicts"];

  string service_account_role_arn = 9 [json_name = "service_account_role_arn"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsEksCluster version is 0
message AwsEksCluster {
  string arn = 1;

  repeated CertificateAuthority certificate_authority = 2 [json_name = "certificate_authority"];

  string created_at = 3 [json_name = "created_at"];

  repeated string enabled_cluster_log_types = 4 [json_name = "enabled_cluster_log_types"];

  string endpoint = 5;

  string id = 6;

  repeated Identity identity = 7;

  string name = 8;

  string platform_version = 9 [json_name = "platform_version"];

  string role_arn = 10 [json_name = "role_arn"];

  string status = 11;

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string version = 14;

  EncryptionConfig encryption_config = 15 [json_name = "encryption_config"];

  KubernetesNetworkConfig kubernetes_network_config = 16 [json_name = "kubernetes_network_config"];

  repeated Timeouts timeouts = 17;

  VpcConfig vpc_config = 18 [json_name = "vpc_config"];

  repeated string depends_on = 19;

  int32 count = 20;

  map<string, string> for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message CertificateAuthority {
    //data: string
    string data = 1;
  }

  message Identity {
    //oidc: list of object
    repeated Oidc oidc = 1;

    message Oidc {
      //issuer: string
      string issuer = 1;
    }
  }

  message EncryptionConfig {
    repeated string resources = 1;

    Provider provider = 2;

    message Provider {
      string key_arn = 1 [json_name = "key_arn"];
    }
  }

  message KubernetesNetworkConfig {
    string service_ipv4_cidr = 1 [json_name = "service_ipv4_cidr"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message VpcConfig {
    string cluster_security_group_id = 1 [json_name = "cluster_security_group_id"];

    bool endpoint_private_access = 2 [json_name = "endpoint_private_access"];

    bool endpoint_public_access = 3 [json_name = "endpoint_public_access"];

    repeated string public_access_cidrs = 4 [json_name = "public_access_cidrs"];

    repeated string security_group_ids = 5 [json_name = "security_group_ids"];

    repeated string subnet_ids = 6 [json_name = "subnet_ids"];

    string vpc_id = 7 [json_name = "vpc_id"];
  }
}

//AwsEksFargateProfile version is 0
message AwsEksFargateProfile {
  string arn = 1;

  string cluster_name = 2 [json_name = "cluster_name"];

  string fargate_profile_name = 3 [json_name = "fargate_profile_name"];

  string id = 4;

  string pod_execution_role_arn = 5 [json_name = "pod_execution_role_arn"];

  string status = 6;

  repeated string subnet_ids = 7 [json_name = "subnet_ids"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated Selector selector = 10;

  repeated Timeouts timeouts = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Selector {
    map<string, string> labels = 1;

    string namespace = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsEksIdentityProviderConfig version is 0
message AwsEksIdentityProviderConfig {
  string arn = 1;

  string cluster_name = 2 [json_name = "cluster_name"];

  string id = 3;

  string status = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  Oidc oidc = 7;

  repeated Timeouts timeouts = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Oidc {
    string client_id = 1 [json_name = "client_id"];

    string groups_claim = 2 [json_name = "groups_claim"];

    string groups_prefix = 3 [json_name = "groups_prefix"];

    string identity_provider_config_name = 4 [json_name = "identity_provider_config_name"];

    string issuer_url = 5 [json_name = "issuer_url"];

    map<string, string> required_claims = 6 [json_name = "required_claims"];

    string username_claim = 7 [json_name = "username_claim"];

    string username_prefix = 8 [json_name = "username_prefix"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsEksNodeGroup version is 0
message AwsEksNodeGroup {
  string ami_type = 1 [json_name = "ami_type"];

  string arn = 2;

  string capacity_type = 3 [json_name = "capacity_type"];

  string cluster_name = 4 [json_name = "cluster_name"];

  int64 disk_size = 5 [json_name = "disk_size"];

  bool force_update_version = 6 [json_name = "force_update_version"];

  string id = 7;

  repeated string instance_types = 8 [json_name = "instance_types"];

  map<string, string> labels = 9;

  string node_group_name = 10 [json_name = "node_group_name"];

  string node_group_name_prefix = 11 [json_name = "node_group_name_prefix"];

  string node_role_arn = 12 [json_name = "node_role_arn"];

  string release_version = 13 [json_name = "release_version"];

  repeated Resources resources = 14;

  string status = 15;

  repeated string subnet_ids = 16 [json_name = "subnet_ids"];

  map<string, string> tags = 17;

  map<string, string> tags_all = 18 [json_name = "tags_all"];

  string version = 19;

  LaunchTemplate launch_template = 20 [json_name = "launch_template"];

  RemoteAccess remote_access = 21 [json_name = "remote_access"];

  ScalingConfig scaling_config = 22 [json_name = "scaling_config"];

  repeated Taint taint = 23;

  repeated Timeouts timeouts = 24;

  UpdateConfig update_config = 25 [json_name = "update_config"];

  repeated string depends_on = 26;

  int32 count = 27;

  map<string, string> for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message Resources {
    //autoscaling_groups: list of object
    repeated AutoscalingGroups autoscaling_groups = 1 [json_name = "autoscaling_groups"];

    //remote_access_security_group_id: string
    string remote_access_security_group_id = 2 [json_name = "remote_access_security_group_id"];

    message AutoscalingGroups {
      //name: string
      string name = 1;
    }
  }

  message LaunchTemplate {
    string id = 1;

    string name = 2;

    string version = 3;
  }

  message RemoteAccess {
    string ec2_ssh_key = 1 [json_name = "ec2_ssh_key"];

    repeated string source_security_group_ids = 2 [json_name = "source_security_group_ids"];
  }

  message ScalingConfig {
    int64 desired_size = 1 [json_name = "desired_size"];

    int64 max_size = 2 [json_name = "max_size"];

    int64 min_size = 3 [json_name = "min_size"];
  }

  message Taint {
    string effect = 1;

    string key = 2;

    string value = 3;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message UpdateConfig {
    int64 max_unavailable = 1 [json_name = "max_unavailable"];

    int64 max_unavailable_percentage = 2 [json_name = "max_unavailable_percentage"];
  }
}

//AwsElasticBeanstalkApplication version is 0
message AwsElasticBeanstalkApplication {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  AppversionLifecycle appversion_lifecycle = 7 [json_name = "appversion_lifecycle"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message AppversionLifecycle {
    bool delete_source_from_s3 = 1 [json_name = "delete_source_from_s3"];

    int64 max_age_in_days = 2 [json_name = "max_age_in_days"];

    int64 max_count = 3 [json_name = "max_count"];

    string service_role = 4 [json_name = "service_role"];
  }
}

//AwsElasticBeanstalkApplicationVersion version is 0
message AwsElasticBeanstalkApplicationVersion {
  string application = 1;

  string arn = 2;

  string bucket = 3;

  string description = 4;

  bool force_delete = 5 [json_name = "force_delete"];

  string id = 6;

  string key = 7;

  string name = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsElasticBeanstalkConfigurationTemplate version is 0
message AwsElasticBeanstalkConfigurationTemplate {
  string application = 1;

  string description = 2;

  string environment_id = 3 [json_name = "environment_id"];

  string id = 4;

  string name = 5;

  string solution_stack_name = 6 [json_name = "solution_stack_name"];

  repeated Setting setting = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Setting {
    string name = 1;

    string namespace = 2;

    string resource = 3;

    string value = 4;
  }
}

//AwsElasticBeanstalkEnvironment version is 1
message AwsElasticBeanstalkEnvironment {
  repeated AllSettings all_settings = 1 [json_name = "all_settings"];

  string application = 2;

  string arn = 3;

  repeated string autoscaling_groups = 4 [json_name = "autoscaling_groups"];

  string cname = 5;

  string cname_prefix = 6 [json_name = "cname_prefix"];

  string description = 7;

  string endpoint_url = 8 [json_name = "endpoint_url"];

  string id = 9;

  repeated string instances = 10;

  repeated string launch_configurations = 11 [json_name = "launch_configurations"];

  repeated string load_balancers = 12 [json_name = "load_balancers"];

  string name = 13;

  string platform_arn = 14 [json_name = "platform_arn"];

  string poll_interval = 15 [json_name = "poll_interval"];

  repeated string queues = 16;

  string solution_stack_name = 17 [json_name = "solution_stack_name"];

  map<string, string> tags = 18;

  map<string, string> tags_all = 19 [json_name = "tags_all"];

  string template_name = 20 [json_name = "template_name"];

  string tier = 21;

  repeated string triggers = 22;

  string version_label = 23 [json_name = "version_label"];

  string wait_for_ready_timeout = 24 [json_name = "wait_for_ready_timeout"];

  repeated Setting setting = 25;

  repeated string depends_on = 26;

  int32 count = 27;

  map<string, string> for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message AllSettings {
    //name: string
    string name = 1;

    //namespace: string
    string namespace = 2;

    //resource: string
    string resource = 3;

    //value: string
    string value = 4;
  }

  message Setting {
    string name = 1;

    string namespace = 2;

    string resource = 3;

    string value = 4;
  }
}

//AwsElasticacheCluster version is 0
message AwsElasticacheCluster {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  string availability_zone = 3 [json_name = "availability_zone"];

  string az_mode = 4 [json_name = "az_mode"];

  repeated CacheNodes cache_nodes = 5 [json_name = "cache_nodes"];

  string cluster_address = 6 [json_name = "cluster_address"];

  string cluster_id = 7 [json_name = "cluster_id"];

  string configuration_endpoint = 8 [json_name = "configuration_endpoint"];

  string engine = 9;

  string engine_version = 10 [json_name = "engine_version"];

  string engine_version_actual = 11 [json_name = "engine_version_actual"];

  string final_snapshot_identifier = 12 [json_name = "final_snapshot_identifier"];

  string id = 13;

  string maintenance_window = 14 [json_name = "maintenance_window"];

  string node_type = 15 [json_name = "node_type"];

  string notification_topic_arn = 16 [json_name = "notification_topic_arn"];

  int64 num_cache_nodes = 17 [json_name = "num_cache_nodes"];

  string parameter_group_name = 18 [json_name = "parameter_group_name"];

  int64 port = 19;

  repeated string preferred_availability_zones = 20 [json_name = "preferred_availability_zones"];

  string replication_group_id = 21 [json_name = "replication_group_id"];

  repeated string security_group_ids = 22 [json_name = "security_group_ids"];

  repeated string security_group_names = 23 [json_name = "security_group_names"];

  repeated string snapshot_arns = 24 [json_name = "snapshot_arns"];

  string snapshot_name = 25 [json_name = "snapshot_name"];

  int64 snapshot_retention_limit = 26 [json_name = "snapshot_retention_limit"];

  string snapshot_window = 27 [json_name = "snapshot_window"];

  string subnet_group_name = 28 [json_name = "subnet_group_name"];

  map<string, string> tags = 29;

  map<string, string> tags_all = 30 [json_name = "tags_all"];

  repeated string depends_on = 31;

  int32 count = 32;

  map<string, string> for_each = 33;

  string provider = 34;

  terraform.meta.Lifecycle lifecycle = 35;

  message CacheNodes {
    //address: string
    string address = 1;

    //availability_zone: string
    string availability_zone = 2 [json_name = "availability_zone"];

    //id: string
    string id = 3;

    //port: number
    int64 port = 4;
  }
}

//AwsElasticacheGlobalReplicationGroup version is 0
message AwsElasticacheGlobalReplicationGroup {
  string actual_engine_version = 1 [json_name = "actual_engine_version"];

  string arn = 2;

  bool at_rest_encryption_enabled = 3 [json_name = "at_rest_encryption_enabled"];

  bool auth_token_enabled = 4 [json_name = "auth_token_enabled"];

  string cache_node_type = 5 [json_name = "cache_node_type"];

  bool cluster_enabled = 6 [json_name = "cluster_enabled"];

  string engine = 7;

  string engine_version_actual = 8 [json_name = "engine_version_actual"];

  string global_replication_group_description = 9 [json_name = "global_replication_group_description"];

  string global_replication_group_id = 10 [json_name = "global_replication_group_id"];

  string global_replication_group_id_suffix = 11 [json_name = "global_replication_group_id_suffix"];

  string id = 12;

  string primary_replication_group_id = 13 [json_name = "primary_replication_group_id"];

  bool transit_encryption_enabled = 14 [json_name = "transit_encryption_enabled"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;
}

//AwsElasticacheParameterGroup version is 0
message AwsElasticacheParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated Parameter parameter = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Parameter {
    string name = 1;

    string value = 2;
  }
}

//AwsElasticacheReplicationGroup version is 1
message AwsElasticacheReplicationGroup {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  bool at_rest_encryption_enabled = 3 [json_name = "at_rest_encryption_enabled"];

  string auth_token = 4 [json_name = "auth_token"];

  bool auto_minor_version_upgrade = 5 [json_name = "auto_minor_version_upgrade"];

  bool automatic_failover_enabled = 6 [json_name = "automatic_failover_enabled"];

  repeated string availability_zones = 7 [json_name = "availability_zones"];

  bool cluster_enabled = 8 [json_name = "cluster_enabled"];

  string configuration_endpoint_address = 9 [json_name = "configuration_endpoint_address"];

  bool data_tiering_enabled = 10 [json_name = "data_tiering_enabled"];

  string engine = 11;

  string engine_version = 12 [json_name = "engine_version"];

  string engine_version_actual = 13 [json_name = "engine_version_actual"];

  string final_snapshot_identifier = 14 [json_name = "final_snapshot_identifier"];

  string global_replication_group_id = 15 [json_name = "global_replication_group_id"];

  string id = 16;

  string kms_key_id = 17 [json_name = "kms_key_id"];

  string maintenance_window = 18 [json_name = "maintenance_window"];

  repeated string member_clusters = 19 [json_name = "member_clusters"];

  bool multi_az_enabled = 20 [json_name = "multi_az_enabled"];

  string node_type = 21 [json_name = "node_type"];

  string notification_topic_arn = 22 [json_name = "notification_topic_arn"];

  int64 number_cache_clusters = 23 [json_name = "number_cache_clusters"];

  string parameter_group_name = 24 [json_name = "parameter_group_name"];

  int64 port = 25;

  string primary_endpoint_address = 26 [json_name = "primary_endpoint_address"];

  string reader_endpoint_address = 27 [json_name = "reader_endpoint_address"];

  string replication_group_description = 28 [json_name = "replication_group_description"];

  string replication_group_id = 29 [json_name = "replication_group_id"];

  repeated string security_group_ids = 30 [json_name = "security_group_ids"];

  repeated string security_group_names = 31 [json_name = "security_group_names"];

  repeated string snapshot_arns = 32 [json_name = "snapshot_arns"];

  string snapshot_name = 33 [json_name = "snapshot_name"];

  int64 snapshot_retention_limit = 34 [json_name = "snapshot_retention_limit"];

  string snapshot_window = 35 [json_name = "snapshot_window"];

  string subnet_group_name = 36 [json_name = "subnet_group_name"];

  map<string, string> tags = 37;

  map<string, string> tags_all = 38 [json_name = "tags_all"];

  bool transit_encryption_enabled = 39 [json_name = "transit_encryption_enabled"];

  ClusterMode cluster_mode = 40 [json_name = "cluster_mode"];

  repeated Timeouts timeouts = 41;

  repeated string depends_on = 42;

  int32 count = 43;

  map<string, string> for_each = 44;

  string provider = 45;

  terraform.meta.Lifecycle lifecycle = 46;

  message ClusterMode {
    int64 num_node_groups = 1 [json_name = "num_node_groups"];

    int64 replicas_per_node_group = 2 [json_name = "replicas_per_node_group"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsElasticacheSecurityGroup version is 0
message AwsElasticacheSecurityGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  repeated string security_group_names = 4 [json_name = "security_group_names"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsElasticacheSubnetGroup version is 0
message AwsElasticacheSubnetGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  repeated string subnet_ids = 5 [json_name = "subnet_ids"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsElasticacheUser version is 0
message AwsElasticacheUser {
  string access_string = 1 [json_name = "access_string"];

  string arn = 2;

  string engine = 3;

  string id = 4;

  bool no_password_required = 5 [json_name = "no_password_required"];

  repeated string passwords = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string user_id = 9 [json_name = "user_id"];

  string user_name = 10 [json_name = "user_name"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsElasticacheUserGroup version is 0
message AwsElasticacheUserGroup {
  string arn = 1;

  string engine = 2;

  string id = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  string user_group_id = 6 [json_name = "user_group_id"];

  repeated string user_ids = 7 [json_name = "user_ids"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsElasticsearchDomain version is 0
message AwsElasticsearchDomain {
  string access_policies = 1 [json_name = "access_policies"];

  map<string, string> advanced_options = 2 [json_name = "advanced_options"];

  string arn = 3;

  string domain_id = 4 [json_name = "domain_id"];

  string domain_name = 5 [json_name = "domain_name"];

  string elasticsearch_version = 6 [json_name = "elasticsearch_version"];

  string endpoint = 7;

  string id = 8;

  string kibana_endpoint = 9 [json_name = "kibana_endpoint"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  AdvancedSecurityOptions advanced_security_options = 12 [json_name = "advanced_security_options"];

  AutoTuneOptions auto_tune_options = 13 [json_name = "auto_tune_options"];

  ClusterConfig cluster_config = 14 [json_name = "cluster_config"];

  CognitoOptions cognito_options = 15 [json_name = "cognito_options"];

  DomainEndpointOptions domain_endpoint_options = 16 [json_name = "domain_endpoint_options"];

  EbsOptions ebs_options = 17 [json_name = "ebs_options"];

  EncryptAtRest encrypt_at_rest = 18 [json_name = "encrypt_at_rest"];

  repeated LogPublishingOptions log_publishing_options = 19 [json_name = "log_publishing_options"];

  NodeToNodeEncryption node_to_node_encryption = 20 [json_name = "node_to_node_encryption"];

  SnapshotOptions snapshot_options = 21 [json_name = "snapshot_options"];

  repeated Timeouts timeouts = 22;

  VpcOptions vpc_options = 23 [json_name = "vpc_options"];

  repeated string depends_on = 24;

  int32 count = 25;

  map<string, string> for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;

  message AdvancedSecurityOptions {
    bool enabled = 1;

    bool internal_user_database_enabled = 2 [json_name = "internal_user_database_enabled"];

    MasterUserOptions master_user_options = 3 [json_name = "master_user_options"];

    message MasterUserOptions {
      string master_user_arn = 1 [json_name = "master_user_arn"];

      string master_user_name = 2 [json_name = "master_user_name"];

      string master_user_password = 3 [json_name = "master_user_password"];
    }
  }

  message AutoTuneOptions {
    string desired_state = 1 [json_name = "desired_state"];

    string rollback_on_disable = 2 [json_name = "rollback_on_disable"];

    repeated MaintenanceSchedule maintenance_schedule = 3 [json_name = "maintenance_schedule"];

    message MaintenanceSchedule {
      string cron_expression_for_recurrence = 1 [json_name = "cron_expression_for_recurrence"];

      string start_at = 2 [json_name = "start_at"];

      Duration duration = 3;

      message Duration {
        string unit = 1;

        int64 value = 2;
      }
    }
  }

  message ClusterConfig {
    int64 dedicated_master_count = 1 [json_name = "dedicated_master_count"];

    bool dedicated_master_enabled = 2 [json_name = "dedicated_master_enabled"];

    string dedicated_master_type = 3 [json_name = "dedicated_master_type"];

    int64 instance_count = 4 [json_name = "instance_count"];

    string instance_type = 5 [json_name = "instance_type"];

    int64 warm_count = 6 [json_name = "warm_count"];

    bool warm_enabled = 7 [json_name = "warm_enabled"];

    string warm_type = 8 [json_name = "warm_type"];

    bool zone_awareness_enabled = 9 [json_name = "zone_awareness_enabled"];

    ZoneAwarenessConfig zone_awareness_config = 10 [json_name = "zone_awareness_config"];

    message ZoneAwarenessConfig {
      int64 availability_zone_count = 1 [json_name = "availability_zone_count"];
    }
  }

  message CognitoOptions {
    bool enabled = 1;

    string identity_pool_id = 2 [json_name = "identity_pool_id"];

    string role_arn = 3 [json_name = "role_arn"];

    string user_pool_id = 4 [json_name = "user_pool_id"];
  }

  message DomainEndpointOptions {
    string custom_endpoint = 1 [json_name = "custom_endpoint"];

    string custom_endpoint_certificate_arn = 2 [json_name = "custom_endpoint_certificate_arn"];

    bool custom_endpoint_enabled = 3 [json_name = "custom_endpoint_enabled"];

    bool enforce_https = 4 [json_name = "enforce_https"];

    string tls_security_policy = 5 [json_name = "tls_security_policy"];
  }

  message EbsOptions {
    bool ebs_enabled = 1 [json_name = "ebs_enabled"];

    int64 iops = 2;

    int64 volume_size = 3 [json_name = "volume_size"];

    string volume_type = 4 [json_name = "volume_type"];
  }

  message EncryptAtRest {
    bool enabled = 1;

    string kms_key_id = 2 [json_name = "kms_key_id"];
  }

  message LogPublishingOptions {
    string cloudwatch_log_group_arn = 1 [json_name = "cloudwatch_log_group_arn"];

    bool enabled = 2;

    string log_type = 3 [json_name = "log_type"];
  }

  message NodeToNodeEncryption {
    bool enabled = 1;
  }

  message SnapshotOptions {
    int64 automated_snapshot_start_hour = 1 [json_name = "automated_snapshot_start_hour"];
  }

  message Timeouts {
    string update = 1;
  }

  message VpcOptions {
    repeated string availability_zones = 1 [json_name = "availability_zones"];

    repeated string security_group_ids = 2 [json_name = "security_group_ids"];

    repeated string subnet_ids = 3 [json_name = "subnet_ids"];

    string vpc_id = 4 [json_name = "vpc_id"];
  }
}

//AwsElasticsearchDomainPolicy version is 0
message AwsElasticsearchDomainPolicy {
  string access_policies = 1 [json_name = "access_policies"];

  string domain_name = 2 [json_name = "domain_name"];

  string id = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsElasticsearchDomainSamlOptions version is 0
message AwsElasticsearchDomainSamlOptions {
  string domain_name = 1 [json_name = "domain_name"];

  string id = 2;

  SamlOptions saml_options = 3 [json_name = "saml_options"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message SamlOptions {
    bool enabled = 1;

    string master_backend_role = 2 [json_name = "master_backend_role"];

    string master_user_name = 3 [json_name = "master_user_name"];

    string roles_key = 4 [json_name = "roles_key"];

    int64 session_timeout_minutes = 5 [json_name = "session_timeout_minutes"];

    string subject_key = 6 [json_name = "subject_key"];

    Idp idp = 7;

    message Idp {
      string entity_id = 1 [json_name = "entity_id"];

      string metadata_content = 2 [json_name = "metadata_content"];
    }
  }
}

//AwsElastictranscoderPipeline version is 0
message AwsElastictranscoderPipeline {
  string arn = 1;

  string aws_kms_key_arn = 2 [json_name = "aws_kms_key_arn"];

  string id = 3;

  string input_bucket = 4 [json_name = "input_bucket"];

  string name = 5;

  string output_bucket = 6 [json_name = "output_bucket"];

  string role = 7;

  ContentConfig content_config = 8 [json_name = "content_config"];

  repeated ContentConfigPermissions content_config_permissions = 9 [json_name = "content_config_permissions"];

  Notifications notifications = 10;

  ThumbnailConfig thumbnail_config = 11 [json_name = "thumbnail_config"];

  repeated ThumbnailConfigPermissions thumbnail_config_permissions = 12 [json_name = "thumbnail_config_permissions"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message ContentConfig {
    string bucket = 1;

    string storage_class = 2 [json_name = "storage_class"];
  }

  message ContentConfigPermissions {
    repeated string access = 1;

    string grantee = 2;

    string grantee_type = 3 [json_name = "grantee_type"];
  }

  message Notifications {
    string completed = 1;

    string error = 2;

    string progressing = 3;

    string warning = 4;
  }

  message ThumbnailConfig {
    string bucket = 1;

    string storage_class = 2 [json_name = "storage_class"];
  }

  message ThumbnailConfigPermissions {
    repeated string access = 1;

    string grantee = 2;

    string grantee_type = 3 [json_name = "grantee_type"];
  }
}

//AwsElastictranscoderPreset version is 0
message AwsElastictranscoderPreset {
  string arn = 1;

  string container = 2;

  string description = 3;

  string id = 4;

  string name = 5;

  string type = 6;

  map<string, string> video_codec_options = 7 [json_name = "video_codec_options"];

  Audio audio = 8;

  AudioCodecOptions audio_codec_options = 9 [json_name = "audio_codec_options"];

  Thumbnails thumbnails = 10;

  Video video = 11;

  repeated VideoWatermarks video_watermarks = 12 [json_name = "video_watermarks"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Audio {
    string audio_packing_mode = 1 [json_name = "audio_packing_mode"];

    string bit_rate = 2 [json_name = "bit_rate"];

    string channels = 3;

    string codec = 4;

    string sample_rate = 5 [json_name = "sample_rate"];
  }

  message AudioCodecOptions {
    string bit_depth = 1 [json_name = "bit_depth"];

    string bit_order = 2 [json_name = "bit_order"];

    string profile = 3;

    string signed = 4;
  }

  message Thumbnails {
    string aspect_ratio = 1 [json_name = "aspect_ratio"];

    string format = 2;

    string interval = 3;

    string max_height = 4 [json_name = "max_height"];

    string max_width = 5 [json_name = "max_width"];

    string padding_policy = 6 [json_name = "padding_policy"];

    string resolution = 7;

    string sizing_policy = 8 [json_name = "sizing_policy"];
  }

  message Video {
    string aspect_ratio = 1 [json_name = "aspect_ratio"];

    string bit_rate = 2 [json_name = "bit_rate"];

    string codec = 3;

    string display_aspect_ratio = 4 [json_name = "display_aspect_ratio"];

    string fixed_gop = 5 [json_name = "fixed_gop"];

    string frame_rate = 6 [json_name = "frame_rate"];

    string keyframes_max_dist = 7 [json_name = "keyframes_max_dist"];

    string max_frame_rate = 8 [json_name = "max_frame_rate"];

    string max_height = 9 [json_name = "max_height"];

    string max_width = 10 [json_name = "max_width"];

    string padding_policy = 11 [json_name = "padding_policy"];

    string resolution = 12;

    string sizing_policy = 13 [json_name = "sizing_policy"];
  }

  message VideoWatermarks {
    string horizontal_align = 1 [json_name = "horizontal_align"];

    string horizontal_offset = 2 [json_name = "horizontal_offset"];

    string id = 3;

    string max_height = 4 [json_name = "max_height"];

    string max_width = 5 [json_name = "max_width"];

    string opacity = 6;

    string sizing_policy = 7 [json_name = "sizing_policy"];

    string target = 8;

    string vertical_align = 9 [json_name = "vertical_align"];

    string vertical_offset = 10 [json_name = "vertical_offset"];
  }
}

//AwsElb version is 0
message AwsElb {
  string arn = 1;

  repeated string availability_zones = 2 [json_name = "availability_zones"];

  bool connection_draining = 3 [json_name = "connection_draining"];

  int64 connection_draining_timeout = 4 [json_name = "connection_draining_timeout"];

  bool cross_zone_load_balancing = 5 [json_name = "cross_zone_load_balancing"];

  string desync_mitigation_mode = 6 [json_name = "desync_mitigation_mode"];

  string dns_name = 7 [json_name = "dns_name"];

  string id = 8;

  int64 idle_timeout = 9 [json_name = "idle_timeout"];

  repeated string instances = 10;

  bool internal = 11;

  string name = 12;

  string name_prefix = 13 [json_name = "name_prefix"];

  repeated string security_groups = 14 [json_name = "security_groups"];

  string source_security_group = 15 [json_name = "source_security_group"];

  string source_security_group_id = 16 [json_name = "source_security_group_id"];

  repeated string subnets = 17;

  map<string, string> tags = 18;

  map<string, string> tags_all = 19 [json_name = "tags_all"];

  string zone_id = 20 [json_name = "zone_id"];

  AccessLogs access_logs = 21 [json_name = "access_logs"];

  HealthCheck health_check = 22 [json_name = "health_check"];

  repeated Listener listener = 23;

  repeated string depends_on = 24;

  int32 count = 25;

  map<string, string> for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;

  message AccessLogs {
    string bucket = 1;

    string bucket_prefix = 2 [json_name = "bucket_prefix"];

    bool enabled = 3;

    int64 interval = 4;
  }

  message HealthCheck {
    int64 healthy_threshold = 1 [json_name = "healthy_threshold"];

    int64 interval = 2;

    string target = 3;

    int64 timeout = 4;

    int64 unhealthy_threshold = 5 [json_name = "unhealthy_threshold"];
  }

  message Listener {
    int64 instance_port = 1 [json_name = "instance_port"];

    string instance_protocol = 2 [json_name = "instance_protocol"];

    int64 lb_port = 3 [json_name = "lb_port"];

    string lb_protocol = 4 [json_name = "lb_protocol"];

    string ssl_certificate_id = 5 [json_name = "ssl_certificate_id"];
  }
}

//AwsElbAttachment version is 0
message AwsElbAttachment {
  string elb = 1;

  string id = 2;

  string instance = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsEmrCluster version is 0
message AwsEmrCluster {
  string additional_info = 1 [json_name = "additional_info"];

  repeated string applications = 2;

  string arn = 3;

  string autoscaling_role = 4 [json_name = "autoscaling_role"];

  string cluster_state = 5 [json_name = "cluster_state"];

  string configurations = 6;

  string configurations_json = 7 [json_name = "configurations_json"];

  string custom_ami_id = 8 [json_name = "custom_ami_id"];

  int64 ebs_root_volume_size = 9 [json_name = "ebs_root_volume_size"];

  string id = 10;

  bool keep_job_flow_alive_when_no_steps = 11 [json_name = "keep_job_flow_alive_when_no_steps"];

  string log_encryption_kms_key_id = 12 [json_name = "log_encryption_kms_key_id"];

  string log_uri = 13 [json_name = "log_uri"];

  string master_public_dns = 14 [json_name = "master_public_dns"];

  string name = 15;

  string release_label = 16 [json_name = "release_label"];

  string scale_down_behavior = 17 [json_name = "scale_down_behavior"];

  string security_configuration = 18 [json_name = "security_configuration"];

  string service_role = 19 [json_name = "service_role"];

  repeated Step step = 20;

  int64 step_concurrency_level = 21 [json_name = "step_concurrency_level"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  bool termination_protection = 24 [json_name = "termination_protection"];

  bool visible_to_all_users = 25 [json_name = "visible_to_all_users"];

  AutoTerminationPolicy auto_termination_policy = 26 [json_name = "auto_termination_policy"];

  repeated BootstrapAction bootstrap_action = 27 [json_name = "bootstrap_action"];

  CoreInstanceFleet core_instance_fleet = 28 [json_name = "core_instance_fleet"];

  CoreInstanceGroup core_instance_group = 29 [json_name = "core_instance_group"];

  Ec2Attributes ec2_attributes = 30 [json_name = "ec2_attributes"];

  KerberosAttributes kerberos_attributes = 31 [json_name = "kerberos_attributes"];

  MasterInstanceFleet master_instance_fleet = 32 [json_name = "master_instance_fleet"];

  MasterInstanceGroup master_instance_group = 33 [json_name = "master_instance_group"];

  repeated string depends_on = 34;

  int32 count = 35;

  map<string, string> for_each = 36;

  string provider = 37;

  terraform.meta.Lifecycle lifecycle = 38;

  message Step {
    //action_on_failure: string
    string action_on_failure = 1 [json_name = "action_on_failure"];

    //hadoop_jar_step: list of object
    repeated HadoopJarStep hadoop_jar_step = 2 [json_name = "hadoop_jar_step"];

    //name: string
    string name = 3;

    message HadoopJarStep {
      //args: list of string
      repeated string args = 1;

      //jar: string
      string jar = 2;

      //main_class: string
      string main_class = 3 [json_name = "main_class"];

      //properties: map of string
      map<string, string> properties = 4;
    }
  }

  message AutoTerminationPolicy {
    int64 idle_timeout = 1 [json_name = "idle_timeout"];
  }

  message BootstrapAction {
    repeated string args = 1;

    string name = 2;

    string path = 3;
  }

  message CoreInstanceFleet {
    string id = 1;

    string name = 2;

    int64 provisioned_on_demand_capacity = 3 [json_name = "provisioned_on_demand_capacity"];

    int64 provisioned_spot_capacity = 4 [json_name = "provisioned_spot_capacity"];

    int64 target_on_demand_capacity = 5 [json_name = "target_on_demand_capacity"];

    int64 target_spot_capacity = 6 [json_name = "target_spot_capacity"];

    repeated InstanceTypeConfigs instance_type_configs = 7 [json_name = "instance_type_configs"];

    LaunchSpecifications launch_specifications = 8 [json_name = "launch_specifications"];

    message InstanceTypeConfigs {
      string bid_price = 1 [json_name = "bid_price"];

      int64 bid_price_as_percentage_of_on_demand_price = 2 [json_name = "bid_price_as_percentage_of_on_demand_price"];

      string instance_type = 3 [json_name = "instance_type"];

      int64 weighted_capacity = 4 [json_name = "weighted_capacity"];

      repeated Configurations configurations = 5;

      repeated EbsConfig ebs_config = 6 [json_name = "ebs_config"];

      message Configurations {
        string classification = 1;

        map<string, string> properties = 2;
      }

      message EbsConfig {
        int64 iops = 1;

        int64 size = 2;

        string type = 3;

        int64 volumes_per_instance = 4 [json_name = "volumes_per_instance"];
      }
    }

    message LaunchSpecifications {
      repeated OnDemandSpecification on_demand_specification = 1 [json_name = "on_demand_specification"];

      repeated SpotSpecification spot_specification = 2 [json_name = "spot_specification"];

      message OnDemandSpecification {
        string allocation_strategy = 1 [json_name = "allocation_strategy"];
      }

      message SpotSpecification {
        string allocation_strategy = 1 [json_name = "allocation_strategy"];

        int64 block_duration_minutes = 2 [json_name = "block_duration_minutes"];

        string timeout_action = 3 [json_name = "timeout_action"];

        int64 timeout_duration_minutes = 4 [json_name = "timeout_duration_minutes"];
      }
    }
  }

  message CoreInstanceGroup {
    string autoscaling_policy = 1 [json_name = "autoscaling_policy"];

    string bid_price = 2 [json_name = "bid_price"];

    string id = 3;

    int64 instance_count = 4 [json_name = "instance_count"];

    string instance_type = 5 [json_name = "instance_type"];

    string name = 6;

    repeated EbsConfig ebs_config = 7 [json_name = "ebs_config"];

    message EbsConfig {
      int64 iops = 1;

      int64 size = 2;

      string type = 3;

      int64 volumes_per_instance = 4 [json_name = "volumes_per_instance"];
    }
  }

  message Ec2Attributes {
    string additional_master_security_groups = 1 [json_name = "additional_master_security_groups"];

    string additional_slave_security_groups = 2 [json_name = "additional_slave_security_groups"];

    string emr_managed_master_security_group = 3 [json_name = "emr_managed_master_security_group"];

    string emr_managed_slave_security_group = 4 [json_name = "emr_managed_slave_security_group"];

    string instance_profile = 5 [json_name = "instance_profile"];

    string key_name = 6 [json_name = "key_name"];

    string service_access_security_group = 7 [json_name = "service_access_security_group"];

    string subnet_id = 8 [json_name = "subnet_id"];

    repeated string subnet_ids = 9 [json_name = "subnet_ids"];
  }

  message KerberosAttributes {
    string ad_domain_join_password = 1 [json_name = "ad_domain_join_password"];

    string ad_domain_join_user = 2 [json_name = "ad_domain_join_user"];

    string cross_realm_trust_principal_password = 3 [json_name = "cross_realm_trust_principal_password"];

    string kdc_admin_password = 4 [json_name = "kdc_admin_password"];

    string realm = 5;
  }

  message MasterInstanceFleet {
    string id = 1;

    string name = 2;

    int64 provisioned_on_demand_capacity = 3 [json_name = "provisioned_on_demand_capacity"];

    int64 provisioned_spot_capacity = 4 [json_name = "provisioned_spot_capacity"];

    int64 target_on_demand_capacity = 5 [json_name = "target_on_demand_capacity"];

    int64 target_spot_capacity = 6 [json_name = "target_spot_capacity"];

    repeated InstanceTypeConfigs instance_type_configs = 7 [json_name = "instance_type_configs"];

    LaunchSpecifications launch_specifications = 8 [json_name = "launch_specifications"];

    message InstanceTypeConfigs {
      string bid_price = 1 [json_name = "bid_price"];

      int64 bid_price_as_percentage_of_on_demand_price = 2 [json_name = "bid_price_as_percentage_of_on_demand_price"];

      string instance_type = 3 [json_name = "instance_type"];

      int64 weighted_capacity = 4 [json_name = "weighted_capacity"];

      repeated Configurations configurations = 5;

      repeated EbsConfig ebs_config = 6 [json_name = "ebs_config"];

      message Configurations {
        string classification = 1;

        map<string, string> properties = 2;
      }

      message EbsConfig {
        int64 iops = 1;

        int64 size = 2;

        string type = 3;

        int64 volumes_per_instance = 4 [json_name = "volumes_per_instance"];
      }
    }

    message LaunchSpecifications {
      repeated OnDemandSpecification on_demand_specification = 1 [json_name = "on_demand_specification"];

      repeated SpotSpecification spot_specification = 2 [json_name = "spot_specification"];

      message OnDemandSpecification {
        string allocation_strategy = 1 [json_name = "allocation_strategy"];
      }

      message SpotSpecification {
        string allocation_strategy = 1 [json_name = "allocation_strategy"];

        int64 block_duration_minutes = 2 [json_name = "block_duration_minutes"];

        string timeout_action = 3 [json_name = "timeout_action"];

        int64 timeout_duration_minutes = 4 [json_name = "timeout_duration_minutes"];
      }
    }
  }

  message MasterInstanceGroup {
    string bid_price = 1 [json_name = "bid_price"];

    string id = 2;

    int64 instance_count = 3 [json_name = "instance_count"];

    string instance_type = 4 [json_name = "instance_type"];

    string name = 5;

    repeated EbsConfig ebs_config = 6 [json_name = "ebs_config"];

    message EbsConfig {
      int64 iops = 1;

      int64 size = 2;

      string type = 3;

      int64 volumes_per_instance = 4 [json_name = "volumes_per_instance"];
    }
  }
}

//AwsEmrInstanceFleet version is 0
message AwsEmrInstanceFleet {
  string cluster_id = 1 [json_name = "cluster_id"];

  string id = 2;

  string name = 3;

  int64 provisioned_on_demand_capacity = 4 [json_name = "provisioned_on_demand_capacity"];

  int64 provisioned_spot_capacity = 5 [json_name = "provisioned_spot_capacity"];

  int64 target_on_demand_capacity = 6 [json_name = "target_on_demand_capacity"];

  int64 target_spot_capacity = 7 [json_name = "target_spot_capacity"];

  repeated InstanceTypeConfigs instance_type_configs = 8 [json_name = "instance_type_configs"];

  LaunchSpecifications launch_specifications = 9 [json_name = "launch_specifications"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message InstanceTypeConfigs {
    string bid_price = 1 [json_name = "bid_price"];

    int64 bid_price_as_percentage_of_on_demand_price = 2 [json_name = "bid_price_as_percentage_of_on_demand_price"];

    string instance_type = 3 [json_name = "instance_type"];

    int64 weighted_capacity = 4 [json_name = "weighted_capacity"];

    repeated Configurations configurations = 5;

    repeated EbsConfig ebs_config = 6 [json_name = "ebs_config"];

    message Configurations {
      string classification = 1;

      map<string, string> properties = 2;
    }

    message EbsConfig {
      int64 iops = 1;

      int64 size = 2;

      string type = 3;

      int64 volumes_per_instance = 4 [json_name = "volumes_per_instance"];
    }
  }

  message LaunchSpecifications {
    repeated OnDemandSpecification on_demand_specification = 1 [json_name = "on_demand_specification"];

    repeated SpotSpecification spot_specification = 2 [json_name = "spot_specification"];

    message OnDemandSpecification {
      string allocation_strategy = 1 [json_name = "allocation_strategy"];
    }

    message SpotSpecification {
      string allocation_strategy = 1 [json_name = "allocation_strategy"];

      int64 block_duration_minutes = 2 [json_name = "block_duration_minutes"];

      string timeout_action = 3 [json_name = "timeout_action"];

      int64 timeout_duration_minutes = 4 [json_name = "timeout_duration_minutes"];
    }
  }
}

//AwsEmrInstanceGroup version is 0
message AwsEmrInstanceGroup {
  string autoscaling_policy = 1 [json_name = "autoscaling_policy"];

  string bid_price = 2 [json_name = "bid_price"];

  string cluster_id = 3 [json_name = "cluster_id"];

  string configurations_json = 4 [json_name = "configurations_json"];

  bool ebs_optimized = 5 [json_name = "ebs_optimized"];

  string id = 6;

  int64 instance_count = 7 [json_name = "instance_count"];

  string instance_type = 8 [json_name = "instance_type"];

  string name = 9;

  int64 running_instance_count = 10 [json_name = "running_instance_count"];

  string status = 11;

  repeated EbsConfig ebs_config = 12 [json_name = "ebs_config"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message EbsConfig {
    int64 iops = 1;

    int64 size = 2;

    string type = 3;

    int64 volumes_per_instance = 4 [json_name = "volumes_per_instance"];
  }
}

//AwsEmrManagedScalingPolicy version is 0
message AwsEmrManagedScalingPolicy {
  string cluster_id = 1 [json_name = "cluster_id"];

  string id = 2;

  repeated ComputeLimits compute_limits = 3 [json_name = "compute_limits"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message ComputeLimits {
    int64 maximum_capacity_units = 1 [json_name = "maximum_capacity_units"];

    int64 maximum_core_capacity_units = 2 [json_name = "maximum_core_capacity_units"];

    int64 maximum_ondemand_capacity_units = 3 [json_name = "maximum_ondemand_capacity_units"];

    int64 minimum_capacity_units = 4 [json_name = "minimum_capacity_units"];

    string unit_type = 5 [json_name = "unit_type"];
  }
}

//AwsEmrSecurityConfiguration version is 0
message AwsEmrSecurityConfiguration {
  string configuration = 1;

  string creation_date = 2 [json_name = "creation_date"];

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsEmrStudio version is 0
message AwsEmrStudio {
  string arn = 1;

  string auth_mode = 2 [json_name = "auth_mode"];

  string default_s3_location = 3 [json_name = "default_s3_location"];

  string description = 4;

  string engine_security_group_id = 5 [json_name = "engine_security_group_id"];

  string id = 6;

  string idp_auth_url = 7 [json_name = "idp_auth_url"];

  string idp_relay_state_parameter_name = 8 [json_name = "idp_relay_state_parameter_name"];

  string name = 9;

  string service_role = 10 [json_name = "service_role"];

  repeated string subnet_ids = 11 [json_name = "subnet_ids"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string url = 14;

  string user_role = 15 [json_name = "user_role"];

  string vpc_id = 16 [json_name = "vpc_id"];

  string workspace_security_group_id = 17 [json_name = "workspace_security_group_id"];

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;
}

//AwsEmrStudioSessionMapping version is 0
message AwsEmrStudioSessionMapping {
  string id = 1;

  string identity_id = 2 [json_name = "identity_id"];

  string identity_name = 3 [json_name = "identity_name"];

  string identity_type = 4 [json_name = "identity_type"];

  string session_policy_arn = 5 [json_name = "session_policy_arn"];

  string studio_id = 6 [json_name = "studio_id"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsFlowLog version is 0
message AwsFlowLog {
  string arn = 1;

  string eni_id = 2 [json_name = "eni_id"];

  string iam_role_arn = 3 [json_name = "iam_role_arn"];

  string id = 4;

  string log_destination = 5 [json_name = "log_destination"];

  string log_destination_type = 6 [json_name = "log_destination_type"];

  string log_format = 7 [json_name = "log_format"];

  string log_group_name = 8 [json_name = "log_group_name"];

  int64 max_aggregation_interval = 9 [json_name = "max_aggregation_interval"];

  string subnet_id = 10 [json_name = "subnet_id"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  string traffic_type = 13 [json_name = "traffic_type"];

  string vpc_id = 14 [json_name = "vpc_id"];

  DestinationOptions destination_options = 15 [json_name = "destination_options"];

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message DestinationOptions {
    string file_format = 1 [json_name = "file_format"];

    bool hive_compatible_partitions = 2 [json_name = "hive_compatible_partitions"];

    bool per_hour_partition = 3 [json_name = "per_hour_partition"];
  }
}

//AwsFmsAdminAccount version is 0
message AwsFmsAdminAccount {
  string account_id = 1 [json_name = "account_id"];

  string id = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsFmsPolicy version is 0
message AwsFmsPolicy {
  string arn = 1;

  bool delete_all_policy_resources = 2 [json_name = "delete_all_policy_resources"];

  bool exclude_resource_tags = 3 [json_name = "exclude_resource_tags"];

  string id = 4;

  string name = 5;

  string policy_update_token = 6 [json_name = "policy_update_token"];

  bool remediation_enabled = 7 [json_name = "remediation_enabled"];

  map<string, string> resource_tags = 8 [json_name = "resource_tags"];

  string resource_type = 9 [json_name = "resource_type"];

  repeated string resource_type_list = 10 [json_name = "resource_type_list"];

  ExcludeMap exclude_map = 11 [json_name = "exclude_map"];

  IncludeMap include_map = 12 [json_name = "include_map"];

  SecurityServicePolicyData security_service_policy_data = 13 [json_name = "security_service_policy_data"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message ExcludeMap {
    repeated string account = 1;

    repeated string orgunit = 2;
  }

  message IncludeMap {
    repeated string account = 1;

    repeated string orgunit = 2;
  }

  message SecurityServicePolicyData {
    string managed_service_data = 1 [json_name = "managed_service_data"];

    string type = 2;
  }
}

//AwsFsxBackup version is 0
message AwsFsxBackup {
  string arn = 1;

  string file_system_id = 2 [json_name = "file_system_id"];

  string id = 3;

  string kms_key_id = 4 [json_name = "kms_key_id"];

  string owner_id = 5 [json_name = "owner_id"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string type = 8;

  string volume_id = 9 [json_name = "volume_id"];

  repeated Timeouts timeouts = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsFsxLustreFileSystem version is 0
message AwsFsxLustreFileSystem {
  string arn = 1;

  string auto_import_policy = 2 [json_name = "auto_import_policy"];

  int64 automatic_backup_retention_days = 3 [json_name = "automatic_backup_retention_days"];

  string backup_id = 4 [json_name = "backup_id"];

  bool copy_tags_to_backups = 5 [json_name = "copy_tags_to_backups"];

  string daily_automatic_backup_start_time = 6 [json_name = "daily_automatic_backup_start_time"];

  string data_compression_type = 7 [json_name = "data_compression_type"];

  string deployment_type = 8 [json_name = "deployment_type"];

  string dns_name = 9 [json_name = "dns_name"];

  string drive_cache_type = 10 [json_name = "drive_cache_type"];

  string export_path = 11 [json_name = "export_path"];

  string id = 12;

  string import_path = 13 [json_name = "import_path"];

  int64 imported_file_chunk_size = 14 [json_name = "imported_file_chunk_size"];

  string kms_key_id = 15 [json_name = "kms_key_id"];

  string mount_name = 16 [json_name = "mount_name"];

  repeated string network_interface_ids = 17 [json_name = "network_interface_ids"];

  string owner_id = 18 [json_name = "owner_id"];

  int64 per_unit_storage_throughput = 19 [json_name = "per_unit_storage_throughput"];

  repeated string security_group_ids = 20 [json_name = "security_group_ids"];

  int64 storage_capacity = 21 [json_name = "storage_capacity"];

  string storage_type = 22 [json_name = "storage_type"];

  repeated string subnet_ids = 23 [json_name = "subnet_ids"];

  map<string, string> tags = 24;

  map<string, string> tags_all = 25 [json_name = "tags_all"];

  string vpc_id = 26 [json_name = "vpc_id"];

  string weekly_maintenance_start_time = 27 [json_name = "weekly_maintenance_start_time"];

  repeated Timeouts timeouts = 28;

  repeated string depends_on = 29;

  int32 count = 30;

  map<string, string> for_each = 31;

  string provider = 32;

  terraform.meta.Lifecycle lifecycle = 33;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsFsxOntapFileSystem version is 0
message AwsFsxOntapFileSystem {
  string arn = 1;

  int64 automatic_backup_retention_days = 2 [json_name = "automatic_backup_retention_days"];

  string daily_automatic_backup_start_time = 3 [json_name = "daily_automatic_backup_start_time"];

  string deployment_type = 4 [json_name = "deployment_type"];

  string dns_name = 5 [json_name = "dns_name"];

  string endpoint_ip_address_range = 6 [json_name = "endpoint_ip_address_range"];

  repeated Endpoints endpoints = 7;

  string fsx_admin_password = 8 [json_name = "fsx_admin_password"];

  string id = 9;

  string kms_key_id = 10 [json_name = "kms_key_id"];

  repeated string network_interface_ids = 11 [json_name = "network_interface_ids"];

  string owner_id = 12 [json_name = "owner_id"];

  string preferred_subnet_id = 13 [json_name = "preferred_subnet_id"];

  repeated string route_table_ids = 14 [json_name = "route_table_ids"];

  repeated string security_group_ids = 15 [json_name = "security_group_ids"];

  int64 storage_capacity = 16 [json_name = "storage_capacity"];

  string storage_type = 17 [json_name = "storage_type"];

  repeated string subnet_ids = 18 [json_name = "subnet_ids"];

  map<string, string> tags = 19;

  map<string, string> tags_all = 20 [json_name = "tags_all"];

  int64 throughput_capacity = 21 [json_name = "throughput_capacity"];

  string vpc_id = 22 [json_name = "vpc_id"];

  string weekly_maintenance_start_time = 23 [json_name = "weekly_maintenance_start_time"];

  DiskIopsConfiguration disk_iops_configuration = 24 [json_name = "disk_iops_configuration"];

  repeated Timeouts timeouts = 25;

  repeated string depends_on = 26;

  int32 count = 27;

  map<string, string> for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message Endpoints {
    //intercluster: list of object
    repeated Intercluster intercluster = 1;

    //management: list of object
    repeated Management management = 2;

    message Intercluster {
      //dns_name: string
      string dns_name = 1 [json_name = "dns_name"];

      //ip_addresses: set of string
      repeated string ip_addresses = 2 [json_name = "ip_addresses"];
    }

    message Management {
      //dns_name: string
      string dns_name = 1 [json_name = "dns_name"];

      //ip_addresses: set of string
      repeated string ip_addresses = 2 [json_name = "ip_addresses"];
    }
  }

  message DiskIopsConfiguration {
    int64 iops = 1;

    string mode = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsFsxOntapStorageVirtualMachine version is 0
message AwsFsxOntapStorageVirtualMachine {
  string arn = 1;

  repeated Endpoints endpoints = 2;

  string file_system_id = 3 [json_name = "file_system_id"];

  string id = 4;

  string name = 5;

  string root_volume_security_style = 6 [json_name = "root_volume_security_style"];

  string subtype = 7;

  string svm_admin_password = 8 [json_name = "svm_admin_password"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string uuid = 11;

  ActiveDirectoryConfiguration active_directory_configuration = 12 [json_name = "active_directory_configuration"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Endpoints {
    //iscsi: list of object
    repeated Iscsi iscsi = 1;

    //management: list of object
    repeated Management management = 2;

    //nfs: list of object
    repeated Nfs nfs = 3;

    //smb: list of object
    repeated Smb smb = 4;

    message Iscsi {
      //dns_name: string
      string dns_name = 1 [json_name = "dns_name"];

      //ip_addresses: set of string
      repeated string ip_addresses = 2 [json_name = "ip_addresses"];
    }

    message Management {
      //dns_name: string
      string dns_name = 1 [json_name = "dns_name"];

      //ip_addresses: set of string
      repeated string ip_addresses = 2 [json_name = "ip_addresses"];
    }

    message Nfs {
      //dns_name: string
      string dns_name = 1 [json_name = "dns_name"];

      //ip_addresses: set of string
      repeated string ip_addresses = 2 [json_name = "ip_addresses"];
    }

    message Smb {
      //dns_name: string
      string dns_name = 1 [json_name = "dns_name"];

      //ip_addresses: set of string
      repeated string ip_addresses = 2 [json_name = "ip_addresses"];
    }
  }

  message ActiveDirectoryConfiguration {
    string netbios_name = 1 [json_name = "netbios_name"];

    SelfManagedActiveDirectoryConfiguration self_managed_active_directory_configuration = 2 [json_name = "self_managed_active_directory_configuration"];

    message SelfManagedActiveDirectoryConfiguration {
      repeated string dns_ips = 1 [json_name = "dns_ips"];

      string domain_name = 2 [json_name = "domain_name"];

      string file_system_administrators_group = 3 [json_name = "file_system_administrators_group"];

      string organizational_unit_distinguidshed_name = 4 [json_name = "organizational_unit_distinguidshed_name"];

      string organizational_unit_distinguished_name = 5 [json_name = "organizational_unit_distinguished_name"];

      string password = 6;

      string username = 7;
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsFsxOntapVolume version is 0
message AwsFsxOntapVolume {
  string arn = 1;

  string file_system_id = 2 [json_name = "file_system_id"];

  string flexcache_endpoint_type = 3 [json_name = "flexcache_endpoint_type"];

  string id = 4;

  string junction_path = 5 [json_name = "junction_path"];

  string name = 6;

  string ontap_volume_type = 7 [json_name = "ontap_volume_type"];

  string security_style = 8 [json_name = "security_style"];

  int64 size_in_megabytes = 9 [json_name = "size_in_megabytes"];

  bool storage_efficiency_enabled = 10 [json_name = "storage_efficiency_enabled"];

  string storage_virtual_machine_id = 11 [json_name = "storage_virtual_machine_id"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string uuid = 14;

  string volume_type = 15 [json_name = "volume_type"];

  TieringPolicy tiering_policy = 16 [json_name = "tiering_policy"];

  repeated Timeouts timeouts = 17;

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message TieringPolicy {
    int64 cooling_period = 1 [json_name = "cooling_period"];

    string name = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsFsxWindowsFileSystem version is 0
message AwsFsxWindowsFileSystem {
  string active_directory_id = 1 [json_name = "active_directory_id"];

  repeated string aliases = 2;

  string arn = 3;

  int64 automatic_backup_retention_days = 4 [json_name = "automatic_backup_retention_days"];

  string backup_id = 5 [json_name = "backup_id"];

  bool copy_tags_to_backups = 6 [json_name = "copy_tags_to_backups"];

  string daily_automatic_backup_start_time = 7 [json_name = "daily_automatic_backup_start_time"];

  string deployment_type = 8 [json_name = "deployment_type"];

  string dns_name = 9 [json_name = "dns_name"];

  string id = 10;

  string kms_key_id = 11 [json_name = "kms_key_id"];

  repeated string network_interface_ids = 12 [json_name = "network_interface_ids"];

  string owner_id = 13 [json_name = "owner_id"];

  string preferred_file_server_ip = 14 [json_name = "preferred_file_server_ip"];

  string preferred_subnet_id = 15 [json_name = "preferred_subnet_id"];

  string remote_administration_endpoint = 16 [json_name = "remote_administration_endpoint"];

  repeated string security_group_ids = 17 [json_name = "security_group_ids"];

  bool skip_final_backup = 18 [json_name = "skip_final_backup"];

  int64 storage_capacity = 19 [json_name = "storage_capacity"];

  string storage_type = 20 [json_name = "storage_type"];

  repeated string subnet_ids = 21 [json_name = "subnet_ids"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  int64 throughput_capacity = 24 [json_name = "throughput_capacity"];

  string vpc_id = 25 [json_name = "vpc_id"];

  string weekly_maintenance_start_time = 26 [json_name = "weekly_maintenance_start_time"];

  AuditLogConfiguration audit_log_configuration = 27 [json_name = "audit_log_configuration"];

  SelfManagedActiveDirectory self_managed_active_directory = 28 [json_name = "self_managed_active_directory"];

  repeated Timeouts timeouts = 29;

  repeated string depends_on = 30;

  int32 count = 31;

  map<string, string> for_each = 32;

  string provider = 33;

  terraform.meta.Lifecycle lifecycle = 34;

  message AuditLogConfiguration {
    string audit_log_destination = 1 [json_name = "audit_log_destination"];

    string file_access_audit_log_level = 2 [json_name = "file_access_audit_log_level"];

    string file_share_access_audit_log_level = 3 [json_name = "file_share_access_audit_log_level"];
  }

  message SelfManagedActiveDirectory {
    repeated string dns_ips = 1 [json_name = "dns_ips"];

    string domain_name = 2 [json_name = "domain_name"];

    string file_system_administrators_group = 3 [json_name = "file_system_administrators_group"];

    string organizational_unit_distinguished_name = 4 [json_name = "organizational_unit_distinguished_name"];

    string password = 5;

    string username = 6;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsGameliftAlias version is 0
message AwsGameliftAlias {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  RoutingStrategy routing_strategy = 7 [json_name = "routing_strategy"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message RoutingStrategy {
    string fleet_id = 1 [json_name = "fleet_id"];

    string message = 2;

    string type = 3;
  }
}

//AwsGameliftBuild version is 0
message AwsGameliftBuild {
  string arn = 1;

  string id = 2;

  string name = 3;

  string operating_system = 4 [json_name = "operating_system"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  string version = 7;

  StorageLocation storage_location = 8 [json_name = "storage_location"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message StorageLocation {
    string bucket = 1;

    string key = 2;

    string role_arn = 3 [json_name = "role_arn"];
  }
}

//AwsGameliftFleet version is 0
message AwsGameliftFleet {
  string arn = 1;

  string build_id = 2 [json_name = "build_id"];

  string description = 3;

  string ec2_instance_type = 4 [json_name = "ec2_instance_type"];

  string fleet_type = 5 [json_name = "fleet_type"];

  string id = 6;

  string instance_role_arn = 7 [json_name = "instance_role_arn"];

  repeated string log_paths = 8 [json_name = "log_paths"];

  repeated string metric_groups = 9 [json_name = "metric_groups"];

  string name = 10;

  string new_game_session_protection_policy = 11 [json_name = "new_game_session_protection_policy"];

  string operating_system = 12 [json_name = "operating_system"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  repeated Ec2InboundPermission ec2_inbound_permission = 15 [json_name = "ec2_inbound_permission"];

  ResourceCreationLimitPolicy resource_creation_limit_policy = 16 [json_name = "resource_creation_limit_policy"];

  RuntimeConfiguration runtime_configuration = 17 [json_name = "runtime_configuration"];

  repeated Timeouts timeouts = 18;

  repeated string depends_on = 19;

  int32 count = 20;

  map<string, string> for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message Ec2InboundPermission {
    int64 from_port = 1 [json_name = "from_port"];

    string ip_range = 2 [json_name = "ip_range"];

    string protocol = 3;

    int64 to_port = 4 [json_name = "to_port"];
  }

  message ResourceCreationLimitPolicy {
    int64 new_game_sessions_per_creator = 1 [json_name = "new_game_sessions_per_creator"];

    int64 policy_period_in_minutes = 2 [json_name = "policy_period_in_minutes"];
  }

  message RuntimeConfiguration {
    int64 game_session_activation_timeout_seconds = 1 [json_name = "game_session_activation_timeout_seconds"];

    int64 max_concurrent_game_session_activations = 2 [json_name = "max_concurrent_game_session_activations"];

    repeated ServerProcess server_process = 3 [json_name = "server_process"];

    message ServerProcess {
      int64 concurrent_executions = 1 [json_name = "concurrent_executions"];

      string launch_path = 2 [json_name = "launch_path"];

      string parameters = 3;
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsGameliftGameSessionQueue version is 0
message AwsGameliftGameSessionQueue {
  string arn = 1;

  repeated string destinations = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  int64 timeout_in_seconds = 7 [json_name = "timeout_in_seconds"];

  repeated PlayerLatencyPolicy player_latency_policy = 8 [json_name = "player_latency_policy"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message PlayerLatencyPolicy {
    int64 maximum_individual_player_latency_milliseconds = 1 [json_name = "maximum_individual_player_latency_milliseconds"];

    int64 policy_duration_seconds = 2 [json_name = "policy_duration_seconds"];
  }
}

//AwsGlacierVault version is 0
message AwsGlacierVault {
  string access_policy = 1 [json_name = "access_policy"];

  string arn = 2;

  string id = 3;

  string location = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  Notification notification = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Notification {
    repeated string events = 1;

    string sns_topic = 2 [json_name = "sns_topic"];
  }
}

//AwsGlacierVaultLock version is 0
message AwsGlacierVaultLock {
  bool complete_lock = 1 [json_name = "complete_lock"];

  string id = 2;

  bool ignore_deletion_error = 3 [json_name = "ignore_deletion_error"];

  string policy = 4;

  string vault_name = 5 [json_name = "vault_name"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsGlobalacceleratorAccelerator version is 0
message AwsGlobalacceleratorAccelerator {
  string dns_name = 1 [json_name = "dns_name"];

  bool enabled = 2;

  string hosted_zone_id = 3 [json_name = "hosted_zone_id"];

  string id = 4;

  string ip_address_type = 5 [json_name = "ip_address_type"];

  repeated IpSets ip_sets = 6 [json_name = "ip_sets"];

  string name = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  Attributes attributes = 10;

  repeated Timeouts timeouts = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message IpSets {
    //ip_addresses: list of string
    repeated string ip_addresses = 1 [json_name = "ip_addresses"];

    //ip_family: string
    string ip_family = 2 [json_name = "ip_family"];
  }

  message Attributes {
    bool flow_logs_enabled = 1 [json_name = "flow_logs_enabled"];

    string flow_logs_s3_bucket = 2 [json_name = "flow_logs_s3_bucket"];

    string flow_logs_s3_prefix = 3 [json_name = "flow_logs_s3_prefix"];
  }

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsGlobalacceleratorEndpointGroup version is 0
message AwsGlobalacceleratorEndpointGroup {
  string arn = 1;

  string endpoint_group_region = 2 [json_name = "endpoint_group_region"];

  int64 health_check_interval_seconds = 3 [json_name = "health_check_interval_seconds"];

  string health_check_path = 4 [json_name = "health_check_path"];

  int64 health_check_port = 5 [json_name = "health_check_port"];

  string health_check_protocol = 6 [json_name = "health_check_protocol"];

  string id = 7;

  string listener_arn = 8 [json_name = "listener_arn"];

  int64 threshold_count = 9 [json_name = "threshold_count"];

  int64 traffic_dial_percentage = 10 [json_name = "traffic_dial_percentage"];

  repeated EndpointConfiguration endpoint_configuration = 11 [json_name = "endpoint_configuration"];

  repeated PortOverride port_override = 12 [json_name = "port_override"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message EndpointConfiguration {
    bool client_ip_preservation_enabled = 1 [json_name = "client_ip_preservation_enabled"];

    string endpoint_id = 2 [json_name = "endpoint_id"];

    int64 weight = 3;
  }

  message PortOverride {
    int64 endpoint_port = 1 [json_name = "endpoint_port"];

    int64 listener_port = 2 [json_name = "listener_port"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsGlobalacceleratorListener version is 0
message AwsGlobalacceleratorListener {
  string accelerator_arn = 1 [json_name = "accelerator_arn"];

  string client_affinity = 2 [json_name = "client_affinity"];

  string id = 3;

  string protocol = 4;

  repeated PortRange port_range = 5 [json_name = "port_range"];

  repeated Timeouts timeouts = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message PortRange {
    int64 from_port = 1 [json_name = "from_port"];

    int64 to_port = 2 [json_name = "to_port"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsGlueCatalogDatabase version is 0
message AwsGlueCatalogDatabase {
  string arn = 1;

  string catalog_id = 2 [json_name = "catalog_id"];

  string description = 3;

  string id = 4;

  string location_uri = 5 [json_name = "location_uri"];

  string name = 6;

  map<string, string> parameters = 7;

  TargetDatabase target_database = 8 [json_name = "target_database"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message TargetDatabase {
    string catalog_id = 1 [json_name = "catalog_id"];

    string database_name = 2 [json_name = "database_name"];
  }
}

//AwsGlueCatalogTable version is 0
message AwsGlueCatalogTable {
  string arn = 1;

  string catalog_id = 2 [json_name = "catalog_id"];

  string database_name = 3 [json_name = "database_name"];

  string description = 4;

  string id = 5;

  string name = 6;

  string owner = 7;

  map<string, string> parameters = 8;

  int64 retention = 9;

  string table_type = 10 [json_name = "table_type"];

  string view_expanded_text = 11 [json_name = "view_expanded_text"];

  string view_original_text = 12 [json_name = "view_original_text"];

  repeated PartitionIndex partition_index = 13 [json_name = "partition_index"];

  repeated PartitionKeys partition_keys = 14 [json_name = "partition_keys"];

  StorageDescriptor storage_descriptor = 15 [json_name = "storage_descriptor"];

  TargetTable target_table = 16 [json_name = "target_table"];

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message PartitionIndex {
    string index_name = 1 [json_name = "index_name"];

    string index_status = 2 [json_name = "index_status"];

    repeated string keys = 3;
  }

  message PartitionKeys {
    string comment = 1;

    string name = 2;

    string type = 3;
  }

  message StorageDescriptor {
    repeated string bucket_columns = 1 [json_name = "bucket_columns"];

    bool compressed = 2;

    string input_format = 3 [json_name = "input_format"];

    string location = 4;

    int64 number_of_buckets = 5 [json_name = "number_of_buckets"];

    string output_format = 6 [json_name = "output_format"];

    map<string, string> parameters = 7;

    bool stored_as_sub_directories = 8 [json_name = "stored_as_sub_directories"];

    repeated Columns columns = 9;

    SchemaReference schema_reference = 10 [json_name = "schema_reference"];

    SerDeInfo ser_de_info = 11 [json_name = "ser_de_info"];

    SkewedInfo skewed_info = 12 [json_name = "skewed_info"];

    repeated SortColumns sort_columns = 13 [json_name = "sort_columns"];

    message Columns {
      string comment = 1;

      string name = 2;

      map<string, string> parameters = 3;

      string type = 4;
    }

    message SchemaReference {
      string schema_version_id = 1 [json_name = "schema_version_id"];

      int64 schema_version_number = 2 [json_name = "schema_version_number"];

      SchemaId schema_id = 3 [json_name = "schema_id"];

      message SchemaId {
        string registry_name = 1 [json_name = "registry_name"];

        string schema_arn = 2 [json_name = "schema_arn"];

        string schema_name = 3 [json_name = "schema_name"];
      }
    }

    message SerDeInfo {
      string name = 1;

      map<string, string> parameters = 2;

      string serialization_library = 3 [json_name = "serialization_library"];
    }

    message SkewedInfo {
      repeated string skewed_column_names = 1 [json_name = "skewed_column_names"];

      map<string, string> skewed_column_value_location_maps = 2 [json_name = "skewed_column_value_location_maps"];

      repeated string skewed_column_values = 3 [json_name = "skewed_column_values"];
    }

    message SortColumns {
      string column = 1;

      int64 sort_order = 2 [json_name = "sort_order"];
    }
  }

  message TargetTable {
    string catalog_id = 1 [json_name = "catalog_id"];

    string database_name = 2 [json_name = "database_name"];

    string name = 3;
  }
}

//AwsGlueClassifier version is 0
message AwsGlueClassifier {
  string id = 1;

  string name = 2;

  CsvClassifier csv_classifier = 3 [json_name = "csv_classifier"];

  GrokClassifier grok_classifier = 4 [json_name = "grok_classifier"];

  JsonClassifier json_classifier = 5 [json_name = "json_classifier"];

  XmlClassifier xml_classifier = 6 [json_name = "xml_classifier"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message CsvClassifier {
    bool allow_single_column = 1 [json_name = "allow_single_column"];

    string contains_header = 2 [json_name = "contains_header"];

    string delimiter = 3;

    bool disable_value_trimming = 4 [json_name = "disable_value_trimming"];

    repeated string header = 5;

    string quote_symbol = 6 [json_name = "quote_symbol"];
  }

  message GrokClassifier {
    string classification = 1;

    string custom_patterns = 2 [json_name = "custom_patterns"];

    string grok_pattern = 3 [json_name = "grok_pattern"];
  }

  message JsonClassifier {
    string json_path = 1 [json_name = "json_path"];
  }

  message XmlClassifier {
    string classification = 1;

    string row_tag = 2 [json_name = "row_tag"];
  }
}

//AwsGlueConnection version is 0
message AwsGlueConnection {
  string arn = 1;

  string catalog_id = 2 [json_name = "catalog_id"];

  map<string, string> connection_properties = 3 [json_name = "connection_properties"];

  string connection_type = 4 [json_name = "connection_type"];

  string description = 5;

  string id = 6;

  repeated string match_criteria = 7 [json_name = "match_criteria"];

  string name = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  PhysicalConnectionRequirements physical_connection_requirements = 11 [json_name = "physical_connection_requirements"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message PhysicalConnectionRequirements {
    string availability_zone = 1 [json_name = "availability_zone"];

    repeated string security_group_id_list = 2 [json_name = "security_group_id_list"];

    string subnet_id = 3 [json_name = "subnet_id"];
  }
}

//AwsGlueCrawler version is 0
message AwsGlueCrawler {
  string arn = 1;

  repeated string classifiers = 2;

  string configuration = 3;

  string database_name = 4 [json_name = "database_name"];

  string description = 5;

  string id = 6;

  string name = 7;

  string role = 8;

  string schedule = 9;

  string security_configuration = 10 [json_name = "security_configuration"];

  string table_prefix = 11 [json_name = "table_prefix"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  repeated CatalogTarget catalog_target = 14 [json_name = "catalog_target"];

  repeated DynamodbTarget dynamodb_target = 15 [json_name = "dynamodb_target"];

  repeated JdbcTarget jdbc_target = 16 [json_name = "jdbc_target"];

  LineageConfiguration lineage_configuration = 17 [json_name = "lineage_configuration"];

  repeated MongodbTarget mongodb_target = 18 [json_name = "mongodb_target"];

  RecrawlPolicy recrawl_policy = 19 [json_name = "recrawl_policy"];

  repeated S3Target s3_target = 20 [json_name = "s3_target"];

  SchemaChangePolicy schema_change_policy = 21 [json_name = "schema_change_policy"];

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message CatalogTarget {
    string database_name = 1 [json_name = "database_name"];

    repeated string tables = 2;
  }

  message DynamodbTarget {
    string path = 1;

    bool scan_all = 2 [json_name = "scan_all"];

    int64 scan_rate = 3 [json_name = "scan_rate"];
  }

  message JdbcTarget {
    string connection_name = 1 [json_name = "connection_name"];

    repeated string exclusions = 2;

    string path = 3;
  }

  message LineageConfiguration {
    string crawler_lineage_settings = 1 [json_name = "crawler_lineage_settings"];
  }

  message MongodbTarget {
    string connection_name = 1 [json_name = "connection_name"];

    string path = 2;

    bool scan_all = 3 [json_name = "scan_all"];
  }

  message RecrawlPolicy {
    string recrawl_behavior = 1 [json_name = "recrawl_behavior"];
  }

  message S3Target {
    string connection_name = 1 [json_name = "connection_name"];

    string dlq_event_queue_arn = 2 [json_name = "dlq_event_queue_arn"];

    string event_queue_arn = 3 [json_name = "event_queue_arn"];

    repeated string exclusions = 4;

    string path = 5;

    int64 sample_size = 6 [json_name = "sample_size"];
  }

  message SchemaChangePolicy {
    string delete_behavior = 1 [json_name = "delete_behavior"];

    string update_behavior = 2 [json_name = "update_behavior"];
  }
}

//AwsGlueDataCatalogEncryptionSettings version is 0
message AwsGlueDataCatalogEncryptionSettings {
  string catalog_id = 1 [json_name = "catalog_id"];

  string id = 2;

  DataCatalogEncryptionSettings data_catalog_encryption_settings = 3 [json_name = "data_catalog_encryption_settings"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message DataCatalogEncryptionSettings {
    ConnectionPasswordEncryption connection_password_encryption = 1 [json_name = "connection_password_encryption"];

    EncryptionAtRest encryption_at_rest = 2 [json_name = "encryption_at_rest"];

    message ConnectionPasswordEncryption {
      string aws_kms_key_id = 1 [json_name = "aws_kms_key_id"];

      bool return_connection_password_encrypted = 2 [json_name = "return_connection_password_encrypted"];
    }

    message EncryptionAtRest {
      string catalog_encryption_mode = 1 [json_name = "catalog_encryption_mode"];

      string sse_aws_kms_key_id = 2 [json_name = "sse_aws_kms_key_id"];
    }
  }
}

//AwsGlueDevEndpoint version is 0
message AwsGlueDevEndpoint {
  map<string, string> arguments = 1;

  string arn = 2;

  string availability_zone = 3 [json_name = "availability_zone"];

  string extra_jars_s3_path = 4 [json_name = "extra_jars_s3_path"];

  string extra_python_libs_s3_path = 5 [json_name = "extra_python_libs_s3_path"];

  string failure_reason = 6 [json_name = "failure_reason"];

  string glue_version = 7 [json_name = "glue_version"];

  string id = 8;

  string name = 9;

  int64 number_of_nodes = 10 [json_name = "number_of_nodes"];

  int64 number_of_workers = 11 [json_name = "number_of_workers"];

  string private_address = 12 [json_name = "private_address"];

  string public_address = 13 [json_name = "public_address"];

  string public_key = 14 [json_name = "public_key"];

  repeated string public_keys = 15 [json_name = "public_keys"];

  string role_arn = 16 [json_name = "role_arn"];

  string security_configuration = 17 [json_name = "security_configuration"];

  repeated string security_group_ids = 18 [json_name = "security_group_ids"];

  string status = 19;

  string subnet_id = 20 [json_name = "subnet_id"];

  map<string, string> tags = 21;

  map<string, string> tags_all = 22 [json_name = "tags_all"];

  string vpc_id = 23 [json_name = "vpc_id"];

  string worker_type = 24 [json_name = "worker_type"];

  string yarn_endpoint_address = 25 [json_name = "yarn_endpoint_address"];

  int64 zeppelin_remote_spark_interpreter_port = 26 [json_name = "zeppelin_remote_spark_interpreter_port"];

  repeated string depends_on = 27;

  int32 count = 28;

  map<string, string> for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;
}

//AwsGlueJob version is 0
message AwsGlueJob {
  string arn = 1;

  repeated string connections = 2;

  map<string, string> default_arguments = 3 [json_name = "default_arguments"];

  string description = 4;

  string glue_version = 5 [json_name = "glue_version"];

  string id = 6;

  int64 max_capacity = 7 [json_name = "max_capacity"];

  int64 max_retries = 8 [json_name = "max_retries"];

  string name = 9;

  map<string, string> non_overridable_arguments = 10 [json_name = "non_overridable_arguments"];

  int64 number_of_workers = 11 [json_name = "number_of_workers"];

  string role_arn = 12 [json_name = "role_arn"];

  string security_configuration = 13 [json_name = "security_configuration"];

  map<string, string> tags = 14;

  map<string, string> tags_all = 15 [json_name = "tags_all"];

  int64 timeout = 16;

  string worker_type = 17 [json_name = "worker_type"];

  Command command = 18;

  ExecutionProperty execution_property = 19 [json_name = "execution_property"];

  NotificationProperty notification_property = 20 [json_name = "notification_property"];

  repeated string depends_on = 21;

  int32 count = 22;

  map<string, string> for_each = 23;

  string provider = 24;

  terraform.meta.Lifecycle lifecycle = 25;

  message Command {
    string name = 1;

    string python_version = 2 [json_name = "python_version"];

    string script_location = 3 [json_name = "script_location"];
  }

  message ExecutionProperty {
    int64 max_concurrent_runs = 1 [json_name = "max_concurrent_runs"];
  }

  message NotificationProperty {
    int64 notify_delay_after = 1 [json_name = "notify_delay_after"];
  }
}

//AwsGlueMlTransform version is 0
message AwsGlueMlTransform {
  string arn = 1;

  string description = 2;

  string glue_version = 3 [json_name = "glue_version"];

  string id = 4;

  int64 label_count = 5 [json_name = "label_count"];

  int64 max_capacity = 6 [json_name = "max_capacity"];

  int64 max_retries = 7 [json_name = "max_retries"];

  string name = 8;

  int64 number_of_workers = 9 [json_name = "number_of_workers"];

  string role_arn = 10 [json_name = "role_arn"];

  repeated Schema schema = 11;

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  int64 timeout = 14;

  string worker_type = 15 [json_name = "worker_type"];

  repeated InputRecordTables input_record_tables = 16 [json_name = "input_record_tables"];

  Parameters parameters = 17;

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message Schema {
    //data_type: string
    string data_type = 1 [json_name = "data_type"];

    //name: string
    string name = 2;
  }

  message InputRecordTables {
    string catalog_id = 1 [json_name = "catalog_id"];

    string connection_name = 2 [json_name = "connection_name"];

    string database_name = 3 [json_name = "database_name"];

    string table_name = 4 [json_name = "table_name"];
  }

  message Parameters {
    string transform_type = 1 [json_name = "transform_type"];

    FindMatchesParameters find_matches_parameters = 2 [json_name = "find_matches_parameters"];

    message FindMatchesParameters {
      int64 accuracy_cost_trade_off = 1 [json_name = "accuracy_cost_trade_off"];

      bool enforce_provided_labels = 2 [json_name = "enforce_provided_labels"];

      int64 precision_recall_trade_off = 3 [json_name = "precision_recall_trade_off"];

      string primary_key_column_name = 4 [json_name = "primary_key_column_name"];
    }
  }
}

//AwsGluePartition version is 0
message AwsGluePartition {
  string catalog_id = 1 [json_name = "catalog_id"];

  string creation_time = 2 [json_name = "creation_time"];

  string database_name = 3 [json_name = "database_name"];

  string id = 4;

  string last_accessed_time = 5 [json_name = "last_accessed_time"];

  string last_analyzed_time = 6 [json_name = "last_analyzed_time"];

  map<string, string> parameters = 7;

  repeated string partition_values = 8 [json_name = "partition_values"];

  string table_name = 9 [json_name = "table_name"];

  StorageDescriptor storage_descriptor = 10 [json_name = "storage_descriptor"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message StorageDescriptor {
    repeated string bucket_columns = 1 [json_name = "bucket_columns"];

    bool compressed = 2;

    string input_format = 3 [json_name = "input_format"];

    string location = 4;

    int64 number_of_buckets = 5 [json_name = "number_of_buckets"];

    string output_format = 6 [json_name = "output_format"];

    map<string, string> parameters = 7;

    bool stored_as_sub_directories = 8 [json_name = "stored_as_sub_directories"];

    repeated Columns columns = 9;

    SerDeInfo ser_de_info = 10 [json_name = "ser_de_info"];

    SkewedInfo skewed_info = 11 [json_name = "skewed_info"];

    repeated SortColumns sort_columns = 12 [json_name = "sort_columns"];

    message Columns {
      string comment = 1;

      string name = 2;

      string type = 3;
    }

    message SerDeInfo {
      string name = 1;

      map<string, string> parameters = 2;

      string serialization_library = 3 [json_name = "serialization_library"];
    }

    message SkewedInfo {
      repeated string skewed_column_names = 1 [json_name = "skewed_column_names"];

      map<string, string> skewed_column_value_location_maps = 2 [json_name = "skewed_column_value_location_maps"];

      repeated string skewed_column_values = 3 [json_name = "skewed_column_values"];
    }

    message SortColumns {
      string column = 1;

      int64 sort_order = 2 [json_name = "sort_order"];
    }
  }
}

//AwsGluePartitionIndex version is 0
message AwsGluePartitionIndex {
  string catalog_id = 1 [json_name = "catalog_id"];

  string database_name = 2 [json_name = "database_name"];

  string id = 3;

  string table_name = 4 [json_name = "table_name"];

  PartitionIndex partition_index = 5 [json_name = "partition_index"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message PartitionIndex {
    string index_name = 1 [json_name = "index_name"];

    string index_status = 2 [json_name = "index_status"];

    repeated string keys = 3;
  }
}

//AwsGlueRegistry version is 0
message AwsGlueRegistry {
  string arn = 1;

  string description = 2;

  string id = 3;

  string registry_name = 4 [json_name = "registry_name"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsGlueResourcePolicy version is 0
message AwsGlueResourcePolicy {
  string enable_hybrid = 1 [json_name = "enable_hybrid"];

  string id = 2;

  string policy = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsGlueSchema version is 0
message AwsGlueSchema {
  string arn = 1;

  string compatibility = 2;

  string data_format = 3 [json_name = "data_format"];

  string description = 4;

  string id = 5;

  int64 latest_schema_version = 6 [json_name = "latest_schema_version"];

  int64 next_schema_version = 7 [json_name = "next_schema_version"];

  string registry_arn = 8 [json_name = "registry_arn"];

  string registry_name = 9 [json_name = "registry_name"];

  int64 schema_checkpoint = 10 [json_name = "schema_checkpoint"];

  string schema_definition = 11 [json_name = "schema_definition"];

  string schema_name = 12 [json_name = "schema_name"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;
}

//AwsGlueSecurityConfiguration version is 0
message AwsGlueSecurityConfiguration {
  string id = 1;

  string name = 2;

  EncryptionConfiguration encryption_configuration = 3 [json_name = "encryption_configuration"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message EncryptionConfiguration {
    CloudwatchEncryption cloudwatch_encryption = 1 [json_name = "cloudwatch_encryption"];

    JobBookmarksEncryption job_bookmarks_encryption = 2 [json_name = "job_bookmarks_encryption"];

    S3Encryption s3_encryption = 3 [json_name = "s3_encryption"];

    message CloudwatchEncryption {
      string cloudwatch_encryption_mode = 1 [json_name = "cloudwatch_encryption_mode"];

      string kms_key_arn = 2 [json_name = "kms_key_arn"];
    }

    message JobBookmarksEncryption {
      string job_bookmarks_encryption_mode = 1 [json_name = "job_bookmarks_encryption_mode"];

      string kms_key_arn = 2 [json_name = "kms_key_arn"];
    }

    message S3Encryption {
      string kms_key_arn = 1 [json_name = "kms_key_arn"];

      string s3_encryption_mode = 2 [json_name = "s3_encryption_mode"];
    }
  }
}

//AwsGlueTrigger version is 0
message AwsGlueTrigger {
  string arn = 1;

  string description = 2;

  bool enabled = 3;

  string id = 4;

  string name = 5;

  string schedule = 6;

  string state = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  string type = 10;

  string workflow_name = 11 [json_name = "workflow_name"];

  repeated Actions actions = 12;

  Predicate predicate = 13;

  repeated Timeouts timeouts = 14;

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message Actions {
    map<string, string> arguments = 1;

    string crawler_name = 2 [json_name = "crawler_name"];

    string job_name = 3 [json_name = "job_name"];

    string security_configuration = 4 [json_name = "security_configuration"];

    int64 timeout = 5;

    NotificationProperty notification_property = 6 [json_name = "notification_property"];

    message NotificationProperty {
      int64 notify_delay_after = 1 [json_name = "notify_delay_after"];
    }
  }

  message Predicate {
    string logical = 1;

    repeated Conditions conditions = 2;

    message Conditions {
      string crawl_state = 1 [json_name = "crawl_state"];

      string crawler_name = 2 [json_name = "crawler_name"];

      string job_name = 3 [json_name = "job_name"];

      string logical_operator = 4 [json_name = "logical_operator"];

      string state = 5;
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsGlueUserDefinedFunction version is 0
message AwsGlueUserDefinedFunction {
  string arn = 1;

  string catalog_id = 2 [json_name = "catalog_id"];

  string class_name = 3 [json_name = "class_name"];

  string create_time = 4 [json_name = "create_time"];

  string database_name = 5 [json_name = "database_name"];

  string id = 6;

  string name = 7;

  string owner_name = 8 [json_name = "owner_name"];

  string owner_type = 9 [json_name = "owner_type"];

  repeated ResourceUris resource_uris = 10 [json_name = "resource_uris"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message ResourceUris {
    string resource_type = 1 [json_name = "resource_type"];

    string uri = 2;
  }
}

//AwsGlueWorkflow version is 0
message AwsGlueWorkflow {
  string arn = 1;

  map<string, string> default_run_properties = 2 [json_name = "default_run_properties"];

  string description = 3;

  string id = 4;

  int64 max_concurrent_runs = 5 [json_name = "max_concurrent_runs"];

  string name = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsGuarddutyDetector version is 0
message AwsGuarddutyDetector {
  string account_id = 1 [json_name = "account_id"];

  string arn = 2;

  bool enable = 3;

  string finding_publishing_frequency = 4 [json_name = "finding_publishing_frequency"];

  string id = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  Datasources datasources = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Datasources {
    S3Logs s3_logs = 1 [json_name = "s3_logs"];

    message S3Logs {
      bool enable = 1;
    }
  }
}

//AwsGuarddutyFilter version is 0
message AwsGuarddutyFilter {
  string action = 1;

  string arn = 2;

  string description = 3;

  string detector_id = 4 [json_name = "detector_id"];

  string id = 5;

  string name = 6;

  int64 rank = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  FindingCriteria finding_criteria = 10 [json_name = "finding_criteria"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message FindingCriteria {
    repeated Criterion criterion = 1;

    message Criterion {
      repeated string equals = 1;

      string field = 2;

      string greater_than = 3 [json_name = "greater_than"];

      string greater_than_or_equal = 4 [json_name = "greater_than_or_equal"];

      string less_than = 5 [json_name = "less_than"];

      string less_than_or_equal = 6 [json_name = "less_than_or_equal"];

      repeated string not_equals = 7 [json_name = "not_equals"];
    }
  }
}

//AwsGuarddutyInviteAccepter version is 0
message AwsGuarddutyInviteAccepter {
  string detector_id = 1 [json_name = "detector_id"];

  string id = 2;

  string master_account_id = 3 [json_name = "master_account_id"];

  repeated Timeouts timeouts = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;
  }
}

//AwsGuarddutyIpset version is 0
message AwsGuarddutyIpset {
  bool activate = 1;

  string arn = 2;

  string detector_id = 3 [json_name = "detector_id"];

  string format = 4;

  string id = 5;

  string location = 6;

  string name = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsGuarddutyMember version is 0
message AwsGuarddutyMember {
  string account_id = 1 [json_name = "account_id"];

  string detector_id = 2 [json_name = "detector_id"];

  bool disable_email_notification = 3 [json_name = "disable_email_notification"];

  string email = 4;

  string id = 5;

  string invitation_message = 6 [json_name = "invitation_message"];

  bool invite = 7;

  string relationship_status = 8 [json_name = "relationship_status"];

  repeated Timeouts timeouts = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsGuarddutyOrganizationAdminAccount version is 0
message AwsGuarddutyOrganizationAdminAccount {
  string admin_account_id = 1 [json_name = "admin_account_id"];

  string id = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsGuarddutyOrganizationConfiguration version is 0
message AwsGuarddutyOrganizationConfiguration {
  bool auto_enable = 1 [json_name = "auto_enable"];

  string detector_id = 2 [json_name = "detector_id"];

  string id = 3;

  Datasources datasources = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Datasources {
    S3Logs s3_logs = 1 [json_name = "s3_logs"];

    message S3Logs {
      bool auto_enable = 1 [json_name = "auto_enable"];
    }
  }
}

//AwsGuarddutyPublishingDestination version is 0
message AwsGuarddutyPublishingDestination {
  string destination_arn = 1 [json_name = "destination_arn"];

  string destination_type = 2 [json_name = "destination_type"];

  string detector_id = 3 [json_name = "detector_id"];

  string id = 4;

  string kms_key_arn = 5 [json_name = "kms_key_arn"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsGuarddutyThreatintelset version is 0
message AwsGuarddutyThreatintelset {
  bool activate = 1;

  string arn = 2;

  string detector_id = 3 [json_name = "detector_id"];

  string format = 4;

  string id = 5;

  string location = 6;

  string name = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsIamAccessKey version is 0
message AwsIamAccessKey {
  string create_date = 1 [json_name = "create_date"];

  string encrypted_secret = 2 [json_name = "encrypted_secret"];

  string encrypted_ses_smtp_password_v4 = 3 [json_name = "encrypted_ses_smtp_password_v4"];

  string id = 4;

  string key_fingerprint = 5 [json_name = "key_fingerprint"];

  string pgp_key = 6 [json_name = "pgp_key"];

  string secret = 7;

  string ses_smtp_password_v4 = 8 [json_name = "ses_smtp_password_v4"];

  string status = 9;

  string user = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsIamAccountAlias version is 0
message AwsIamAccountAlias {
  string account_alias = 1 [json_name = "account_alias"];

  string id = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsIamAccountPasswordPolicy version is 0
message AwsIamAccountPasswordPolicy {
  bool allow_users_to_change_password = 1 [json_name = "allow_users_to_change_password"];

  bool expire_passwords = 2 [json_name = "expire_passwords"];

  bool hard_expiry = 3 [json_name = "hard_expiry"];

  string id = 4;

  int64 max_password_age = 5 [json_name = "max_password_age"];

  int64 minimum_password_length = 6 [json_name = "minimum_password_length"];

  int64 password_reuse_prevention = 7 [json_name = "password_reuse_prevention"];

  bool require_lowercase_characters = 8 [json_name = "require_lowercase_characters"];

  bool require_numbers = 9 [json_name = "require_numbers"];

  bool require_symbols = 10 [json_name = "require_symbols"];

  bool require_uppercase_characters = 11 [json_name = "require_uppercase_characters"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsIamGroup version is 0
message AwsIamGroup {
  string arn = 1;

  string id = 2;

  string name = 3;

  string path = 4;

  string unique_id = 5 [json_name = "unique_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIamGroupMembership version is 0
message AwsIamGroupMembership {
  string group = 1;

  string id = 2;

  string name = 3;

  repeated string users = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsIamGroupPolicy version is 0
message AwsIamGroupPolicy {
  string group = 1;

  string id = 2;

  string name = 3;

  string name_prefix = 4 [json_name = "name_prefix"];

  string policy = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIamGroupPolicyAttachment version is 0
message AwsIamGroupPolicyAttachment {
  string group = 1;

  string id = 2;

  string policy_arn = 3 [json_name = "policy_arn"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIamInstanceProfile version is 0
message AwsIamInstanceProfile {
  string arn = 1;

  string create_date = 2 [json_name = "create_date"];

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  string path = 6;

  string role = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  string unique_id = 10 [json_name = "unique_id"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsIamOpenidConnectProvider version is 0
message AwsIamOpenidConnectProvider {
  string arn = 1;

  repeated string client_id_list = 2 [json_name = "client_id_list"];

  string id = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  repeated string thumbprint_list = 6 [json_name = "thumbprint_list"];

  string url = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsIamPolicy version is 0
message AwsIamPolicy {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  string path = 6;

  string policy = 7;

  string policy_id = 8 [json_name = "policy_id"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsIamPolicyAttachment version is 0
message AwsIamPolicyAttachment {
  repeated string groups = 1;

  string id = 2;

  string name = 3;

  string policy_arn = 4 [json_name = "policy_arn"];

  repeated string roles = 5;

  repeated string users = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsIamRole version is 0
message AwsIamRole {
  string arn = 1;

  string assume_role_policy = 2 [json_name = "assume_role_policy"];

  string create_date = 3 [json_name = "create_date"];

  string description = 4;

  bool force_detach_policies = 5 [json_name = "force_detach_policies"];

  string id = 6;

  repeated string managed_policy_arns = 7 [json_name = "managed_policy_arns"];

  int64 max_session_duration = 8 [json_name = "max_session_duration"];

  string name = 9;

  string name_prefix = 10 [json_name = "name_prefix"];

  string path = 11;

  string permissions_boundary = 12 [json_name = "permissions_boundary"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  string unique_id = 15 [json_name = "unique_id"];

  repeated InlinePolicy inline_policy = 16 [json_name = "inline_policy"];

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message InlinePolicy {
    string name = 1;

    string policy = 2;
  }
}

//AwsIamRolePolicy version is 0
message AwsIamRolePolicy {
  string id = 1;

  string name = 2;

  string name_prefix = 3 [json_name = "name_prefix"];

  string policy = 4;

  string role = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIamRolePolicyAttachment version is 0
message AwsIamRolePolicyAttachment {
  string id = 1;

  string policy_arn = 2 [json_name = "policy_arn"];

  string role = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIamSamlProvider version is 0
message AwsIamSamlProvider {
  string arn = 1;

  string id = 2;

  string name = 3;

  string saml_metadata_document = 4 [json_name = "saml_metadata_document"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  string valid_until = 7 [json_name = "valid_until"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsIamServerCertificate version is 0
message AwsIamServerCertificate {
  string arn = 1;

  string certificate_body = 2 [json_name = "certificate_body"];

  string certificate_chain = 3 [json_name = "certificate_chain"];

  string expiration = 4;

  string id = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string path = 8;

  string private_key = 9 [json_name = "private_key"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  string upload_date = 12 [json_name = "upload_date"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsIamServiceLinkedRole version is 0
message AwsIamServiceLinkedRole {
  string arn = 1;

  string aws_service_name = 2 [json_name = "aws_service_name"];

  string create_date = 3 [json_name = "create_date"];

  string custom_suffix = 4 [json_name = "custom_suffix"];

  string description = 5;

  string id = 6;

  string name = 7;

  string path = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string unique_id = 11 [json_name = "unique_id"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsIamUser version is 0
message AwsIamUser {
  string arn = 1;

  //Delete user even if it has non-Terraform-managed IAM access keys, login profile or MFA devices
  bool force_destroy = 2 [json_name = "force_destroy"];

  string id = 3;

  string name = 4;

  string path = 5;

  string permissions_boundary = 6 [json_name = "permissions_boundary"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string unique_id = 9 [json_name = "unique_id"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsIamUserGroupMembership version is 0
message AwsIamUserGroupMembership {
  repeated string groups = 1;

  string id = 2;

  string user = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIamUserLoginProfile version is 0
message AwsIamUserLoginProfile {
  string encrypted_password = 1 [json_name = "encrypted_password"];

  string id = 2;

  string key_fingerprint = 3 [json_name = "key_fingerprint"];

  int64 password_length = 4 [json_name = "password_length"];

  bool password_reset_required = 5 [json_name = "password_reset_required"];

  string pgp_key = 6 [json_name = "pgp_key"];

  string user = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsIamUserPolicy version is 0
message AwsIamUserPolicy {
  string id = 1;

  string name = 2;

  string name_prefix = 3 [json_name = "name_prefix"];

  string policy = 4;

  string user = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIamUserPolicyAttachment version is 0
message AwsIamUserPolicyAttachment {
  string id = 1;

  string policy_arn = 2 [json_name = "policy_arn"];

  string user = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIamUserSshKey version is 0
message AwsIamUserSshKey {
  string encoding = 1;

  string fingerprint = 2;

  string id = 3;

  string public_key = 4 [json_name = "public_key"];

  string ssh_public_key_id = 5 [json_name = "ssh_public_key_id"];

  string status = 6;

  string username = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsImagebuilderComponent version is 0
message AwsImagebuilderComponent {
  string arn = 1;

  string change_description = 2 [json_name = "change_description"];

  string data = 3;

  string date_created = 4 [json_name = "date_created"];

  string description = 5;

  bool encrypted = 6;

  string id = 7;

  string kms_key_id = 8 [json_name = "kms_key_id"];

  string name = 9;

  string owner = 10;

  string platform = 11;

  repeated string supported_os_versions = 12 [json_name = "supported_os_versions"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  string type = 15;

  string uri = 16;

  string version = 17;

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;
}

//AwsImagebuilderDistributionConfiguration version is 0
message AwsImagebuilderDistributionConfiguration {
  string arn = 1;

  string date_created = 2 [json_name = "date_created"];

  string date_updated = 3 [json_name = "date_updated"];

  string description = 4;

  string id = 5;

  string name = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated Distribution distribution = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Distribution {
    repeated string license_configuration_arns = 1 [json_name = "license_configuration_arns"];

    string region = 2;

    AmiDistributionConfiguration ami_distribution_configuration = 3 [json_name = "ami_distribution_configuration"];

    message AmiDistributionConfiguration {
      map<string, string> ami_tags = 1 [json_name = "ami_tags"];

      string description = 2;

      string kms_key_id = 3 [json_name = "kms_key_id"];

      string name = 4;

      repeated string target_account_ids = 5 [json_name = "target_account_ids"];

      LaunchPermission launch_permission = 6 [json_name = "launch_permission"];

      message LaunchPermission {
        repeated string user_groups = 1 [json_name = "user_groups"];

        repeated string user_ids = 2 [json_name = "user_ids"];
      }
    }
  }
}

//AwsImagebuilderImage version is 0
message AwsImagebuilderImage {
  string arn = 1;

  string date_created = 2 [json_name = "date_created"];

  string distribution_configuration_arn = 3 [json_name = "distribution_configuration_arn"];

  bool enhanced_image_metadata_enabled = 4 [json_name = "enhanced_image_metadata_enabled"];

  string id = 5;

  string image_recipe_arn = 6 [json_name = "image_recipe_arn"];

  string infrastructure_configuration_arn = 7 [json_name = "infrastructure_configuration_arn"];

  string name = 8;

  string os_version = 9 [json_name = "os_version"];

  repeated OutputResources output_resources = 10 [json_name = "output_resources"];

  string platform = 11;

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string version = 14;

  ImageTestsConfiguration image_tests_configuration = 15 [json_name = "image_tests_configuration"];

  repeated Timeouts timeouts = 16;

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message OutputResources {
    //amis: set of object
    repeated Amis amis = 1;

    message Amis {
      //account_id: string
      string account_id = 1 [json_name = "account_id"];

      //description: string
      string description = 2;

      //image: string
      string image = 3;

      //name: string
      string name = 4;

      //region: string
      string region = 5;
    }
  }

  message ImageTestsConfiguration {
    bool image_tests_enabled = 1 [json_name = "image_tests_enabled"];

    int64 timeout_minutes = 2 [json_name = "timeout_minutes"];
  }

  message Timeouts {
    string create = 1;
  }
}

//AwsImagebuilderImagePipeline version is 0
message AwsImagebuilderImagePipeline {
  string arn = 1;

  string date_created = 2 [json_name = "date_created"];

  string date_last_run = 3 [json_name = "date_last_run"];

  string date_next_run = 4 [json_name = "date_next_run"];

  string date_updated = 5 [json_name = "date_updated"];

  string description = 6;

  string distribution_configuration_arn = 7 [json_name = "distribution_configuration_arn"];

  bool enhanced_image_metadata_enabled = 8 [json_name = "enhanced_image_metadata_enabled"];

  string id = 9;

  string image_recipe_arn = 10 [json_name = "image_recipe_arn"];

  string infrastructure_configuration_arn = 11 [json_name = "infrastructure_configuration_arn"];

  string name = 12;

  string platform = 13;

  string status = 14;

  map<string, string> tags = 15;

  map<string, string> tags_all = 16 [json_name = "tags_all"];

  ImageTestsConfiguration image_tests_configuration = 17 [json_name = "image_tests_configuration"];

  Schedule schedule = 18;

  repeated string depends_on = 19;

  int32 count = 20;

  map<string, string> for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message ImageTestsConfiguration {
    bool image_tests_enabled = 1 [json_name = "image_tests_enabled"];

    int64 timeout_minutes = 2 [json_name = "timeout_minutes"];
  }

  message Schedule {
    string pipeline_execution_start_condition = 1 [json_name = "pipeline_execution_start_condition"];

    string schedule_expression = 2 [json_name = "schedule_expression"];
  }
}

//AwsImagebuilderImageRecipe version is 0
message AwsImagebuilderImageRecipe {
  string arn = 1;

  string date_created = 2 [json_name = "date_created"];

  string description = 3;

  string id = 4;

  string name = 5;

  string owner = 6;

  string parent_image = 7 [json_name = "parent_image"];

  string platform = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string version = 11;

  string working_directory = 12 [json_name = "working_directory"];

  repeated BlockDeviceMapping block_device_mapping = 13 [json_name = "block_device_mapping"];

  repeated Component component = 14;

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message BlockDeviceMapping {
    string device_name = 1 [json_name = "device_name"];

    bool no_device = 2 [json_name = "no_device"];

    string virtual_name = 3 [json_name = "virtual_name"];

    Ebs ebs = 4;

    message Ebs {
      string delete_on_termination = 1 [json_name = "delete_on_termination"];

      string encrypted = 2;

      int64 iops = 3;

      string kms_key_id = 4 [json_name = "kms_key_id"];

      string snapshot_id = 5 [json_name = "snapshot_id"];

      int64 volume_size = 6 [json_name = "volume_size"];

      string volume_type = 7 [json_name = "volume_type"];
    }
  }

  message Component {
    string component_arn = 1 [json_name = "component_arn"];
  }
}

//AwsImagebuilderInfrastructureConfiguration version is 0
message AwsImagebuilderInfrastructureConfiguration {
  string arn = 1;

  string date_created = 2 [json_name = "date_created"];

  string date_updated = 3 [json_name = "date_updated"];

  string description = 4;

  string id = 5;

  string instance_profile_name = 6 [json_name = "instance_profile_name"];

  repeated string instance_types = 7 [json_name = "instance_types"];

  string key_pair = 8 [json_name = "key_pair"];

  string name = 9;

  map<string, string> resource_tags = 10 [json_name = "resource_tags"];

  repeated string security_group_ids = 11 [json_name = "security_group_ids"];

  string sns_topic_arn = 12 [json_name = "sns_topic_arn"];

  string subnet_id = 13 [json_name = "subnet_id"];

  map<string, string> tags = 14;

  map<string, string> tags_all = 15 [json_name = "tags_all"];

  bool terminate_instance_on_failure = 16 [json_name = "terminate_instance_on_failure"];

  Logging logging = 17;

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message Logging {
    S3Logs s3_logs = 1 [json_name = "s3_logs"];

    message S3Logs {
      string s3_bucket_name = 1 [json_name = "s3_bucket_name"];

      string s3_key_prefix = 2 [json_name = "s3_key_prefix"];
    }
  }
}

//AwsInspectorAssessmentTarget version is 0
message AwsInspectorAssessmentTarget {
  string arn = 1;

  string id = 2;

  string name = 3;

  string resource_group_arn = 4 [json_name = "resource_group_arn"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsInspectorAssessmentTemplate version is 0
message AwsInspectorAssessmentTemplate {
  string arn = 1;

  int64 duration = 2;

  string id = 3;

  string name = 4;

  repeated string rules_package_arns = 5 [json_name = "rules_package_arns"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string target_arn = 8 [json_name = "target_arn"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsInspectorResourceGroup version is 0
message AwsInspectorResourceGroup {
  string arn = 1;

  string id = 2;

  map<string, string> tags = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsInstance version is 1
message AwsInstance {
  string ami = 1;

  string arn = 2;

  bool associate_public_ip_address = 3 [json_name = "associate_public_ip_address"];

  string availability_zone = 4 [json_name = "availability_zone"];

  int64 cpu_core_count = 5 [json_name = "cpu_core_count"];

  int64 cpu_threads_per_core = 6 [json_name = "cpu_threads_per_core"];

  bool disable_api_termination = 7 [json_name = "disable_api_termination"];

  bool ebs_optimized = 8 [json_name = "ebs_optimized"];

  bool get_password_data = 9 [json_name = "get_password_data"];

  bool hibernation = 10;

  string host_id = 11 [json_name = "host_id"];

  string iam_instance_profile = 12 [json_name = "iam_instance_profile"];

  string id = 13;

  string instance_initiated_shutdown_behavior = 14 [json_name = "instance_initiated_shutdown_behavior"];

  string instance_state = 15 [json_name = "instance_state"];

  string instance_type = 16 [json_name = "instance_type"];

  int64 ipv6_address_count = 17 [json_name = "ipv6_address_count"];

  repeated string ipv6_addresses = 18 [json_name = "ipv6_addresses"];

  string key_name = 19 [json_name = "key_name"];

  bool monitoring = 20;

  string outpost_arn = 21 [json_name = "outpost_arn"];

  string password_data = 22 [json_name = "password_data"];

  string placement_group = 23 [json_name = "placement_group"];

  int64 placement_partition_number = 24 [json_name = "placement_partition_number"];

  string primary_network_interface_id = 25 [json_name = "primary_network_interface_id"];

  string private_dns = 26 [json_name = "private_dns"];

  string private_ip = 27 [json_name = "private_ip"];

  string public_dns = 28 [json_name = "public_dns"];

  string public_ip = 29 [json_name = "public_ip"];

  repeated string secondary_private_ips = 30 [json_name = "secondary_private_ips"];

  repeated string security_groups = 31 [json_name = "security_groups"];

  bool source_dest_check = 32 [json_name = "source_dest_check"];

  string subnet_id = 33 [json_name = "subnet_id"];

  map<string, string> tags = 34;

  map<string, string> tags_all = 35 [json_name = "tags_all"];

  string tenancy = 36;

  string user_data = 37 [json_name = "user_data"];

  string user_data_base64 = 38 [json_name = "user_data_base64"];

  map<string, string> volume_tags = 39 [json_name = "volume_tags"];

  repeated string vpc_security_group_ids = 40 [json_name = "vpc_security_group_ids"];

  CapacityReservationSpecification capacity_reservation_specification = 41 [json_name = "capacity_reservation_specification"];

  CreditSpecification credit_specification = 42 [json_name = "credit_specification"];

  repeated EbsBlockDevice ebs_block_device = 43 [json_name = "ebs_block_device"];

  EnclaveOptions enclave_options = 44 [json_name = "enclave_options"];

  repeated EphemeralBlockDevice ephemeral_block_device = 45 [json_name = "ephemeral_block_device"];

  LaunchTemplate launch_template = 46 [json_name = "launch_template"];

  MetadataOptions metadata_options = 47 [json_name = "metadata_options"];

  repeated NetworkInterface network_interface = 48 [json_name = "network_interface"];

  RootBlockDevice root_block_device = 49 [json_name = "root_block_device"];

  repeated Timeouts timeouts = 50;

  repeated string depends_on = 51;

  int32 count = 52;

  map<string, string> for_each = 53;

  string provider = 54;

  terraform.meta.Lifecycle lifecycle = 55;

  message CapacityReservationSpecification {
    string capacity_reservation_preference = 1 [json_name = "capacity_reservation_preference"];

    CapacityReservationTarget capacity_reservation_target = 2 [json_name = "capacity_reservation_target"];

    message CapacityReservationTarget {
      string capacity_reservation_id = 1 [json_name = "capacity_reservation_id"];
    }
  }

  message CreditSpecification {
    string cpu_credits = 1 [json_name = "cpu_credits"];
  }

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string kms_key_id = 5 [json_name = "kms_key_id"];

    string snapshot_id = 6 [json_name = "snapshot_id"];

    map<string, string> tags = 7;

    int64 throughput = 8;

    string volume_id = 9 [json_name = "volume_id"];

    int64 volume_size = 10 [json_name = "volume_size"];

    string volume_type = 11 [json_name = "volume_type"];
  }

  message EnclaveOptions {
    bool enabled = 1;
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    bool no_device = 2 [json_name = "no_device"];

    string virtual_name = 3 [json_name = "virtual_name"];
  }

  message LaunchTemplate {
    string id = 1;

    string name = 2;

    string version = 3;
  }

  message MetadataOptions {
    string http_endpoint = 1 [json_name = "http_endpoint"];

    int64 http_put_response_hop_limit = 2 [json_name = "http_put_response_hop_limit"];

    string http_tokens = 3 [json_name = "http_tokens"];
  }

  message NetworkInterface {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    int64 device_index = 2 [json_name = "device_index"];

    string network_interface_id = 3 [json_name = "network_interface_id"];
  }

  message RootBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string kms_key_id = 5 [json_name = "kms_key_id"];

    map<string, string> tags = 6;

    int64 throughput = 7;

    string volume_id = 8 [json_name = "volume_id"];

    int64 volume_size = 9 [json_name = "volume_size"];

    string volume_type = 10 [json_name = "volume_type"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsInternetGateway version is 0
message AwsInternetGateway {
  string arn = 1;

  string id = 2;

  string owner_id = 3 [json_name = "owner_id"];

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  string vpc_id = 6 [json_name = "vpc_id"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsIotAuthorizer version is 0
message AwsIotAuthorizer {
  string arn = 1;

  string authorizer_function_arn = 2 [json_name = "authorizer_function_arn"];

  string id = 3;

  string name = 4;

  bool signing_disabled = 5 [json_name = "signing_disabled"];

  string status = 6;

  string token_key_name = 7 [json_name = "token_key_name"];

  map<string, string> token_signing_public_keys = 8 [json_name = "token_signing_public_keys"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsIotCertificate version is 0
message AwsIotCertificate {
  bool active = 1;

  string arn = 2;

  string certificate_pem = 3 [json_name = "certificate_pem"];

  string csr = 4;

  string id = 5;

  string private_key = 6 [json_name = "private_key"];

  string public_key = 7 [json_name = "public_key"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsIotPolicy version is 0
message AwsIotPolicy {
  string arn = 1;

  string default_version_id = 2 [json_name = "default_version_id"];

  string id = 3;

  string name = 4;

  string policy = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIotPolicyAttachment version is 0
message AwsIotPolicyAttachment {
  string id = 1;

  string policy = 2;

  string target = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIotRoleAlias version is 0
message AwsIotRoleAlias {
  string alias = 1;

  string arn = 2;

  int64 credential_duration = 3 [json_name = "credential_duration"];

  string id = 4;

  string role_arn = 5 [json_name = "role_arn"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsIotThing version is 0
message AwsIotThing {
  string arn = 1;

  map<string, string> attributes = 2;

  string default_client_id = 3 [json_name = "default_client_id"];

  string id = 4;

  string name = 5;

  string thing_type_name = 6 [json_name = "thing_type_name"];

  int64 version = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsIotThingGroup version is 0
message AwsIotThingGroup {
  string arn = 1;

  string id = 2;

  repeated Metadata metadata = 3;

  string name = 4;

  string parent_group_name = 5 [json_name = "parent_group_name"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  int64 version = 8;

  Properties properties = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Metadata {
    //creation_date: string
    string creation_date = 1 [json_name = "creation_date"];

    //parent_group_name: string
    string parent_group_name = 2 [json_name = "parent_group_name"];

    //root_to_parent_groups: list of object
    repeated RootToParentGroups root_to_parent_groups = 3 [json_name = "root_to_parent_groups"];

    message RootToParentGroups {
      //group_arn: string
      string group_arn = 1 [json_name = "group_arn"];

      //group_name: string
      string group_name = 2 [json_name = "group_name"];
    }
  }

  message Properties {
    string description = 1;

    AttributePayload attribute_payload = 2 [json_name = "attribute_payload"];

    message AttributePayload {
      map<string, string> attributes = 1;
    }
  }
}

//AwsIotThingGroupMembership version is 0
message AwsIotThingGroupMembership {
  string id = 1;

  bool override_dynamic_group = 2 [json_name = "override_dynamic_group"];

  string thing_group_name = 3 [json_name = "thing_group_name"];

  string thing_name = 4 [json_name = "thing_name"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsIotThingPrincipalAttachment version is 0
message AwsIotThingPrincipalAttachment {
  string id = 1;

  string principal = 2;

  string thing = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsIotThingType version is 0
message AwsIotThingType {
  string arn = 1;

  bool deprecated = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  Properties properties = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Properties {
    string description = 1;

    repeated string searchable_attributes = 2 [json_name = "searchable_attributes"];
  }
}

//AwsIotTopicRule version is 0
message AwsIotTopicRule {
  string arn = 1;

  string description = 2;

  bool enabled = 3;

  string id = 4;

  string name = 5;

  string sql = 6;

  string sql_version = 7 [json_name = "sql_version"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated CloudwatchAlarm cloudwatch_alarm = 10 [json_name = "cloudwatch_alarm"];

  repeated CloudwatchMetric cloudwatch_metric = 11 [json_name = "cloudwatch_metric"];

  repeated Dynamodb dynamodb = 12;

  repeated Dynamodbv2 dynamodbv2 = 13;

  repeated Elasticsearch elasticsearch = 14;

  ErrorAction error_action = 15 [json_name = "error_action"];

  repeated Firehose firehose = 16;

  repeated IotAnalytics iot_analytics = 17 [json_name = "iot_analytics"];

  repeated IotEvents iot_events = 18 [json_name = "iot_events"];

  repeated Kinesis kinesis = 19;

  repeated Lambda lambda = 20;

  repeated Republish republish = 21;

  repeated S3 s3 = 22;

  repeated Sns sns = 23;

  repeated Sqs sqs = 24;

  repeated StepFunctions step_functions = 25 [json_name = "step_functions"];

  repeated string depends_on = 26;

  int32 count = 27;

  map<string, string> for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message CloudwatchAlarm {
    string alarm_name = 1 [json_name = "alarm_name"];

    string role_arn = 2 [json_name = "role_arn"];

    string state_reason = 3 [json_name = "state_reason"];

    string state_value = 4 [json_name = "state_value"];
  }

  message CloudwatchMetric {
    string metric_name = 1 [json_name = "metric_name"];

    string metric_namespace = 2 [json_name = "metric_namespace"];

    string metric_timestamp = 3 [json_name = "metric_timestamp"];

    string metric_unit = 4 [json_name = "metric_unit"];

    string metric_value = 5 [json_name = "metric_value"];

    string role_arn = 6 [json_name = "role_arn"];
  }

  message Dynamodb {
    string hash_key_field = 1 [json_name = "hash_key_field"];

    string hash_key_type = 2 [json_name = "hash_key_type"];

    string hash_key_value = 3 [json_name = "hash_key_value"];

    string operation = 4;

    string payload_field = 5 [json_name = "payload_field"];

    string range_key_field = 6 [json_name = "range_key_field"];

    string range_key_type = 7 [json_name = "range_key_type"];

    string range_key_value = 8 [json_name = "range_key_value"];

    string role_arn = 9 [json_name = "role_arn"];

    string table_name = 10 [json_name = "table_name"];
  }

  message Dynamodbv2 {
    string role_arn = 1 [json_name = "role_arn"];

    PutItem put_item = 2 [json_name = "put_item"];

    message PutItem {
      string table_name = 1 [json_name = "table_name"];
    }
  }

  message Elasticsearch {
    string endpoint = 1;

    string id = 2;

    string index = 3;

    string role_arn = 4 [json_name = "role_arn"];

    string type = 5;
  }

  message ErrorAction {
    CloudwatchAlarm cloudwatch_alarm = 1 [json_name = "cloudwatch_alarm"];

    CloudwatchMetric cloudwatch_metric = 2 [json_name = "cloudwatch_metric"];

    Dynamodb dynamodb = 3;

    Dynamodbv2 dynamodbv2 = 4;

    Elasticsearch elasticsearch = 5;

    Firehose firehose = 6;

    IotAnalytics iot_analytics = 7 [json_name = "iot_analytics"];

    IotEvents iot_events = 8 [json_name = "iot_events"];

    Kinesis kinesis = 9;

    Lambda lambda = 10;

    Republish republish = 11;

    S3 s3 = 12;

    Sns sns = 13;

    Sqs sqs = 14;

    StepFunctions step_functions = 15 [json_name = "step_functions"];

    message CloudwatchAlarm {
      string alarm_name = 1 [json_name = "alarm_name"];

      string role_arn = 2 [json_name = "role_arn"];

      string state_reason = 3 [json_name = "state_reason"];

      string state_value = 4 [json_name = "state_value"];
    }

    message CloudwatchMetric {
      string metric_name = 1 [json_name = "metric_name"];

      string metric_namespace = 2 [json_name = "metric_namespace"];

      string metric_timestamp = 3 [json_name = "metric_timestamp"];

      string metric_unit = 4 [json_name = "metric_unit"];

      string metric_value = 5 [json_name = "metric_value"];

      string role_arn = 6 [json_name = "role_arn"];
    }

    message Dynamodb {
      string hash_key_field = 1 [json_name = "hash_key_field"];

      string hash_key_type = 2 [json_name = "hash_key_type"];

      string hash_key_value = 3 [json_name = "hash_key_value"];

      string operation = 4;

      string payload_field = 5 [json_name = "payload_field"];

      string range_key_field = 6 [json_name = "range_key_field"];

      string range_key_type = 7 [json_name = "range_key_type"];

      string range_key_value = 8 [json_name = "range_key_value"];

      string role_arn = 9 [json_name = "role_arn"];

      string table_name = 10 [json_name = "table_name"];
    }

    message Dynamodbv2 {
      string role_arn = 1 [json_name = "role_arn"];

      PutItem put_item = 2 [json_name = "put_item"];

      message PutItem {
        string table_name = 1 [json_name = "table_name"];
      }
    }

    message Elasticsearch {
      string endpoint = 1;

      string id = 2;

      string index = 3;

      string role_arn = 4 [json_name = "role_arn"];

      string type = 5;
    }

    message Firehose {
      string delivery_stream_name = 1 [json_name = "delivery_stream_name"];

      string role_arn = 2 [json_name = "role_arn"];

      string separator = 3;
    }

    message IotAnalytics {
      string channel_name = 1 [json_name = "channel_name"];

      string role_arn = 2 [json_name = "role_arn"];
    }

    message IotEvents {
      string input_name = 1 [json_name = "input_name"];

      string message_id = 2 [json_name = "message_id"];

      string role_arn = 3 [json_name = "role_arn"];
    }

    message Kinesis {
      string partition_key = 1 [json_name = "partition_key"];

      string role_arn = 2 [json_name = "role_arn"];

      string stream_name = 3 [json_name = "stream_name"];
    }

    message Lambda {
      string function_arn = 1 [json_name = "function_arn"];
    }

    message Republish {
      int64 qos = 1;

      string role_arn = 2 [json_name = "role_arn"];

      string topic = 3;
    }

    message S3 {
      string bucket_name = 1 [json_name = "bucket_name"];

      string key = 2;

      string role_arn = 3 [json_name = "role_arn"];
    }

    message Sns {
      string message_format = 1 [json_name = "message_format"];

      string role_arn = 2 [json_name = "role_arn"];

      string target_arn = 3 [json_name = "target_arn"];
    }

    message Sqs {
      string queue_url = 1 [json_name = "queue_url"];

      string role_arn = 2 [json_name = "role_arn"];

      bool use_base64 = 3 [json_name = "use_base64"];
    }

    message StepFunctions {
      string execution_name_prefix = 1 [json_name = "execution_name_prefix"];

      string role_arn = 2 [json_name = "role_arn"];

      string state_machine_name = 3 [json_name = "state_machine_name"];
    }
  }

  message Firehose {
    string delivery_stream_name = 1 [json_name = "delivery_stream_name"];

    string role_arn = 2 [json_name = "role_arn"];

    string separator = 3;
  }

  message IotAnalytics {
    string channel_name = 1 [json_name = "channel_name"];

    string role_arn = 2 [json_name = "role_arn"];
  }

  message IotEvents {
    string input_name = 1 [json_name = "input_name"];

    string message_id = 2 [json_name = "message_id"];

    string role_arn = 3 [json_name = "role_arn"];
  }

  message Kinesis {
    string partition_key = 1 [json_name = "partition_key"];

    string role_arn = 2 [json_name = "role_arn"];

    string stream_name = 3 [json_name = "stream_name"];
  }

  message Lambda {
    string function_arn = 1 [json_name = "function_arn"];
  }

  message Republish {
    int64 qos = 1;

    string role_arn = 2 [json_name = "role_arn"];

    string topic = 3;
  }

  message S3 {
    string bucket_name = 1 [json_name = "bucket_name"];

    string key = 2;

    string role_arn = 3 [json_name = "role_arn"];
  }

  message Sns {
    string message_format = 1 [json_name = "message_format"];

    string role_arn = 2 [json_name = "role_arn"];

    string target_arn = 3 [json_name = "target_arn"];
  }

  message Sqs {
    string queue_url = 1 [json_name = "queue_url"];

    string role_arn = 2 [json_name = "role_arn"];

    bool use_base64 = 3 [json_name = "use_base64"];
  }

  message StepFunctions {
    string execution_name_prefix = 1 [json_name = "execution_name_prefix"];

    string role_arn = 2 [json_name = "role_arn"];

    string state_machine_name = 3 [json_name = "state_machine_name"];
  }
}

//AwsKeyPair version is 1
message AwsKeyPair {
  string arn = 1;

  string fingerprint = 2;

  string id = 3;

  string key_name = 4 [json_name = "key_name"];

  string key_name_prefix = 5 [json_name = "key_name_prefix"];

  string key_pair_id = 6 [json_name = "key_pair_id"];

  string public_key = 7 [json_name = "public_key"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsKinesisAnalyticsApplication version is 0
message AwsKinesisAnalyticsApplication {
  string arn = 1;

  string code = 2;

  string create_timestamp = 3 [json_name = "create_timestamp"];

  string description = 4;

  string id = 5;

  string last_update_timestamp = 6 [json_name = "last_update_timestamp"];

  string name = 7;

  bool start_application = 8 [json_name = "start_application"];

  string status = 9;

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  int64 version = 12;

  CloudwatchLoggingOptions cloudwatch_logging_options = 13 [json_name = "cloudwatch_logging_options"];

  Inputs inputs = 14;

  repeated Outputs outputs = 15;

  ReferenceDataSources reference_data_sources = 16 [json_name = "reference_data_sources"];

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message CloudwatchLoggingOptions {
    string id = 1;

    string log_stream_arn = 2 [json_name = "log_stream_arn"];

    string role_arn = 3 [json_name = "role_arn"];
  }

  message Inputs {
    string id = 1;

    string name_prefix = 2 [json_name = "name_prefix"];

    repeated string stream_names = 3 [json_name = "stream_names"];

    KinesisFirehose kinesis_firehose = 4 [json_name = "kinesis_firehose"];

    KinesisStream kinesis_stream = 5 [json_name = "kinesis_stream"];

    Parallelism parallelism = 6;

    ProcessingConfiguration processing_configuration = 7 [json_name = "processing_configuration"];

    Schema schema = 8;

    repeated StartingPositionConfiguration starting_position_configuration = 9 [json_name = "starting_position_configuration"];

    message KinesisFirehose {
      string resource_arn = 1 [json_name = "resource_arn"];

      string role_arn = 2 [json_name = "role_arn"];
    }

    message KinesisStream {
      string resource_arn = 1 [json_name = "resource_arn"];

      string role_arn = 2 [json_name = "role_arn"];
    }

    message Parallelism {
      int64 count = 1;
    }

    message ProcessingConfiguration {
      Lambda lambda = 1;

      message Lambda {
        string resource_arn = 1 [json_name = "resource_arn"];

        string role_arn = 2 [json_name = "role_arn"];
      }
    }

    message Schema {
      string record_encoding = 1 [json_name = "record_encoding"];

      repeated RecordColumns record_columns = 2 [json_name = "record_columns"];

      RecordFormat record_format = 3 [json_name = "record_format"];

      message RecordColumns {
        string mapping = 1;

        string name = 2;

        string sql_type = 3 [json_name = "sql_type"];
      }

      message RecordFormat {
        string record_format_type = 1 [json_name = "record_format_type"];

        MappingParameters mapping_parameters = 2 [json_name = "mapping_parameters"];

        message MappingParameters {
          Csv csv = 1;

          Json json = 2;

          message Csv {
            string record_column_delimiter = 1 [json_name = "record_column_delimiter"];

            string record_row_delimiter = 2 [json_name = "record_row_delimiter"];
          }

          message Json {
            string record_row_path = 1 [json_name = "record_row_path"];
          }
        }
      }
    }

    message StartingPositionConfiguration {
      string starting_position = 1 [json_name = "starting_position"];
    }
  }

  message Outputs {
    string id = 1;

    string name = 2;

    KinesisFirehose kinesis_firehose = 3 [json_name = "kinesis_firehose"];

    KinesisStream kinesis_stream = 4 [json_name = "kinesis_stream"];

    Lambda lambda = 5;

    Schema schema = 6;

    message KinesisFirehose {
      string resource_arn = 1 [json_name = "resource_arn"];

      string role_arn = 2 [json_name = "role_arn"];
    }

    message KinesisStream {
      string resource_arn = 1 [json_name = "resource_arn"];

      string role_arn = 2 [json_name = "role_arn"];
    }

    message Lambda {
      string resource_arn = 1 [json_name = "resource_arn"];

      string role_arn = 2 [json_name = "role_arn"];
    }

    message Schema {
      string record_format_type = 1 [json_name = "record_format_type"];
    }
  }

  message ReferenceDataSources {
    string id = 1;

    string table_name = 2 [json_name = "table_name"];

    S3 s3 = 3;

    Schema schema = 4;

    message S3 {
      string bucket_arn = 1 [json_name = "bucket_arn"];

      string file_key = 2 [json_name = "file_key"];

      string role_arn = 3 [json_name = "role_arn"];
    }

    message Schema {
      string record_encoding = 1 [json_name = "record_encoding"];

      repeated RecordColumns record_columns = 2 [json_name = "record_columns"];

      RecordFormat record_format = 3 [json_name = "record_format"];

      message RecordColumns {
        string mapping = 1;

        string name = 2;

        string sql_type = 3 [json_name = "sql_type"];
      }

      message RecordFormat {
        string record_format_type = 1 [json_name = "record_format_type"];

        MappingParameters mapping_parameters = 2 [json_name = "mapping_parameters"];

        message MappingParameters {
          Csv csv = 1;

          Json json = 2;

          message Csv {
            string record_column_delimiter = 1 [json_name = "record_column_delimiter"];

            string record_row_delimiter = 2 [json_name = "record_row_delimiter"];
          }

          message Json {
            string record_row_path = 1 [json_name = "record_row_path"];
          }
        }
      }
    }
  }
}

//AwsKinesisFirehoseDeliveryStream version is 1
message AwsKinesisFirehoseDeliveryStream {
  string arn = 1;

  string destination = 2;

  string destination_id = 3 [json_name = "destination_id"];

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string version_id = 8 [json_name = "version_id"];

  ElasticsearchConfiguration elasticsearch_configuration = 9 [json_name = "elasticsearch_configuration"];

  ExtendedS3Configuration extended_s3_configuration = 10 [json_name = "extended_s3_configuration"];

  HttpEndpointConfiguration http_endpoint_configuration = 11 [json_name = "http_endpoint_configuration"];

  KinesisSourceConfiguration kinesis_source_configuration = 12 [json_name = "kinesis_source_configuration"];

  RedshiftConfiguration redshift_configuration = 13 [json_name = "redshift_configuration"];

  S3Configuration s3_configuration = 14 [json_name = "s3_configuration"];

  ServerSideEncryption server_side_encryption = 15 [json_name = "server_side_encryption"];

  SplunkConfiguration splunk_configuration = 16 [json_name = "splunk_configuration"];

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message ElasticsearchConfiguration {
    int64 buffering_interval = 1 [json_name = "buffering_interval"];

    int64 buffering_size = 2 [json_name = "buffering_size"];

    string cluster_endpoint = 3 [json_name = "cluster_endpoint"];

    string domain_arn = 4 [json_name = "domain_arn"];

    string index_name = 5 [json_name = "index_name"];

    string index_rotation_period = 6 [json_name = "index_rotation_period"];

    int64 retry_duration = 7 [json_name = "retry_duration"];

    string role_arn = 8 [json_name = "role_arn"];

    string s3_backup_mode = 9 [json_name = "s3_backup_mode"];

    string type_name = 10 [json_name = "type_name"];

    CloudwatchLoggingOptions cloudwatch_logging_options = 11 [json_name = "cloudwatch_logging_options"];

    ProcessingConfiguration processing_configuration = 12 [json_name = "processing_configuration"];

    VpcConfig vpc_config = 13 [json_name = "vpc_config"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }

    message ProcessingConfiguration {
      bool enabled = 1;

      repeated Processors processors = 2;

      message Processors {
        string type = 1;

        repeated Parameters parameters = 2;

        message Parameters {
          string parameter_name = 1 [json_name = "parameter_name"];

          string parameter_value = 2 [json_name = "parameter_value"];
        }
      }
    }

    message VpcConfig {
      string role_arn = 1 [json_name = "role_arn"];

      repeated string security_group_ids = 2 [json_name = "security_group_ids"];

      repeated string subnet_ids = 3 [json_name = "subnet_ids"];

      string vpc_id = 4 [json_name = "vpc_id"];
    }
  }

  message ExtendedS3Configuration {
    string bucket_arn = 1 [json_name = "bucket_arn"];

    int64 buffer_interval = 2 [json_name = "buffer_interval"];

    int64 buffer_size = 3 [json_name = "buffer_size"];

    string compression_format = 4 [json_name = "compression_format"];

    string error_output_prefix = 5 [json_name = "error_output_prefix"];

    string kms_key_arn = 6 [json_name = "kms_key_arn"];

    string prefix = 7;

    string role_arn = 8 [json_name = "role_arn"];

    string s3_backup_mode = 9 [json_name = "s3_backup_mode"];

    CloudwatchLoggingOptions cloudwatch_logging_options = 10 [json_name = "cloudwatch_logging_options"];

    DataFormatConversionConfiguration data_format_conversion_configuration = 11 [json_name = "data_format_conversion_configuration"];

    DynamicPartitioningConfiguration dynamic_partitioning_configuration = 12 [json_name = "dynamic_partitioning_configuration"];

    ProcessingConfiguration processing_configuration = 13 [json_name = "processing_configuration"];

    S3BackupConfiguration s3_backup_configuration = 14 [json_name = "s3_backup_configuration"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }

    message DataFormatConversionConfiguration {
      bool enabled = 1;

      InputFormatConfiguration input_format_configuration = 2 [json_name = "input_format_configuration"];

      OutputFormatConfiguration output_format_configuration = 3 [json_name = "output_format_configuration"];

      SchemaConfiguration schema_configuration = 4 [json_name = "schema_configuration"];

      message InputFormatConfiguration {
        Deserializer deserializer = 1;

        message Deserializer {
          HiveJsonSerDe hive_json_ser_de = 1 [json_name = "hive_json_ser_de"];

          OpenXJsonSerDe open_x_json_ser_de = 2 [json_name = "open_x_json_ser_de"];

          message HiveJsonSerDe {
            repeated string timestamp_formats = 1 [json_name = "timestamp_formats"];
          }

          message OpenXJsonSerDe {
            bool case_insensitive = 1 [json_name = "case_insensitive"];

            map<string, string> column_to_json_key_mappings = 2 [json_name = "column_to_json_key_mappings"];

            bool convert_dots_in_json_keys_to_underscores = 3 [json_name = "convert_dots_in_json_keys_to_underscores"];
          }
        }
      }

      message OutputFormatConfiguration {
        Serializer serializer = 1;

        message Serializer {
          OrcSerDe orc_ser_de = 1 [json_name = "orc_ser_de"];

          ParquetSerDe parquet_ser_de = 2 [json_name = "parquet_ser_de"];

          message OrcSerDe {
            int64 block_size_bytes = 1 [json_name = "block_size_bytes"];

            repeated string bloom_filter_columns = 2 [json_name = "bloom_filter_columns"];

            int64 bloom_filter_false_positive_probability = 3 [json_name = "bloom_filter_false_positive_probability"];

            string compression = 4;

            int64 dictionary_key_threshold = 5 [json_name = "dictionary_key_threshold"];

            bool enable_padding = 6 [json_name = "enable_padding"];

            string format_version = 7 [json_name = "format_version"];

            int64 padding_tolerance = 8 [json_name = "padding_tolerance"];

            int64 row_index_stride = 9 [json_name = "row_index_stride"];

            int64 stripe_size_bytes = 10 [json_name = "stripe_size_bytes"];
          }

          message ParquetSerDe {
            int64 block_size_bytes = 1 [json_name = "block_size_bytes"];

            string compression = 2;

            bool enable_dictionary_compression = 3 [json_name = "enable_dictionary_compression"];

            int64 max_padding_bytes = 4 [json_name = "max_padding_bytes"];

            int64 page_size_bytes = 5 [json_name = "page_size_bytes"];

            string writer_version = 6 [json_name = "writer_version"];
          }
        }
      }

      message SchemaConfiguration {
        string catalog_id = 1 [json_name = "catalog_id"];

        string database_name = 2 [json_name = "database_name"];

        string region = 3;

        string role_arn = 4 [json_name = "role_arn"];

        string table_name = 5 [json_name = "table_name"];

        string version_id = 6 [json_name = "version_id"];
      }
    }

    message DynamicPartitioningConfiguration {
      bool enabled = 1;

      int64 retry_duration = 2 [json_name = "retry_duration"];
    }

    message ProcessingConfiguration {
      bool enabled = 1;

      repeated Processors processors = 2;

      message Processors {
        string type = 1;

        repeated Parameters parameters = 2;

        message Parameters {
          string parameter_name = 1 [json_name = "parameter_name"];

          string parameter_value = 2 [json_name = "parameter_value"];
        }
      }
    }

    message S3BackupConfiguration {
      string bucket_arn = 1 [json_name = "bucket_arn"];

      int64 buffer_interval = 2 [json_name = "buffer_interval"];

      int64 buffer_size = 3 [json_name = "buffer_size"];

      string compression_format = 4 [json_name = "compression_format"];

      string kms_key_arn = 5 [json_name = "kms_key_arn"];

      string prefix = 6;

      string role_arn = 7 [json_name = "role_arn"];

      CloudwatchLoggingOptions cloudwatch_logging_options = 8 [json_name = "cloudwatch_logging_options"];

      message CloudwatchLoggingOptions {
        bool enabled = 1;

        string log_group_name = 2 [json_name = "log_group_name"];

        string log_stream_name = 3 [json_name = "log_stream_name"];
      }
    }
  }

  message HttpEndpointConfiguration {
    string access_key = 1 [json_name = "access_key"];

    int64 buffering_interval = 2 [json_name = "buffering_interval"];

    int64 buffering_size = 3 [json_name = "buffering_size"];

    string name = 4;

    int64 retry_duration = 5 [json_name = "retry_duration"];

    string role_arn = 6 [json_name = "role_arn"];

    string s3_backup_mode = 7 [json_name = "s3_backup_mode"];

    string url = 8;

    CloudwatchLoggingOptions cloudwatch_logging_options = 9 [json_name = "cloudwatch_logging_options"];

    ProcessingConfiguration processing_configuration = 10 [json_name = "processing_configuration"];

    RequestConfiguration request_configuration = 11 [json_name = "request_configuration"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }

    message ProcessingConfiguration {
      bool enabled = 1;

      repeated Processors processors = 2;

      message Processors {
        string type = 1;

        repeated Parameters parameters = 2;

        message Parameters {
          string parameter_name = 1 [json_name = "parameter_name"];

          string parameter_value = 2 [json_name = "parameter_value"];
        }
      }
    }

    message RequestConfiguration {
      string content_encoding = 1 [json_name = "content_encoding"];

      repeated CommonAttributes common_attributes = 2 [json_name = "common_attributes"];

      message CommonAttributes {
        string name = 1;

        string value = 2;
      }
    }
  }

  message KinesisSourceConfiguration {
    string kinesis_stream_arn = 1 [json_name = "kinesis_stream_arn"];

    string role_arn = 2 [json_name = "role_arn"];
  }

  message RedshiftConfiguration {
    string cluster_jdbcurl = 1 [json_name = "cluster_jdbcurl"];

    string copy_options = 2 [json_name = "copy_options"];

    string data_table_columns = 3 [json_name = "data_table_columns"];

    string data_table_name = 4 [json_name = "data_table_name"];

    string password = 5;

    int64 retry_duration = 6 [json_name = "retry_duration"];

    string role_arn = 7 [json_name = "role_arn"];

    string s3_backup_mode = 8 [json_name = "s3_backup_mode"];

    string username = 9;

    CloudwatchLoggingOptions cloudwatch_logging_options = 10 [json_name = "cloudwatch_logging_options"];

    ProcessingConfiguration processing_configuration = 11 [json_name = "processing_configuration"];

    S3BackupConfiguration s3_backup_configuration = 12 [json_name = "s3_backup_configuration"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }

    message ProcessingConfiguration {
      bool enabled = 1;

      repeated Processors processors = 2;

      message Processors {
        string type = 1;

        repeated Parameters parameters = 2;

        message Parameters {
          string parameter_name = 1 [json_name = "parameter_name"];

          string parameter_value = 2 [json_name = "parameter_value"];
        }
      }
    }

    message S3BackupConfiguration {
      string bucket_arn = 1 [json_name = "bucket_arn"];

      int64 buffer_interval = 2 [json_name = "buffer_interval"];

      int64 buffer_size = 3 [json_name = "buffer_size"];

      string compression_format = 4 [json_name = "compression_format"];

      string kms_key_arn = 5 [json_name = "kms_key_arn"];

      string prefix = 6;

      string role_arn = 7 [json_name = "role_arn"];

      CloudwatchLoggingOptions cloudwatch_logging_options = 8 [json_name = "cloudwatch_logging_options"];

      message CloudwatchLoggingOptions {
        bool enabled = 1;

        string log_group_name = 2 [json_name = "log_group_name"];

        string log_stream_name = 3 [json_name = "log_stream_name"];
      }
    }
  }

  message S3Configuration {
    string bucket_arn = 1 [json_name = "bucket_arn"];

    int64 buffer_interval = 2 [json_name = "buffer_interval"];

    int64 buffer_size = 3 [json_name = "buffer_size"];

    string compression_format = 4 [json_name = "compression_format"];

    string kms_key_arn = 5 [json_name = "kms_key_arn"];

    string prefix = 6;

    string role_arn = 7 [json_name = "role_arn"];

    CloudwatchLoggingOptions cloudwatch_logging_options = 8 [json_name = "cloudwatch_logging_options"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }
  }

  message ServerSideEncryption {
    bool enabled = 1;

    string key_arn = 2 [json_name = "key_arn"];

    string key_type = 3 [json_name = "key_type"];
  }

  message SplunkConfiguration {
    int64 hec_acknowledgment_timeout = 1 [json_name = "hec_acknowledgment_timeout"];

    string hec_endpoint = 2 [json_name = "hec_endpoint"];

    string hec_endpoint_type = 3 [json_name = "hec_endpoint_type"];

    string hec_token = 4 [json_name = "hec_token"];

    int64 retry_duration = 5 [json_name = "retry_duration"];

    string s3_backup_mode = 6 [json_name = "s3_backup_mode"];

    CloudwatchLoggingOptions cloudwatch_logging_options = 7 [json_name = "cloudwatch_logging_options"];

    ProcessingConfiguration processing_configuration = 8 [json_name = "processing_configuration"];

    message CloudwatchLoggingOptions {
      bool enabled = 1;

      string log_group_name = 2 [json_name = "log_group_name"];

      string log_stream_name = 3 [json_name = "log_stream_name"];
    }

    message ProcessingConfiguration {
      bool enabled = 1;

      repeated Processors processors = 2;

      message Processors {
        string type = 1;

        repeated Parameters parameters = 2;

        message Parameters {
          string parameter_name = 1 [json_name = "parameter_name"];

          string parameter_value = 2 [json_name = "parameter_value"];
        }
      }
    }
  }
}

//AwsKinesisStream version is 1
message AwsKinesisStream {
  string arn = 1;

  string encryption_type = 2 [json_name = "encryption_type"];

  bool enforce_consumer_deletion = 3 [json_name = "enforce_consumer_deletion"];

  string id = 4;

  string kms_key_id = 5 [json_name = "kms_key_id"];

  string name = 6;

  int64 retention_period = 7 [json_name = "retention_period"];

  int64 shard_count = 8 [json_name = "shard_count"];

  repeated string shard_level_metrics = 9 [json_name = "shard_level_metrics"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  StreamModeDetails stream_mode_details = 12 [json_name = "stream_mode_details"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message StreamModeDetails {
    string stream_mode = 1 [json_name = "stream_mode"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsKinesisStreamConsumer version is 0
message AwsKinesisStreamConsumer {
  string arn = 1;

  string creation_timestamp = 2 [json_name = "creation_timestamp"];

  string id = 3;

  string name = 4;

  string stream_arn = 5 [json_name = "stream_arn"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsKinesisVideoStream version is 0
message AwsKinesisVideoStream {
  string arn = 1;

  string creation_time = 2 [json_name = "creation_time"];

  int64 data_retention_in_hours = 3 [json_name = "data_retention_in_hours"];

  string device_name = 4 [json_name = "device_name"];

  string id = 5;

  string kms_key_id = 6 [json_name = "kms_key_id"];

  string media_type = 7 [json_name = "media_type"];

  string name = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string version = 11;

  repeated Timeouts timeouts = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsKinesisanalyticsv2Application version is 0
message AwsKinesisanalyticsv2Application {
  string arn = 1;

  string create_timestamp = 2 [json_name = "create_timestamp"];

  string description = 3;

  bool force_stop = 4 [json_name = "force_stop"];

  string id = 5;

  string last_update_timestamp = 6 [json_name = "last_update_timestamp"];

  string name = 7;

  string runtime_environment = 8 [json_name = "runtime_environment"];

  string service_execution_role = 9 [json_name = "service_execution_role"];

  bool start_application = 10 [json_name = "start_application"];

  string status = 11;

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  int64 version_id = 14 [json_name = "version_id"];

  ApplicationConfiguration application_configuration = 15 [json_name = "application_configuration"];

  CloudwatchLoggingOptions cloudwatch_logging_options = 16 [json_name = "cloudwatch_logging_options"];

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message ApplicationConfiguration {
    ApplicationCodeConfiguration application_code_configuration = 1 [json_name = "application_code_configuration"];

    ApplicationSnapshotConfiguration application_snapshot_configuration = 2 [json_name = "application_snapshot_configuration"];

    EnvironmentProperties environment_properties = 3 [json_name = "environment_properties"];

    FlinkApplicationConfiguration flink_application_configuration = 4 [json_name = "flink_application_configuration"];

    RunConfiguration run_configuration = 5 [json_name = "run_configuration"];

    SqlApplicationConfiguration sql_application_configuration = 6 [json_name = "sql_application_configuration"];

    VpcConfiguration vpc_configuration = 7 [json_name = "vpc_configuration"];

    message ApplicationCodeConfiguration {
      string code_content_type = 1 [json_name = "code_content_type"];

      CodeContent code_content = 2 [json_name = "code_content"];

      message CodeContent {
        string text_content = 1 [json_name = "text_content"];

        S3ContentLocation s3_content_location = 2 [json_name = "s3_content_location"];

        message S3ContentLocation {
          string bucket_arn = 1 [json_name = "bucket_arn"];

          string file_key = 2 [json_name = "file_key"];

          string object_version = 3 [json_name = "object_version"];
        }
      }
    }

    message ApplicationSnapshotConfiguration {
      bool snapshots_enabled = 1 [json_name = "snapshots_enabled"];
    }

    message EnvironmentProperties {
      repeated PropertyGroup property_group = 1 [json_name = "property_group"];

      message PropertyGroup {
        string property_group_id = 1 [json_name = "property_group_id"];

        map<string, string> property_map = 2 [json_name = "property_map"];
      }
    }

    message FlinkApplicationConfiguration {
      CheckpointConfiguration checkpoint_configuration = 1 [json_name = "checkpoint_configuration"];

      MonitoringConfiguration monitoring_configuration = 2 [json_name = "monitoring_configuration"];

      ParallelismConfiguration parallelism_configuration = 3 [json_name = "parallelism_configuration"];

      message CheckpointConfiguration {
        int64 checkpoint_interval = 1 [json_name = "checkpoint_interval"];

        bool checkpointing_enabled = 2 [json_name = "checkpointing_enabled"];

        string configuration_type = 3 [json_name = "configuration_type"];

        int64 min_pause_between_checkpoints = 4 [json_name = "min_pause_between_checkpoints"];
      }

      message MonitoringConfiguration {
        string configuration_type = 1 [json_name = "configuration_type"];

        string log_level = 2 [json_name = "log_level"];

        string metrics_level = 3 [json_name = "metrics_level"];
      }

      message ParallelismConfiguration {
        bool auto_scaling_enabled = 1 [json_name = "auto_scaling_enabled"];

        string configuration_type = 2 [json_name = "configuration_type"];

        int64 parallelism = 3;

        int64 parallelism_per_kpu = 4 [json_name = "parallelism_per_kpu"];
      }
    }

    message RunConfiguration {
      ApplicationRestoreConfiguration application_restore_configuration = 1 [json_name = "application_restore_configuration"];

      FlinkRunConfiguration flink_run_configuration = 2 [json_name = "flink_run_configuration"];

      message ApplicationRestoreConfiguration {
        string application_restore_type = 1 [json_name = "application_restore_type"];

        string snapshot_name = 2 [json_name = "snapshot_name"];
      }

      message FlinkRunConfiguration {
        bool allow_non_restored_state = 1 [json_name = "allow_non_restored_state"];
      }
    }

    message SqlApplicationConfiguration {
      Input input = 1;

      repeated Output output = 2;

      ReferenceDataSource reference_data_source = 3 [json_name = "reference_data_source"];

      message Input {
        repeated string in_app_stream_names = 1 [json_name = "in_app_stream_names"];

        string input_id = 2 [json_name = "input_id"];

        string name_prefix = 3 [json_name = "name_prefix"];

        InputParallelism input_parallelism = 4 [json_name = "input_parallelism"];

        InputProcessingConfiguration input_processing_configuration = 5 [json_name = "input_processing_configuration"];

        InputSchema input_schema = 6 [json_name = "input_schema"];

        repeated InputStartingPositionConfiguration input_starting_position_configuration = 7 [json_name = "input_starting_position_configuration"];

        KinesisFirehoseInput kinesis_firehose_input = 8 [json_name = "kinesis_firehose_input"];

        KinesisStreamsInput kinesis_streams_input = 9 [json_name = "kinesis_streams_input"];

        message InputParallelism {
          int64 count = 1;
        }

        message InputProcessingConfiguration {
          InputLambdaProcessor input_lambda_processor = 1 [json_name = "input_lambda_processor"];

          message InputLambdaProcessor {
            string resource_arn = 1 [json_name = "resource_arn"];
          }
        }

        message InputSchema {
          string record_encoding = 1 [json_name = "record_encoding"];

          repeated RecordColumn record_column = 2 [json_name = "record_column"];

          RecordFormat record_format = 3 [json_name = "record_format"];

          message RecordColumn {
            string mapping = 1;

            string name = 2;

            string sql_type = 3 [json_name = "sql_type"];
          }

          message RecordFormat {
            string record_format_type = 1 [json_name = "record_format_type"];

            MappingParameters mapping_parameters = 2 [json_name = "mapping_parameters"];

            message MappingParameters {
              CsvMappingParameters csv_mapping_parameters = 1 [json_name = "csv_mapping_parameters"];

              JsonMappingParameters json_mapping_parameters = 2 [json_name = "json_mapping_parameters"];

              message CsvMappingParameters {
                string record_column_delimiter = 1 [json_name = "record_column_delimiter"];

                string record_row_delimiter = 2 [json_name = "record_row_delimiter"];
              }

              message JsonMappingParameters {
                string record_row_path = 1 [json_name = "record_row_path"];
              }
            }
          }
        }

        message InputStartingPositionConfiguration {
          string input_starting_position = 1 [json_name = "input_starting_position"];
        }

        message KinesisFirehoseInput {
          string resource_arn = 1 [json_name = "resource_arn"];
        }

        message KinesisStreamsInput {
          string resource_arn = 1 [json_name = "resource_arn"];
        }
      }

      message Output {
        string name = 1;

        string output_id = 2 [json_name = "output_id"];

        DestinationSchema destination_schema = 3 [json_name = "destination_schema"];

        KinesisFirehoseOutput kinesis_firehose_output = 4 [json_name = "kinesis_firehose_output"];

        KinesisStreamsOutput kinesis_streams_output = 5 [json_name = "kinesis_streams_output"];

        LambdaOutput lambda_output = 6 [json_name = "lambda_output"];

        message DestinationSchema {
          string record_format_type = 1 [json_name = "record_format_type"];
        }

        message KinesisFirehoseOutput {
          string resource_arn = 1 [json_name = "resource_arn"];
        }

        message KinesisStreamsOutput {
          string resource_arn = 1 [json_name = "resource_arn"];
        }

        message LambdaOutput {
          string resource_arn = 1 [json_name = "resource_arn"];
        }
      }

      message ReferenceDataSource {
        string reference_id = 1 [json_name = "reference_id"];

        string table_name = 2 [json_name = "table_name"];

        ReferenceSchema reference_schema = 3 [json_name = "reference_schema"];

        S3ReferenceDataSource s3_reference_data_source = 4 [json_name = "s3_reference_data_source"];

        message ReferenceSchema {
          string record_encoding = 1 [json_name = "record_encoding"];

          repeated RecordColumn record_column = 2 [json_name = "record_column"];

          RecordFormat record_format = 3 [json_name = "record_format"];

          message RecordColumn {
            string mapping = 1;

            string name = 2;

            string sql_type = 3 [json_name = "sql_type"];
          }

          message RecordFormat {
            string record_format_type = 1 [json_name = "record_format_type"];

            MappingParameters mapping_parameters = 2 [json_name = "mapping_parameters"];

            message MappingParameters {
              CsvMappingParameters csv_mapping_parameters = 1 [json_name = "csv_mapping_parameters"];

              JsonMappingParameters json_mapping_parameters = 2 [json_name = "json_mapping_parameters"];

              message CsvMappingParameters {
                string record_column_delimiter = 1 [json_name = "record_column_delimiter"];

                string record_row_delimiter = 2 [json_name = "record_row_delimiter"];
              }

              message JsonMappingParameters {
                string record_row_path = 1 [json_name = "record_row_path"];
              }
            }
          }
        }

        message S3ReferenceDataSource {
          string bucket_arn = 1 [json_name = "bucket_arn"];

          string file_key = 2 [json_name = "file_key"];
        }
      }
    }

    message VpcConfiguration {
      repeated string security_group_ids = 1 [json_name = "security_group_ids"];

      repeated string subnet_ids = 2 [json_name = "subnet_ids"];

      string vpc_configuration_id = 3 [json_name = "vpc_configuration_id"];

      string vpc_id = 4 [json_name = "vpc_id"];
    }
  }

  message CloudwatchLoggingOptions {
    string cloudwatch_logging_option_id = 1 [json_name = "cloudwatch_logging_option_id"];

    string log_stream_arn = 2 [json_name = "log_stream_arn"];
  }
}

//AwsKinesisanalyticsv2ApplicationSnapshot version is 0
message AwsKinesisanalyticsv2ApplicationSnapshot {
  string application_name = 1 [json_name = "application_name"];

  int64 application_version_id = 2 [json_name = "application_version_id"];

  string id = 3;

  string snapshot_creation_timestamp = 4 [json_name = "snapshot_creation_timestamp"];

  string snapshot_name = 5 [json_name = "snapshot_name"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsKmsAlias version is 0
message AwsKmsAlias {
  string arn = 1;

  string id = 2;

  string name = 3;

  string name_prefix = 4 [json_name = "name_prefix"];

  string target_key_arn = 5 [json_name = "target_key_arn"];

  string target_key_id = 6 [json_name = "target_key_id"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsKmsCiphertext version is 0
message AwsKmsCiphertext {
  string ciphertext_blob = 1 [json_name = "ciphertext_blob"];

  map<string, string> context = 2;

  string id = 3;

  string key_id = 4 [json_name = "key_id"];

  string plaintext = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsKmsExternalKey version is 0
message AwsKmsExternalKey {
  string arn = 1;

  bool bypass_policy_lockout_safety_check = 2 [json_name = "bypass_policy_lockout_safety_check"];

  int64 deletion_window_in_days = 3 [json_name = "deletion_window_in_days"];

  string description = 4;

  bool enabled = 5;

  string expiration_model = 6 [json_name = "expiration_model"];

  string id = 7;

  string key_material_base64 = 8 [json_name = "key_material_base64"];

  string key_state = 9 [json_name = "key_state"];

  string key_usage = 10 [json_name = "key_usage"];

  bool multi_region = 11 [json_name = "multi_region"];

  string policy = 12;

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  string valid_to = 15 [json_name = "valid_to"];

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;
}

//AwsKmsGrant version is 0
message AwsKmsGrant {
  repeated string grant_creation_tokens = 1 [json_name = "grant_creation_tokens"];

  string grant_id = 2 [json_name = "grant_id"];

  string grant_token = 3 [json_name = "grant_token"];

  string grantee_principal = 4 [json_name = "grantee_principal"];

  string id = 5;

  string key_id = 6 [json_name = "key_id"];

  string name = 7;

  repeated string operations = 8;

  bool retire_on_delete = 9 [json_name = "retire_on_delete"];

  string retiring_principal = 10 [json_name = "retiring_principal"];

  repeated Constraints constraints = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Constraints {
    map<string, string> encryption_context_equals = 1 [json_name = "encryption_context_equals"];

    map<string, string> encryption_context_subset = 2 [json_name = "encryption_context_subset"];
  }
}

//AwsKmsKey version is 0
message AwsKmsKey {
  string arn = 1;

  bool bypass_policy_lockout_safety_check = 2 [json_name = "bypass_policy_lockout_safety_check"];

  string customer_master_key_spec = 3 [json_name = "customer_master_key_spec"];

  int64 deletion_window_in_days = 4 [json_name = "deletion_window_in_days"];

  string description = 5;

  bool enable_key_rotation = 6 [json_name = "enable_key_rotation"];

  string id = 7;

  bool is_enabled = 8 [json_name = "is_enabled"];

  string key_id = 9 [json_name = "key_id"];

  string key_usage = 10 [json_name = "key_usage"];

  bool multi_region = 11 [json_name = "multi_region"];

  string policy = 12;

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;
}

//AwsKmsReplicaExternalKey version is 0
message AwsKmsReplicaExternalKey {
  string arn = 1;

  bool bypass_policy_lockout_safety_check = 2 [json_name = "bypass_policy_lockout_safety_check"];

  int64 deletion_window_in_days = 3 [json_name = "deletion_window_in_days"];

  string description = 4;

  bool enabled = 5;

  string expiration_model = 6 [json_name = "expiration_model"];

  string id = 7;

  string key_id = 8 [json_name = "key_id"];

  string key_material_base64 = 9 [json_name = "key_material_base64"];

  string key_state = 10 [json_name = "key_state"];

  string key_usage = 11 [json_name = "key_usage"];

  string policy = 12;

  string primary_key_arn = 13 [json_name = "primary_key_arn"];

  map<string, string> tags = 14;

  map<string, string> tags_all = 15 [json_name = "tags_all"];

  string valid_to = 16 [json_name = "valid_to"];

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;
}

//AwsKmsReplicaKey version is 0
message AwsKmsReplicaKey {
  string arn = 1;

  bool bypass_policy_lockout_safety_check = 2 [json_name = "bypass_policy_lockout_safety_check"];

  int64 deletion_window_in_days = 3 [json_name = "deletion_window_in_days"];

  string description = 4;

  bool enabled = 5;

  string id = 6;

  string key_id = 7 [json_name = "key_id"];

  bool key_rotation_enabled = 8 [json_name = "key_rotation_enabled"];

  string key_spec = 9 [json_name = "key_spec"];

  string key_usage = 10 [json_name = "key_usage"];

  string policy = 11;

  string primary_key_arn = 12 [json_name = "primary_key_arn"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;
}

//AwsLakeformationDataLakeSettings version is 0
message AwsLakeformationDataLakeSettings {
  repeated string admins = 1;

  string catalog_id = 2 [json_name = "catalog_id"];

  string id = 3;

  repeated string trusted_resource_owners = 4 [json_name = "trusted_resource_owners"];

  repeated CreateDatabaseDefaultPermissions create_database_default_permissions = 5 [json_name = "create_database_default_permissions"];

  repeated CreateTableDefaultPermissions create_table_default_permissions = 6 [json_name = "create_table_default_permissions"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message CreateDatabaseDefaultPermissions {
    repeated string permissions = 1;

    string principal = 2;
  }

  message CreateTableDefaultPermissions {
    repeated string permissions = 1;

    string principal = 2;
  }
}

//AwsLakeformationPermissions version is 0
message AwsLakeformationPermissions {
  string catalog_id = 1 [json_name = "catalog_id"];

  bool catalog_resource = 2 [json_name = "catalog_resource"];

  string id = 3;

  repeated string permissions = 4;

  repeated string permissions_with_grant_option = 5 [json_name = "permissions_with_grant_option"];

  string principal = 6;

  DataLocation data_location = 7 [json_name = "data_location"];

  Database database = 8;

  Table table = 9;

  TableWithColumns table_with_columns = 10 [json_name = "table_with_columns"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message DataLocation {
    string arn = 1;

    string catalog_id = 2 [json_name = "catalog_id"];
  }

  message Database {
    string catalog_id = 1 [json_name = "catalog_id"];

    string name = 2;
  }

  message Table {
    string catalog_id = 1 [json_name = "catalog_id"];

    string database_name = 2 [json_name = "database_name"];

    string name = 3;

    bool wildcard = 4;
  }

  message TableWithColumns {
    string catalog_id = 1 [json_name = "catalog_id"];

    repeated string column_names = 2 [json_name = "column_names"];

    string database_name = 3 [json_name = "database_name"];

    repeated string excluded_column_names = 4 [json_name = "excluded_column_names"];

    string name = 5;

    bool wildcard = 6;
  }
}

//AwsLakeformationResource version is 0
message AwsLakeformationResource {
  string arn = 1;

  string id = 2;

  string last_modified = 3 [json_name = "last_modified"];

  string role_arn = 4 [json_name = "role_arn"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsLambdaAlias version is 0
message AwsLambdaAlias {
  string arn = 1;

  string description = 2;

  string function_name = 3 [json_name = "function_name"];

  string function_version = 4 [json_name = "function_version"];

  string id = 5;

  string invoke_arn = 6 [json_name = "invoke_arn"];

  string name = 7;

  RoutingConfig routing_config = 8 [json_name = "routing_config"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message RoutingConfig {
    map<string, string> additional_version_weights = 1 [json_name = "additional_version_weights"];
  }
}

//AwsLambdaCodeSigningConfig version is 0
message AwsLambdaCodeSigningConfig {
  string arn = 1;

  string config_id = 2 [json_name = "config_id"];

  string description = 3;

  string id = 4;

  string last_modified = 5 [json_name = "last_modified"];

  AllowedPublishers allowed_publishers = 6 [json_name = "allowed_publishers"];

  Policies policies = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message AllowedPublishers {
    repeated string signing_profile_version_arns = 1 [json_name = "signing_profile_version_arns"];
  }

  message Policies {
    string untrusted_artifact_on_deployment = 1 [json_name = "untrusted_artifact_on_deployment"];
  }
}

//AwsLambdaEventSourceMapping version is 0
message AwsLambdaEventSourceMapping {
  int64 batch_size = 1 [json_name = "batch_size"];

  bool bisect_batch_on_function_error = 2 [json_name = "bisect_batch_on_function_error"];

  bool enabled = 3;

  string event_source_arn = 4 [json_name = "event_source_arn"];

  string function_arn = 5 [json_name = "function_arn"];

  string function_name = 6 [json_name = "function_name"];

  repeated string function_response_types = 7 [json_name = "function_response_types"];

  string id = 8;

  string last_modified = 9 [json_name = "last_modified"];

  string last_processing_result = 10 [json_name = "last_processing_result"];

  int64 maximum_batching_window_in_seconds = 11 [json_name = "maximum_batching_window_in_seconds"];

  int64 maximum_record_age_in_seconds = 12 [json_name = "maximum_record_age_in_seconds"];

  int64 maximum_retry_attempts = 13 [json_name = "maximum_retry_attempts"];

  int64 parallelization_factor = 14 [json_name = "parallelization_factor"];

  repeated string queues = 15;

  string starting_position = 16 [json_name = "starting_position"];

  string starting_position_timestamp = 17 [json_name = "starting_position_timestamp"];

  string state = 18;

  string state_transition_reason = 19 [json_name = "state_transition_reason"];

  repeated string topics = 20;

  int64 tumbling_window_in_seconds = 21 [json_name = "tumbling_window_in_seconds"];

  string uuid = 22;

  DestinationConfig destination_config = 23 [json_name = "destination_config"];

  FilterCriteria filter_criteria = 24 [json_name = "filter_criteria"];

  SelfManagedEventSource self_managed_event_source = 25 [json_name = "self_managed_event_source"];

  repeated SourceAccessConfiguration source_access_configuration = 26 [json_name = "source_access_configuration"];

  repeated string depends_on = 27;

  int32 count = 28;

  map<string, string> for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message DestinationConfig {
    OnFailure on_failure = 1 [json_name = "on_failure"];

    message OnFailure {
      string destination_arn = 1 [json_name = "destination_arn"];
    }
  }

  message FilterCriteria {
    repeated Filter filter = 1;

    message Filter {
      string pattern = 1;
    }
  }

  message SelfManagedEventSource {
    map<string, string> endpoints = 1;
  }

  message SourceAccessConfiguration {
    string type = 1;

    string uri = 2;
  }
}

//AwsLambdaFunction version is 0
message AwsLambdaFunction {
  repeated string architectures = 1;

  string arn = 2;

  string code_signing_config_arn = 3 [json_name = "code_signing_config_arn"];

  string description = 4;

  string filename = 5;

  string function_name = 6 [json_name = "function_name"];

  string handler = 7;

  string id = 8;

  string image_uri = 9 [json_name = "image_uri"];

  string invoke_arn = 10 [json_name = "invoke_arn"];

  string kms_key_arn = 11 [json_name = "kms_key_arn"];

  string last_modified = 12 [json_name = "last_modified"];

  repeated string layers = 13;

  int64 memory_size = 14 [json_name = "memory_size"];

  string package_type = 15 [json_name = "package_type"];

  bool publish = 16;

  string qualified_arn = 17 [json_name = "qualified_arn"];

  int64 reserved_concurrent_executions = 18 [json_name = "reserved_concurrent_executions"];

  string role = 19;

  string runtime = 20;

  string s3_bucket = 21 [json_name = "s3_bucket"];

  string s3_key = 22 [json_name = "s3_key"];

  string s3_object_version = 23 [json_name = "s3_object_version"];

  string signing_job_arn = 24 [json_name = "signing_job_arn"];

  string signing_profile_version_arn = 25 [json_name = "signing_profile_version_arn"];

  string source_code_hash = 26 [json_name = "source_code_hash"];

  int64 source_code_size = 27 [json_name = "source_code_size"];

  map<string, string> tags = 28;

  map<string, string> tags_all = 29 [json_name = "tags_all"];

  int64 timeout = 30;

  string version = 31;

  DeadLetterConfig dead_letter_config = 32 [json_name = "dead_letter_config"];

  Environment environment = 33;

  FileSystemConfig file_system_config = 34 [json_name = "file_system_config"];

  ImageConfig image_config = 35 [json_name = "image_config"];

  repeated Timeouts timeouts = 36;

  TracingConfig tracing_config = 37 [json_name = "tracing_config"];

  VpcConfig vpc_config = 38 [json_name = "vpc_config"];

  repeated string depends_on = 39;

  int32 count = 40;

  map<string, string> for_each = 41;

  string provider = 42;

  terraform.meta.Lifecycle lifecycle = 43;

  message DeadLetterConfig {
    string target_arn = 1 [json_name = "target_arn"];
  }

  message Environment {
    map<string, string> variables = 1;
  }

  message FileSystemConfig {
    string arn = 1;

    string local_mount_path = 2 [json_name = "local_mount_path"];
  }

  message ImageConfig {
    repeated string command = 1;

    repeated string entry_point = 2 [json_name = "entry_point"];

    string working_directory = 3 [json_name = "working_directory"];
  }

  message Timeouts {
    string create = 1;
  }

  message TracingConfig {
    string mode = 1;
  }

  message VpcConfig {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnet_ids = 2 [json_name = "subnet_ids"];

    string vpc_id = 3 [json_name = "vpc_id"];
  }
}

//AwsLambdaFunctionEventInvokeConfig version is 0
message AwsLambdaFunctionEventInvokeConfig {
  string function_name = 1 [json_name = "function_name"];

  string id = 2;

  int64 maximum_event_age_in_seconds = 3 [json_name = "maximum_event_age_in_seconds"];

  int64 maximum_retry_attempts = 4 [json_name = "maximum_retry_attempts"];

  string qualifier = 5;

  DestinationConfig destination_config = 6 [json_name = "destination_config"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message DestinationConfig {
    OnFailure on_failure = 1 [json_name = "on_failure"];

    OnSuccess on_success = 2 [json_name = "on_success"];

    message OnFailure {
      string destination = 1;
    }

    message OnSuccess {
      string destination = 1;
    }
  }
}

//AwsLambdaLayerVersion version is 0
message AwsLambdaLayerVersion {
  string arn = 1;

  repeated string compatible_architectures = 2 [json_name = "compatible_architectures"];

  repeated string compatible_runtimes = 3 [json_name = "compatible_runtimes"];

  string created_date = 4 [json_name = "created_date"];

  string description = 5;

  string filename = 6;

  string id = 7;

  string layer_arn = 8 [json_name = "layer_arn"];

  string layer_name = 9 [json_name = "layer_name"];

  string license_info = 10 [json_name = "license_info"];

  string s3_bucket = 11 [json_name = "s3_bucket"];

  string s3_key = 12 [json_name = "s3_key"];

  string s3_object_version = 13 [json_name = "s3_object_version"];

  string signing_job_arn = 14 [json_name = "signing_job_arn"];

  string signing_profile_version_arn = 15 [json_name = "signing_profile_version_arn"];

  bool skip_destroy = 16 [json_name = "skip_destroy"];

  string source_code_hash = 17 [json_name = "source_code_hash"];

  int64 source_code_size = 18 [json_name = "source_code_size"];

  string version = 19;

  repeated string depends_on = 20;

  int32 count = 21;

  map<string, string> for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;
}

//AwsLambdaLayerVersionPermission version is 0
message AwsLambdaLayerVersionPermission {
  string action = 1;

  string id = 2;

  string layer_name = 3 [json_name = "layer_name"];

  string organization_id = 4 [json_name = "organization_id"];

  string policy = 5;

  string principal = 6;

  string revision_id = 7 [json_name = "revision_id"];

  string statement_id = 8 [json_name = "statement_id"];

  int64 version_number = 9 [json_name = "version_number"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsLambdaPermission version is 0
message AwsLambdaPermission {
  string action = 1;

  string event_source_token = 2 [json_name = "event_source_token"];

  string function_name = 3 [json_name = "function_name"];

  string id = 4;

  string principal = 5;

  string qualifier = 6;

  string source_account = 7 [json_name = "source_account"];

  string source_arn = 8 [json_name = "source_arn"];

  string statement_id = 9 [json_name = "statement_id"];

  string statement_id_prefix = 10 [json_name = "statement_id_prefix"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsLambdaProvisionedConcurrencyConfig version is 0
message AwsLambdaProvisionedConcurrencyConfig {
  string function_name = 1 [json_name = "function_name"];

  string id = 2;

  int64 provisioned_concurrent_executions = 3 [json_name = "provisioned_concurrent_executions"];

  string qualifier = 4;

  repeated Timeouts timeouts = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsLaunchConfiguration version is 0
message AwsLaunchConfiguration {
  string arn = 1;

  bool associate_public_ip_address = 2 [json_name = "associate_public_ip_address"];

  bool ebs_optimized = 3 [json_name = "ebs_optimized"];

  bool enable_monitoring = 4 [json_name = "enable_monitoring"];

  string iam_instance_profile = 5 [json_name = "iam_instance_profile"];

  string id = 6;

  string image_id = 7 [json_name = "image_id"];

  string instance_type = 8 [json_name = "instance_type"];

  string key_name = 9 [json_name = "key_name"];

  string name = 10;

  string name_prefix = 11 [json_name = "name_prefix"];

  string placement_tenancy = 12 [json_name = "placement_tenancy"];

  repeated string security_groups = 13 [json_name = "security_groups"];

  string spot_price = 14 [json_name = "spot_price"];

  string user_data = 15 [json_name = "user_data"];

  string user_data_base64 = 16 [json_name = "user_data_base64"];

  string vpc_classic_link_id = 17 [json_name = "vpc_classic_link_id"];

  repeated string vpc_classic_link_security_groups = 18 [json_name = "vpc_classic_link_security_groups"];

  repeated EbsBlockDevice ebs_block_device = 19 [json_name = "ebs_block_device"];

  repeated EphemeralBlockDevice ephemeral_block_device = 20 [json_name = "ephemeral_block_device"];

  MetadataOptions metadata_options = 21 [json_name = "metadata_options"];

  RootBlockDevice root_block_device = 22 [json_name = "root_block_device"];

  repeated string depends_on = 23;

  int32 count = 24;

  map<string, string> for_each = 25;

  string provider = 26;

  terraform.meta.Lifecycle lifecycle = 27;

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    bool no_device = 5 [json_name = "no_device"];

    string snapshot_id = 6 [json_name = "snapshot_id"];

    int64 throughput = 7;

    int64 volume_size = 8 [json_name = "volume_size"];

    string volume_type = 9 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    string virtual_name = 2 [json_name = "virtual_name"];
  }

  message MetadataOptions {
    string http_endpoint = 1 [json_name = "http_endpoint"];

    int64 http_put_response_hop_limit = 2 [json_name = "http_put_response_hop_limit"];

    string http_tokens = 3 [json_name = "http_tokens"];
  }

  message RootBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    bool encrypted = 2;

    int64 iops = 3;

    int64 throughput = 4;

    int64 volume_size = 5 [json_name = "volume_size"];

    string volume_type = 6 [json_name = "volume_type"];
  }
}

//AwsLaunchTemplate version is 0
message AwsLaunchTemplate {
  string arn = 1;

  int64 default_version = 2 [json_name = "default_version"];

  string description = 3;

  bool disable_api_termination = 4 [json_name = "disable_api_termination"];

  string ebs_optimized = 5 [json_name = "ebs_optimized"];

  string id = 6;

  string image_id = 7 [json_name = "image_id"];

  string instance_initiated_shutdown_behavior = 8 [json_name = "instance_initiated_shutdown_behavior"];

  string instance_type = 9 [json_name = "instance_type"];

  string kernel_id = 10 [json_name = "kernel_id"];

  string key_name = 11 [json_name = "key_name"];

  int64 latest_version = 12 [json_name = "latest_version"];

  string name = 13;

  string name_prefix = 14 [json_name = "name_prefix"];

  string ram_disk_id = 15 [json_name = "ram_disk_id"];

  repeated string security_group_names = 16 [json_name = "security_group_names"];

  map<string, string> tags = 17;

  map<string, string> tags_all = 18 [json_name = "tags_all"];

  bool update_default_version = 19 [json_name = "update_default_version"];

  string user_data = 20 [json_name = "user_data"];

  repeated string vpc_security_group_ids = 21 [json_name = "vpc_security_group_ids"];

  repeated BlockDeviceMappings block_device_mappings = 22 [json_name = "block_device_mappings"];

  CapacityReservationSpecification capacity_reservation_specification = 23 [json_name = "capacity_reservation_specification"];

  CpuOptions cpu_options = 24 [json_name = "cpu_options"];

  CreditSpecification credit_specification = 25 [json_name = "credit_specification"];

  repeated ElasticGpuSpecifications elastic_gpu_specifications = 26 [json_name = "elastic_gpu_specifications"];

  ElasticInferenceAccelerator elastic_inference_accelerator = 27 [json_name = "elastic_inference_accelerator"];

  EnclaveOptions enclave_options = 28 [json_name = "enclave_options"];

  HibernationOptions hibernation_options = 29 [json_name = "hibernation_options"];

  IamInstanceProfile iam_instance_profile = 30 [json_name = "iam_instance_profile"];

  InstanceMarketOptions instance_market_options = 31 [json_name = "instance_market_options"];

  repeated LicenseSpecification license_specification = 32 [json_name = "license_specification"];

  MetadataOptions metadata_options = 33 [json_name = "metadata_options"];

  Monitoring monitoring = 34;

  repeated NetworkInterfaces network_interfaces = 35 [json_name = "network_interfaces"];

  Placement placement = 36;

  repeated TagSpecifications tag_specifications = 37 [json_name = "tag_specifications"];

  repeated string depends_on = 38;

  int32 count = 39;

  map<string, string> for_each = 40;

  string provider = 41;

  terraform.meta.Lifecycle lifecycle = 42;

  message BlockDeviceMappings {
    string device_name = 1 [json_name = "device_name"];

    string no_device = 2 [json_name = "no_device"];

    string virtual_name = 3 [json_name = "virtual_name"];

    Ebs ebs = 4;

    message Ebs {
      string delete_on_termination = 1 [json_name = "delete_on_termination"];

      string encrypted = 2;

      int64 iops = 3;

      string kms_key_id = 4 [json_name = "kms_key_id"];

      string snapshot_id = 5 [json_name = "snapshot_id"];

      int64 throughput = 6;

      int64 volume_size = 7 [json_name = "volume_size"];

      string volume_type = 8 [json_name = "volume_type"];
    }
  }

  message CapacityReservationSpecification {
    string capacity_reservation_preference = 1 [json_name = "capacity_reservation_preference"];

    CapacityReservationTarget capacity_reservation_target = 2 [json_name = "capacity_reservation_target"];

    message CapacityReservationTarget {
      string capacity_reservation_id = 1 [json_name = "capacity_reservation_id"];
    }
  }

  message CpuOptions {
    int64 core_count = 1 [json_name = "core_count"];

    int64 threads_per_core = 2 [json_name = "threads_per_core"];
  }

  message CreditSpecification {
    string cpu_credits = 1 [json_name = "cpu_credits"];
  }

  message ElasticGpuSpecifications {
    string type = 1;
  }

  message ElasticInferenceAccelerator {
    string type = 1;
  }

  message EnclaveOptions {
    bool enabled = 1;
  }

  message HibernationOptions {
    bool configured = 1;
  }

  message IamInstanceProfile {
    string arn = 1;

    string name = 2;
  }

  message InstanceMarketOptions {
    string market_type = 1 [json_name = "market_type"];

    SpotOptions spot_options = 2 [json_name = "spot_options"];

    message SpotOptions {
      int64 block_duration_minutes = 1 [json_name = "block_duration_minutes"];

      string instance_interruption_behavior = 2 [json_name = "instance_interruption_behavior"];

      string max_price = 3 [json_name = "max_price"];

      string spot_instance_type = 4 [json_name = "spot_instance_type"];

      string valid_until = 5 [json_name = "valid_until"];
    }
  }

  message LicenseSpecification {
    string license_configuration_arn = 1 [json_name = "license_configuration_arn"];
  }

  message MetadataOptions {
    string http_endpoint = 1 [json_name = "http_endpoint"];

    string http_protocol_ipv6 = 2 [json_name = "http_protocol_ipv6"];

    int64 http_put_response_hop_limit = 3 [json_name = "http_put_response_hop_limit"];

    string http_tokens = 4 [json_name = "http_tokens"];
  }

  message Monitoring {
    bool enabled = 1;
  }

  message NetworkInterfaces {
    string associate_carrier_ip_address = 1 [json_name = "associate_carrier_ip_address"];

    string associate_public_ip_address = 2 [json_name = "associate_public_ip_address"];

    string delete_on_termination = 3 [json_name = "delete_on_termination"];

    string description = 4;

    int64 device_index = 5 [json_name = "device_index"];

    string interface_type = 6 [json_name = "interface_type"];

    int64 ipv4_address_count = 7 [json_name = "ipv4_address_count"];

    repeated string ipv4_addresses = 8 [json_name = "ipv4_addresses"];

    int64 ipv6_address_count = 9 [json_name = "ipv6_address_count"];

    repeated string ipv6_addresses = 10 [json_name = "ipv6_addresses"];

    int64 network_card_index = 11 [json_name = "network_card_index"];

    string network_interface_id = 12 [json_name = "network_interface_id"];

    string private_ip_address = 13 [json_name = "private_ip_address"];

    repeated string security_groups = 14 [json_name = "security_groups"];

    string subnet_id = 15 [json_name = "subnet_id"];
  }

  message Placement {
    string affinity = 1;

    string availability_zone = 2 [json_name = "availability_zone"];

    string group_name = 3 [json_name = "group_name"];

    string host_id = 4 [json_name = "host_id"];

    string host_resource_group_arn = 5 [json_name = "host_resource_group_arn"];

    int64 partition_number = 6 [json_name = "partition_number"];

    string spread_domain = 7 [json_name = "spread_domain"];

    string tenancy = 8;
  }

  message TagSpecifications {
    string resource_type = 1 [json_name = "resource_type"];

    map<string, string> tags = 2;
  }
}

//AwsLb version is 0
message AwsLb {
  string arn = 1;

  string arn_suffix = 2 [json_name = "arn_suffix"];

  string customer_owned_ipv4_pool = 3 [json_name = "customer_owned_ipv4_pool"];

  string desync_mitigation_mode = 4 [json_name = "desync_mitigation_mode"];

  string dns_name = 5 [json_name = "dns_name"];

  bool drop_invalid_header_fields = 6 [json_name = "drop_invalid_header_fields"];

  bool enable_cross_zone_load_balancing = 7 [json_name = "enable_cross_zone_load_balancing"];

  bool enable_deletion_protection = 8 [json_name = "enable_deletion_protection"];

  bool enable_http2 = 9 [json_name = "enable_http2"];

  bool enable_waf_fail_open = 10 [json_name = "enable_waf_fail_open"];

  string id = 11;

  int64 idle_timeout = 12 [json_name = "idle_timeout"];

  bool internal = 13;

  string ip_address_type = 14 [json_name = "ip_address_type"];

  string load_balancer_type = 15 [json_name = "load_balancer_type"];

  string name = 16;

  string name_prefix = 17 [json_name = "name_prefix"];

  repeated string security_groups = 18 [json_name = "security_groups"];

  repeated string subnets = 19;

  map<string, string> tags = 20;

  map<string, string> tags_all = 21 [json_name = "tags_all"];

  string vpc_id = 22 [json_name = "vpc_id"];

  string zone_id = 23 [json_name = "zone_id"];

  AccessLogs access_logs = 24 [json_name = "access_logs"];

  repeated SubnetMapping subnet_mapping = 25 [json_name = "subnet_mapping"];

  repeated Timeouts timeouts = 26;

  repeated string depends_on = 27;

  int32 count = 28;

  map<string, string> for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message AccessLogs {
    string bucket = 1;

    bool enabled = 2;

    string prefix = 3;
  }

  message SubnetMapping {
    string allocation_id = 1 [json_name = "allocation_id"];

    string ipv6_address = 2 [json_name = "ipv6_address"];

    string outpost_id = 3 [json_name = "outpost_id"];

    string private_ipv4_address = 4 [json_name = "private_ipv4_address"];

    string subnet_id = 5 [json_name = "subnet_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsLbCookieStickinessPolicy version is 0
message AwsLbCookieStickinessPolicy {
  int64 cookie_expiration_period = 1 [json_name = "cookie_expiration_period"];

  string id = 2;

  int64 lb_port = 3 [json_name = "lb_port"];

  string load_balancer = 4 [json_name = "load_balancer"];

  string name = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsLbListener version is 0
message AwsLbListener {
  string alpn_policy = 1 [json_name = "alpn_policy"];

  string arn = 2;

  string certificate_arn = 3 [json_name = "certificate_arn"];

  string id = 4;

  string load_balancer_arn = 5 [json_name = "load_balancer_arn"];

  int64 port = 6;

  string protocol = 7;

  string ssl_policy = 8 [json_name = "ssl_policy"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated DefaultAction default_action = 11 [json_name = "default_action"];

  repeated Timeouts timeouts = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message DefaultAction {
    int64 order = 1;

    string target_group_arn = 2 [json_name = "target_group_arn"];

    string type = 3;

    AuthenticateCognito authenticate_cognito = 4 [json_name = "authenticate_cognito"];

    AuthenticateOidc authenticate_oidc = 5 [json_name = "authenticate_oidc"];

    FixedResponse fixed_response = 6 [json_name = "fixed_response"];

    Forward forward = 7;

    Redirect redirect = 8;

    message AuthenticateCognito {
      map<string, string> authentication_request_extra_params = 1 [json_name = "authentication_request_extra_params"];

      string on_unauthenticated_request = 2 [json_name = "on_unauthenticated_request"];

      string scope = 3;

      string session_cookie_name = 4 [json_name = "session_cookie_name"];

      int64 session_timeout = 5 [json_name = "session_timeout"];

      string user_pool_arn = 6 [json_name = "user_pool_arn"];

      string user_pool_client_id = 7 [json_name = "user_pool_client_id"];

      string user_pool_domain = 8 [json_name = "user_pool_domain"];
    }

    message AuthenticateOidc {
      map<string, string> authentication_request_extra_params = 1 [json_name = "authentication_request_extra_params"];

      string authorization_endpoint = 2 [json_name = "authorization_endpoint"];

      string client_id = 3 [json_name = "client_id"];

      string client_secret = 4 [json_name = "client_secret"];

      string issuer = 5;

      string on_unauthenticated_request = 6 [json_name = "on_unauthenticated_request"];

      string scope = 7;

      string session_cookie_name = 8 [json_name = "session_cookie_name"];

      int64 session_timeout = 9 [json_name = "session_timeout"];

      string token_endpoint = 10 [json_name = "token_endpoint"];

      string user_info_endpoint = 11 [json_name = "user_info_endpoint"];
    }

    message FixedResponse {
      string content_type = 1 [json_name = "content_type"];

      string message_body = 2 [json_name = "message_body"];

      string status_code = 3 [json_name = "status_code"];
    }

    message Forward {
      Stickiness stickiness = 1;

      repeated TargetGroup target_group = 2 [json_name = "target_group"];

      message Stickiness {
        int64 duration = 1;

        bool enabled = 2;
      }

      message TargetGroup {
        string arn = 1;

        int64 weight = 2;
      }
    }

    message Redirect {
      string host = 1;

      string path = 2;

      string port = 3;

      string protocol = 4;

      string query = 5;

      string status_code = 6 [json_name = "status_code"];
    }
  }

  message Timeouts {
    string read = 1;
  }
}

//AwsLbListenerCertificate version is 0
message AwsLbListenerCertificate {
  string certificate_arn = 1 [json_name = "certificate_arn"];

  string id = 2;

  string listener_arn = 3 [json_name = "listener_arn"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsLbListenerRule version is 0
message AwsLbListenerRule {
  string arn = 1;

  string id = 2;

  string listener_arn = 3 [json_name = "listener_arn"];

  int64 priority = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated Action action = 7;

  repeated Condition condition = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Action {
    int64 order = 1;

    string target_group_arn = 2 [json_name = "target_group_arn"];

    string type = 3;

    AuthenticateCognito authenticate_cognito = 4 [json_name = "authenticate_cognito"];

    AuthenticateOidc authenticate_oidc = 5 [json_name = "authenticate_oidc"];

    FixedResponse fixed_response = 6 [json_name = "fixed_response"];

    Forward forward = 7;

    Redirect redirect = 8;

    message AuthenticateCognito {
      map<string, string> authentication_request_extra_params = 1 [json_name = "authentication_request_extra_params"];

      string on_unauthenticated_request = 2 [json_name = "on_unauthenticated_request"];

      string scope = 3;

      string session_cookie_name = 4 [json_name = "session_cookie_name"];

      int64 session_timeout = 5 [json_name = "session_timeout"];

      string user_pool_arn = 6 [json_name = "user_pool_arn"];

      string user_pool_client_id = 7 [json_name = "user_pool_client_id"];

      string user_pool_domain = 8 [json_name = "user_pool_domain"];
    }

    message AuthenticateOidc {
      map<string, string> authentication_request_extra_params = 1 [json_name = "authentication_request_extra_params"];

      string authorization_endpoint = 2 [json_name = "authorization_endpoint"];

      string client_id = 3 [json_name = "client_id"];

      string client_secret = 4 [json_name = "client_secret"];

      string issuer = 5;

      string on_unauthenticated_request = 6 [json_name = "on_unauthenticated_request"];

      string scope = 7;

      string session_cookie_name = 8 [json_name = "session_cookie_name"];

      int64 session_timeout = 9 [json_name = "session_timeout"];

      string token_endpoint = 10 [json_name = "token_endpoint"];

      string user_info_endpoint = 11 [json_name = "user_info_endpoint"];
    }

    message FixedResponse {
      string content_type = 1 [json_name = "content_type"];

      string message_body = 2 [json_name = "message_body"];

      string status_code = 3 [json_name = "status_code"];
    }

    message Forward {
      Stickiness stickiness = 1;

      repeated TargetGroup target_group = 2 [json_name = "target_group"];

      message Stickiness {
        int64 duration = 1;

        bool enabled = 2;
      }

      message TargetGroup {
        string arn = 1;

        int64 weight = 2;
      }
    }

    message Redirect {
      string host = 1;

      string path = 2;

      string port = 3;

      string protocol = 4;

      string query = 5;

      string status_code = 6 [json_name = "status_code"];
    }
  }

  message Condition {
    HostHeader host_header = 1 [json_name = "host_header"];

    HttpHeader http_header = 2 [json_name = "http_header"];

    HttpRequestMethod http_request_method = 3 [json_name = "http_request_method"];

    PathPattern path_pattern = 4 [json_name = "path_pattern"];

    repeated QueryString query_string = 5 [json_name = "query_string"];

    SourceIp source_ip = 6 [json_name = "source_ip"];

    message HostHeader {
      repeated string values = 1;
    }

    message HttpHeader {
      string http_header_name = 1 [json_name = "http_header_name"];

      repeated string values = 2;
    }

    message HttpRequestMethod {
      repeated string values = 1;
    }

    message PathPattern {
      repeated string values = 1;
    }

    message QueryString {
      string key = 1;

      string value = 2;
    }

    message SourceIp {
      repeated string values = 1;
    }
  }
}

//AwsLbSslNegotiationPolicy version is 0
message AwsLbSslNegotiationPolicy {
  string id = 1;

  int64 lb_port = 2 [json_name = "lb_port"];

  string load_balancer = 3 [json_name = "load_balancer"];

  string name = 4;

  repeated Attribute attribute = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Attribute {
    string name = 1;

    string value = 2;
  }
}

//AwsLbTargetGroup version is 0
message AwsLbTargetGroup {
  string arn = 1;

  string arn_suffix = 2 [json_name = "arn_suffix"];

  bool connection_termination = 3 [json_name = "connection_termination"];

  string deregistration_delay = 4 [json_name = "deregistration_delay"];

  string id = 5;

  bool lambda_multi_value_headers_enabled = 6 [json_name = "lambda_multi_value_headers_enabled"];

  string load_balancing_algorithm_type = 7 [json_name = "load_balancing_algorithm_type"];

  string name = 8;

  string name_prefix = 9 [json_name = "name_prefix"];

  int64 port = 10;

  string preserve_client_ip = 11 [json_name = "preserve_client_ip"];

  string protocol = 12;

  string protocol_version = 13 [json_name = "protocol_version"];

  bool proxy_protocol_v2 = 14 [json_name = "proxy_protocol_v2"];

  int64 slow_start = 15 [json_name = "slow_start"];

  map<string, string> tags = 16;

  map<string, string> tags_all = 17 [json_name = "tags_all"];

  string target_type = 18 [json_name = "target_type"];

  string vpc_id = 19 [json_name = "vpc_id"];

  HealthCheck health_check = 20 [json_name = "health_check"];

  Stickiness stickiness = 21;

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message HealthCheck {
    bool enabled = 1;

    int64 healthy_threshold = 2 [json_name = "healthy_threshold"];

    int64 interval = 3;

    string matcher = 4;

    string path = 5;

    string port = 6;

    string protocol = 7;

    int64 timeout = 8;

    int64 unhealthy_threshold = 9 [json_name = "unhealthy_threshold"];
  }

  message Stickiness {
    int64 cookie_duration = 1 [json_name = "cookie_duration"];

    string cookie_name = 2 [json_name = "cookie_name"];

    bool enabled = 3;

    string type = 4;
  }
}

//AwsLbTargetGroupAttachment version is 0
message AwsLbTargetGroupAttachment {
  string availability_zone = 1 [json_name = "availability_zone"];

  string id = 2;

  int64 port = 3;

  string target_group_arn = 4 [json_name = "target_group_arn"];

  string target_id = 5 [json_name = "target_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsLexBot version is 0
message AwsLexBot {
  string arn = 1;

  string checksum = 2;

  bool child_directed = 3 [json_name = "child_directed"];

  bool create_version = 4 [json_name = "create_version"];

  string created_date = 5 [json_name = "created_date"];

  string description = 6;

  bool detect_sentiment = 7 [json_name = "detect_sentiment"];

  bool enable_model_improvements = 8 [json_name = "enable_model_improvements"];

  string failure_reason = 9 [json_name = "failure_reason"];

  string id = 10;

  int64 idle_session_ttl_in_seconds = 11 [json_name = "idle_session_ttl_in_seconds"];

  string last_updated_date = 12 [json_name = "last_updated_date"];

  string locale = 13;

  string name = 14;

  int64 nlu_intent_confidence_threshold = 15 [json_name = "nlu_intent_confidence_threshold"];

  string process_behavior = 16 [json_name = "process_behavior"];

  string status = 17;

  string version = 18;

  string voice_id = 19 [json_name = "voice_id"];

  AbortStatement abort_statement = 20 [json_name = "abort_statement"];

  ClarificationPrompt clarification_prompt = 21 [json_name = "clarification_prompt"];

  repeated Intent intent = 22;

  repeated Timeouts timeouts = 23;

  repeated string depends_on = 24;

  int32 count = 25;

  map<string, string> for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;

  message AbortStatement {
    string response_card = 1 [json_name = "response_card"];

    repeated Message message = 2;

    message Message {
      string content = 1;

      string content_type = 2 [json_name = "content_type"];

      int64 group_number = 3 [json_name = "group_number"];
    }
  }

  message ClarificationPrompt {
    int64 max_attempts = 1 [json_name = "max_attempts"];

    string response_card = 2 [json_name = "response_card"];

    repeated Message message = 3;

    message Message {
      string content = 1;

      string content_type = 2 [json_name = "content_type"];

      int64 group_number = 3 [json_name = "group_number"];
    }
  }

  message Intent {
    string intent_name = 1 [json_name = "intent_name"];

    string intent_version = 2 [json_name = "intent_version"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsLexBotAlias version is 0
message AwsLexBotAlias {
  string arn = 1;

  string bot_name = 2 [json_name = "bot_name"];

  string bot_version = 3 [json_name = "bot_version"];

  string checksum = 4;

  string created_date = 5 [json_name = "created_date"];

  string description = 6;

  string id = 7;

  string last_updated_date = 8 [json_name = "last_updated_date"];

  string name = 9;

  ConversationLogs conversation_logs = 10 [json_name = "conversation_logs"];

  repeated Timeouts timeouts = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message ConversationLogs {
    string iam_role_arn = 1 [json_name = "iam_role_arn"];

    repeated LogSettings log_settings = 2 [json_name = "log_settings"];

    message LogSettings {
      string destination = 1;

      string kms_key_arn = 2 [json_name = "kms_key_arn"];

      string log_type = 3 [json_name = "log_type"];

      string resource_arn = 4 [json_name = "resource_arn"];

      string resource_prefix = 5 [json_name = "resource_prefix"];
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsLexIntent version is 0
message AwsLexIntent {
  string arn = 1;

  string checksum = 2;

  bool create_version = 3 [json_name = "create_version"];

  string created_date = 4 [json_name = "created_date"];

  string description = 5;

  string id = 6;

  string last_updated_date = 7 [json_name = "last_updated_date"];

  string name = 8;

  string parent_intent_signature = 9 [json_name = "parent_intent_signature"];

  repeated string sample_utterances = 10 [json_name = "sample_utterances"];

  string version = 11;

  ConclusionStatement conclusion_statement = 12 [json_name = "conclusion_statement"];

  ConfirmationPrompt confirmation_prompt = 13 [json_name = "confirmation_prompt"];

  DialogCodeHook dialog_code_hook = 14 [json_name = "dialog_code_hook"];

  FollowUpPrompt follow_up_prompt = 15 [json_name = "follow_up_prompt"];

  FulfillmentActivity fulfillment_activity = 16 [json_name = "fulfillment_activity"];

  RejectionStatement rejection_statement = 17 [json_name = "rejection_statement"];

  repeated Slot slot = 18;

  repeated Timeouts timeouts = 19;

  repeated string depends_on = 20;

  int32 count = 21;

  map<string, string> for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message ConclusionStatement {
    string response_card = 1 [json_name = "response_card"];

    repeated Message message = 2;

    message Message {
      string content = 1;

      string content_type = 2 [json_name = "content_type"];

      int64 group_number = 3 [json_name = "group_number"];
    }
  }

  message ConfirmationPrompt {
    int64 max_attempts = 1 [json_name = "max_attempts"];

    string response_card = 2 [json_name = "response_card"];

    repeated Message message = 3;

    message Message {
      string content = 1;

      string content_type = 2 [json_name = "content_type"];

      int64 group_number = 3 [json_name = "group_number"];
    }
  }

  message DialogCodeHook {
    string message_version = 1 [json_name = "message_version"];

    string uri = 2;
  }

  message FollowUpPrompt {
    Prompt prompt = 1;

    RejectionStatement rejection_statement = 2 [json_name = "rejection_statement"];

    message Prompt {
      int64 max_attempts = 1 [json_name = "max_attempts"];

      string response_card = 2 [json_name = "response_card"];

      repeated Message message = 3;

      message Message {
        string content = 1;

        string content_type = 2 [json_name = "content_type"];

        int64 group_number = 3 [json_name = "group_number"];
      }
    }

    message RejectionStatement {
      string response_card = 1 [json_name = "response_card"];

      repeated Message message = 2;

      message Message {
        string content = 1;

        string content_type = 2 [json_name = "content_type"];

        int64 group_number = 3 [json_name = "group_number"];
      }
    }
  }

  message FulfillmentActivity {
    string type = 1;

    CodeHook code_hook = 2 [json_name = "code_hook"];

    message CodeHook {
      string message_version = 1 [json_name = "message_version"];

      string uri = 2;
    }
  }

  message RejectionStatement {
    string response_card = 1 [json_name = "response_card"];

    repeated Message message = 2;

    message Message {
      string content = 1;

      string content_type = 2 [json_name = "content_type"];

      int64 group_number = 3 [json_name = "group_number"];
    }
  }

  message Slot {
    string description = 1;

    string name = 2;

    int64 priority = 3;

    string response_card = 4 [json_name = "response_card"];

    repeated string sample_utterances = 5 [json_name = "sample_utterances"];

    string slot_constraint = 6 [json_name = "slot_constraint"];

    string slot_type = 7 [json_name = "slot_type"];

    string slot_type_version = 8 [json_name = "slot_type_version"];

    ValueElicitationPrompt value_elicitation_prompt = 9 [json_name = "value_elicitation_prompt"];

    message ValueElicitationPrompt {
      int64 max_attempts = 1 [json_name = "max_attempts"];

      string response_card = 2 [json_name = "response_card"];

      repeated Message message = 3;

      message Message {
        string content = 1;

        string content_type = 2 [json_name = "content_type"];

        int64 group_number = 3 [json_name = "group_number"];
      }
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsLexSlotType version is 0
message AwsLexSlotType {
  string checksum = 1;

  bool create_version = 2 [json_name = "create_version"];

  string created_date = 3 [json_name = "created_date"];

  string description = 4;

  string id = 5;

  string last_updated_date = 6 [json_name = "last_updated_date"];

  string name = 7;

  string value_selection_strategy = 8 [json_name = "value_selection_strategy"];

  string version = 9;

  repeated EnumerationValue enumeration_value = 10 [json_name = "enumeration_value"];

  repeated Timeouts timeouts = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message EnumerationValue {
    repeated string synonyms = 1;

    string value = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsLicensemanagerAssociation version is 0
message AwsLicensemanagerAssociation {
  string id = 1;

  string license_configuration_arn = 2 [json_name = "license_configuration_arn"];

  string resource_arn = 3 [json_name = "resource_arn"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsLicensemanagerLicenseConfiguration version is 0
message AwsLicensemanagerLicenseConfiguration {
  string arn = 1;

  string description = 2;

  string id = 3;

  int64 license_count = 4 [json_name = "license_count"];

  bool license_count_hard_limit = 5 [json_name = "license_count_hard_limit"];

  string license_counting_type = 6 [json_name = "license_counting_type"];

  repeated string license_rules = 7 [json_name = "license_rules"];

  string name = 8;

  string owner_account_id = 9 [json_name = "owner_account_id"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsLightsailDomain version is 0
message AwsLightsailDomain {
  string arn = 1;

  string domain_name = 2 [json_name = "domain_name"];

  string id = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsLightsailInstance version is 0
message AwsLightsailInstance {
  string arn = 1;

  string availability_zone = 2 [json_name = "availability_zone"];

  string blueprint_id = 3 [json_name = "blueprint_id"];

  string bundle_id = 4 [json_name = "bundle_id"];

  int64 cpu_count = 5 [json_name = "cpu_count"];

  string created_at = 6 [json_name = "created_at"];

  string id = 7;

  string ipv6_address = 8 [json_name = "ipv6_address"];

  repeated string ipv6_addresses = 9 [json_name = "ipv6_addresses"];

  bool is_static_ip = 10 [json_name = "is_static_ip"];

  string key_pair_name = 11 [json_name = "key_pair_name"];

  string name = 12;

  string private_ip_address = 13 [json_name = "private_ip_address"];

  string public_ip_address = 14 [json_name = "public_ip_address"];

  int64 ram_size = 15 [json_name = "ram_size"];

  map<string, string> tags = 16;

  map<string, string> tags_all = 17 [json_name = "tags_all"];

  string user_data = 18 [json_name = "user_data"];

  string username = 19;

  repeated string depends_on = 20;

  int32 count = 21;

  map<string, string> for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;
}

//AwsLightsailInstancePublicPorts version is 0
message AwsLightsailInstancePublicPorts {
  string id = 1;

  string instance_name = 2 [json_name = "instance_name"];

  repeated PortInfo port_info = 3 [json_name = "port_info"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message PortInfo {
    repeated string cidrs = 1;

    int64 from_port = 2 [json_name = "from_port"];

    string protocol = 3;

    int64 to_port = 4 [json_name = "to_port"];
  }
}

//AwsLightsailKeyPair version is 0
message AwsLightsailKeyPair {
  string arn = 1;

  string encrypted_fingerprint = 2 [json_name = "encrypted_fingerprint"];

  string encrypted_private_key = 3 [json_name = "encrypted_private_key"];

  string fingerprint = 4;

  string id = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string pgp_key = 8 [json_name = "pgp_key"];

  string private_key = 9 [json_name = "private_key"];

  string public_key = 10 [json_name = "public_key"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsLightsailStaticIp version is 0
message AwsLightsailStaticIp {
  string arn = 1;

  string id = 2;

  string ip_address = 3 [json_name = "ip_address"];

  string name = 4;

  string support_code = 5 [json_name = "support_code"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsLightsailStaticIpAttachment version is 0
message AwsLightsailStaticIpAttachment {
  string id = 1;

  string instance_name = 2 [json_name = "instance_name"];

  string ip_address = 3 [json_name = "ip_address"];

  string static_ip_name = 4 [json_name = "static_ip_name"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsLoadBalancerBackendServerPolicy version is 0
message AwsLoadBalancerBackendServerPolicy {
  string id = 1;

  int64 instance_port = 2 [json_name = "instance_port"];

  string load_balancer_name = 3 [json_name = "load_balancer_name"];

  repeated string policy_names = 4 [json_name = "policy_names"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsLoadBalancerListenerPolicy version is 0
message AwsLoadBalancerListenerPolicy {
  string id = 1;

  string load_balancer_name = 2 [json_name = "load_balancer_name"];

  int64 load_balancer_port = 3 [json_name = "load_balancer_port"];

  repeated string policy_names = 4 [json_name = "policy_names"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsLoadBalancerPolicy version is 0
message AwsLoadBalancerPolicy {
  string id = 1;

  string load_balancer_name = 2 [json_name = "load_balancer_name"];

  string policy_name = 3 [json_name = "policy_name"];

  string policy_type_name = 4 [json_name = "policy_type_name"];

  repeated PolicyAttribute policy_attribute = 5 [json_name = "policy_attribute"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message PolicyAttribute {
    string name = 1;

    string value = 2;
  }
}

//AwsMacie2Account version is 0
message AwsMacie2Account {
  string created_at = 1 [json_name = "created_at"];

  string finding_publishing_frequency = 2 [json_name = "finding_publishing_frequency"];

  string id = 3;

  string service_role = 4 [json_name = "service_role"];

  string status = 5;

  string updated_at = 6 [json_name = "updated_at"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsMacie2ClassificationJob version is 0
message AwsMacie2ClassificationJob {
  string created_at = 1 [json_name = "created_at"];

  repeated string custom_data_identifier_ids = 2 [json_name = "custom_data_identifier_ids"];

  string description = 3;

  string id = 4;

  bool initial_run = 5 [json_name = "initial_run"];

  string job_arn = 6 [json_name = "job_arn"];

  string job_id = 7 [json_name = "job_id"];

  string job_status = 8 [json_name = "job_status"];

  string job_type = 9 [json_name = "job_type"];

  string name = 10;

  string name_prefix = 11 [json_name = "name_prefix"];

  int64 sampling_percentage = 12 [json_name = "sampling_percentage"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  repeated UserPausedDetails user_paused_details = 15 [json_name = "user_paused_details"];

  S3JobDefinition s3_job_definition = 16 [json_name = "s3_job_definition"];

  ScheduleFrequency schedule_frequency = 17 [json_name = "schedule_frequency"];

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message UserPausedDetails {
    //job_expires_at: string
    string job_expires_at = 1 [json_name = "job_expires_at"];

    //job_imminent_expiration_health_event_arn: string
    string job_imminent_expiration_health_event_arn = 2 [json_name = "job_imminent_expiration_health_event_arn"];

    //job_paused_at: string
    string job_paused_at = 3 [json_name = "job_paused_at"];
  }

  message S3JobDefinition {
    repeated BucketDefinitions bucket_definitions = 1 [json_name = "bucket_definitions"];

    Scoping scoping = 2;

    message BucketDefinitions {
      string account_id = 1 [json_name = "account_id"];

      repeated string buckets = 2;
    }

    message Scoping {
      Excludes excludes = 1;

      Includes includes = 2;

      message Excludes {
        repeated And and = 1;

        message And {
          SimpleScopeTerm simple_scope_term = 1 [json_name = "simple_scope_term"];

          TagScopeTerm tag_scope_term = 2 [json_name = "tag_scope_term"];

          message SimpleScopeTerm {
            string comparator = 1;

            string key = 2;

            repeated string values = 3;
          }

          message TagScopeTerm {
            string comparator = 1;

            string key = 2;

            string target = 3;

            repeated TagValues tag_values = 4 [json_name = "tag_values"];

            message TagValues {
              string key = 1;

              string value = 2;
            }
          }
        }
      }

      message Includes {
        repeated And and = 1;

        message And {
          SimpleScopeTerm simple_scope_term = 1 [json_name = "simple_scope_term"];

          TagScopeTerm tag_scope_term = 2 [json_name = "tag_scope_term"];

          message SimpleScopeTerm {
            string comparator = 1;

            string key = 2;

            repeated string values = 3;
          }

          message TagScopeTerm {
            string comparator = 1;

            string key = 2;

            string target = 3;

            repeated TagValues tag_values = 4 [json_name = "tag_values"];

            message TagValues {
              string key = 1;

              string value = 2;
            }
          }
        }
      }
    }
  }

  message ScheduleFrequency {
    bool daily_schedule = 1 [json_name = "daily_schedule"];

    int64 monthly_schedule = 2 [json_name = "monthly_schedule"];

    string weekly_schedule = 3 [json_name = "weekly_schedule"];
  }
}

//AwsMacie2CustomDataIdentifier version is 0
message AwsMacie2CustomDataIdentifier {
  string arn = 1;

  string created_at = 2 [json_name = "created_at"];

  string description = 3;

  string id = 4;

  repeated string ignore_words = 5 [json_name = "ignore_words"];

  repeated string keywords = 6;

  int64 maximum_match_distance = 7 [json_name = "maximum_match_distance"];

  string name = 8;

  string name_prefix = 9 [json_name = "name_prefix"];

  string regex = 10;

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsMacie2FindingsFilter version is 0
message AwsMacie2FindingsFilter {
  string action = 1;

  string arn = 2;

  string description = 3;

  string id = 4;

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  int64 position = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  FindingCriteria finding_criteria = 10 [json_name = "finding_criteria"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message FindingCriteria {
    repeated Criterion criterion = 1;

    message Criterion {
      repeated string eq = 1;

      repeated string eq_exact_match = 2 [json_name = "eq_exact_match"];

      string field = 3;

      string gt = 4;

      string gte = 5;

      string lt = 6;

      string lte = 7;

      repeated string neq = 8;
    }
  }
}

//AwsMacie2InvitationAccepter version is 0
message AwsMacie2InvitationAccepter {
  string administrator_account_id = 1 [json_name = "administrator_account_id"];

  string id = 2;

  string invitation_id = 3 [json_name = "invitation_id"];

  repeated Timeouts timeouts = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;
  }
}

//AwsMacie2Member version is 0
message AwsMacie2Member {
  string account_id = 1 [json_name = "account_id"];

  string administrator_account_id = 2 [json_name = "administrator_account_id"];

  string arn = 3;

  string email = 4;

  string id = 5;

  string invitation_disable_email_notification = 6 [json_name = "invitation_disable_email_notification"];

  string invitation_message = 7 [json_name = "invitation_message"];

  bool invite = 8;

  string invited_at = 9 [json_name = "invited_at"];

  string master_account_id = 10 [json_name = "master_account_id"];

  string relationship_status = 11 [json_name = "relationship_status"];

  string status = 12;

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  string updated_at = 15 [json_name = "updated_at"];

  repeated Timeouts timeouts = 16;

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsMacie2OrganizationAdminAccount version is 0
message AwsMacie2OrganizationAdminAccount {
  string admin_account_id = 1 [json_name = "admin_account_id"];

  string id = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsMacieMemberAccountAssociation version is 0
message AwsMacieMemberAccountAssociation {
  string id = 1;

  string member_account_id = 2 [json_name = "member_account_id"];

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsMacieS3BucketAssociation version is 0
message AwsMacieS3BucketAssociation {
  string bucket_name = 1 [json_name = "bucket_name"];

  string id = 2;

  string member_account_id = 3 [json_name = "member_account_id"];

  string prefix = 4;

  ClassificationType classification_type = 5 [json_name = "classification_type"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message ClassificationType {
    string continuous = 1;

    string one_time = 2 [json_name = "one_time"];
  }
}

//AwsMainRouteTableAssociation version is 0
message AwsMainRouteTableAssociation {
  string id = 1;

  string original_route_table_id = 2 [json_name = "original_route_table_id"];

  string route_table_id = 3 [json_name = "route_table_id"];

  string vpc_id = 4 [json_name = "vpc_id"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsMediaConvertQueue version is 0
message AwsMediaConvertQueue {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string pricing_plan = 5 [json_name = "pricing_plan"];

  string status = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  ReservationPlanSettings reservation_plan_settings = 9 [json_name = "reservation_plan_settings"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message ReservationPlanSettings {
    string commitment = 1;

    string renewal_type = 2 [json_name = "renewal_type"];

    int64 reserved_slots = 3 [json_name = "reserved_slots"];
  }
}

//AwsMediaPackageChannel version is 0
message AwsMediaPackageChannel {
  string arn = 1;

  string channel_id = 2 [json_name = "channel_id"];

  string description = 3;

  repeated HlsIngest hls_ingest = 4 [json_name = "hls_ingest"];

  string id = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message HlsIngest {
    //ingest_endpoints: list of object
    repeated IngestEndpoints ingest_endpoints = 1 [json_name = "ingest_endpoints"];

    message IngestEndpoints {
      //password: string
      string password = 1;

      //url: string
      string url = 2;

      //username: string
      string username = 3;
    }
  }
}

//AwsMediaStoreContainer version is 0
message AwsMediaStoreContainer {
  string arn = 1;

  string endpoint = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsMediaStoreContainerPolicy version is 0
message AwsMediaStoreContainerPolicy {
  string container_name = 1 [json_name = "container_name"];

  string id = 2;

  string policy = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsMqBroker version is 0
message AwsMqBroker {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  string authentication_strategy = 3 [json_name = "authentication_strategy"];

  bool auto_minor_version_upgrade = 4 [json_name = "auto_minor_version_upgrade"];

  string broker_name = 5 [json_name = "broker_name"];

  string deployment_mode = 6 [json_name = "deployment_mode"];

  string engine_type = 7 [json_name = "engine_type"];

  string engine_version = 8 [json_name = "engine_version"];

  string host_instance_type = 9 [json_name = "host_instance_type"];

  string id = 10;

  repeated Instances instances = 11;

  bool publicly_accessible = 12 [json_name = "publicly_accessible"];

  repeated string security_groups = 13 [json_name = "security_groups"];

  string storage_type = 14 [json_name = "storage_type"];

  repeated string subnet_ids = 15 [json_name = "subnet_ids"];

  map<string, string> tags = 16;

  map<string, string> tags_all = 17 [json_name = "tags_all"];

  Configuration configuration = 18;

  EncryptionOptions encryption_options = 19 [json_name = "encryption_options"];

  LdapServerMetadata ldap_server_metadata = 20 [json_name = "ldap_server_metadata"];

  Logs logs = 21;

  MaintenanceWindowStartTime maintenance_window_start_time = 22 [json_name = "maintenance_window_start_time"];

  repeated User user = 23;

  repeated string depends_on = 24;

  int32 count = 25;

  map<string, string> for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;

  message Instances {
    //console_url: string
    string console_url = 1 [json_name = "console_url"];

    //endpoints: list of string
    repeated string endpoints = 2;

    //ip_address: string
    string ip_address = 3 [json_name = "ip_address"];
  }

  message Configuration {
    string id = 1;

    int64 revision = 2;
  }

  message EncryptionOptions {
    string kms_key_id = 1 [json_name = "kms_key_id"];

    bool use_aws_owned_key = 2 [json_name = "use_aws_owned_key"];
  }

  message LdapServerMetadata {
    repeated string hosts = 1;

    string role_base = 2 [json_name = "role_base"];

    string role_name = 3 [json_name = "role_name"];

    string role_search_matching = 4 [json_name = "role_search_matching"];

    bool role_search_subtree = 5 [json_name = "role_search_subtree"];

    string service_account_password = 6 [json_name = "service_account_password"];

    string service_account_username = 7 [json_name = "service_account_username"];

    string user_base = 8 [json_name = "user_base"];

    string user_role_name = 9 [json_name = "user_role_name"];

    string user_search_matching = 10 [json_name = "user_search_matching"];

    bool user_search_subtree = 11 [json_name = "user_search_subtree"];
  }

  message Logs {
    string audit = 1;

    bool general = 2;
  }

  message MaintenanceWindowStartTime {
    string day_of_week = 1 [json_name = "day_of_week"];

    string time_of_day = 2 [json_name = "time_of_day"];

    string time_zone = 3 [json_name = "time_zone"];
  }

  message User {
    bool console_access = 1 [json_name = "console_access"];

    repeated string groups = 2;

    string password = 3;

    string username = 4;
  }
}

//AwsMqConfiguration version is 0
message AwsMqConfiguration {
  string arn = 1;

  string authentication_strategy = 2 [json_name = "authentication_strategy"];

  string data = 3;

  string description = 4;

  string engine_type = 5 [json_name = "engine_type"];

  string engine_version = 6 [json_name = "engine_version"];

  string id = 7;

  int64 latest_revision = 8 [json_name = "latest_revision"];

  string name = 9;

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsMskCluster version is 0
message AwsMskCluster {
  string arn = 1;

  string bootstrap_brokers = 2 [json_name = "bootstrap_brokers"];

  string bootstrap_brokers_sasl_iam = 3 [json_name = "bootstrap_brokers_sasl_iam"];

  string bootstrap_brokers_sasl_scram = 4 [json_name = "bootstrap_brokers_sasl_scram"];

  string bootstrap_brokers_tls = 5 [json_name = "bootstrap_brokers_tls"];

  string cluster_name = 6 [json_name = "cluster_name"];

  string current_version = 7 [json_name = "current_version"];

  string enhanced_monitoring = 8 [json_name = "enhanced_monitoring"];

  string id = 9;

  string kafka_version = 10 [json_name = "kafka_version"];

  int64 number_of_broker_nodes = 11 [json_name = "number_of_broker_nodes"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string zookeeper_connect_string = 14 [json_name = "zookeeper_connect_string"];

  string zookeeper_connect_string_tls = 15 [json_name = "zookeeper_connect_string_tls"];

  BrokerNodeGroupInfo broker_node_group_info = 16 [json_name = "broker_node_group_info"];

  ClientAuthentication client_authentication = 17 [json_name = "client_authentication"];

  ConfigurationInfo configuration_info = 18 [json_name = "configuration_info"];

  EncryptionInfo encryption_info = 19 [json_name = "encryption_info"];

  LoggingInfo logging_info = 20 [json_name = "logging_info"];

  OpenMonitoring open_monitoring = 21 [json_name = "open_monitoring"];

  repeated Timeouts timeouts = 22;

  repeated string depends_on = 23;

  int32 count = 24;

  map<string, string> for_each = 25;

  string provider = 26;

  terraform.meta.Lifecycle lifecycle = 27;

  message BrokerNodeGroupInfo {
    string az_distribution = 1 [json_name = "az_distribution"];

    repeated string client_subnets = 2 [json_name = "client_subnets"];

    int64 ebs_volume_size = 3 [json_name = "ebs_volume_size"];

    string instance_type = 4 [json_name = "instance_type"];

    repeated string security_groups = 5 [json_name = "security_groups"];
  }

  message ClientAuthentication {
    Sasl sasl = 1;

    Tls tls = 2;

    message Sasl {
      bool iam = 1;

      bool scram = 2;
    }

    message Tls {
      repeated string certificate_authority_arns = 1 [json_name = "certificate_authority_arns"];
    }
  }

  message ConfigurationInfo {
    string arn = 1;

    int64 revision = 2;
  }

  message EncryptionInfo {
    string encryption_at_rest_kms_key_arn = 1 [json_name = "encryption_at_rest_kms_key_arn"];

    EncryptionInTransit encryption_in_transit = 2 [json_name = "encryption_in_transit"];

    message EncryptionInTransit {
      string client_broker = 1 [json_name = "client_broker"];

      bool in_cluster = 2 [json_name = "in_cluster"];
    }
  }

  message LoggingInfo {
    BrokerLogs broker_logs = 1 [json_name = "broker_logs"];

    message BrokerLogs {
      CloudwatchLogs cloudwatch_logs = 1 [json_name = "cloudwatch_logs"];

      Firehose firehose = 2;

      S3 s3 = 3;

      message CloudwatchLogs {
        bool enabled = 1;

        string log_group = 2 [json_name = "log_group"];
      }

      message Firehose {
        string delivery_stream = 1 [json_name = "delivery_stream"];

        bool enabled = 2;
      }

      message S3 {
        string bucket = 1;

        bool enabled = 2;

        string prefix = 3;
      }
    }
  }

  message OpenMonitoring {
    Prometheus prometheus = 1;

    message Prometheus {
      JmxExporter jmx_exporter = 1 [json_name = "jmx_exporter"];

      NodeExporter node_exporter = 2 [json_name = "node_exporter"];

      message JmxExporter {
        bool enabled_in_broker = 1 [json_name = "enabled_in_broker"];
      }

      message NodeExporter {
        bool enabled_in_broker = 1 [json_name = "enabled_in_broker"];
      }
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsMskConfiguration version is 0
message AwsMskConfiguration {
  string arn = 1;

  string description = 2;

  string id = 3;

  repeated string kafka_versions = 4 [json_name = "kafka_versions"];

  int64 latest_revision = 5 [json_name = "latest_revision"];

  string name = 6;

  string server_properties = 7 [json_name = "server_properties"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsMskScramSecretAssociation version is 0
message AwsMskScramSecretAssociation {
  string cluster_arn = 1 [json_name = "cluster_arn"];

  string id = 2;

  repeated string secret_arn_list = 3 [json_name = "secret_arn_list"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsMwaaEnvironment version is 0
message AwsMwaaEnvironment {
  map<string, string> airflow_configuration_options = 1 [json_name = "airflow_configuration_options"];

  string airflow_version = 2 [json_name = "airflow_version"];

  string arn = 3;

  string created_at = 4 [json_name = "created_at"];

  string dag_s3_path = 5 [json_name = "dag_s3_path"];

  string environment_class = 6 [json_name = "environment_class"];

  string execution_role_arn = 7 [json_name = "execution_role_arn"];

  string id = 8;

  string kms_key = 9 [json_name = "kms_key"];

  repeated LastUpdated last_updated = 10 [json_name = "last_updated"];

  int64 max_workers = 11 [json_name = "max_workers"];

  int64 min_workers = 12 [json_name = "min_workers"];

  string name = 13;

  string plugins_s3_object_version = 14 [json_name = "plugins_s3_object_version"];

  string plugins_s3_path = 15 [json_name = "plugins_s3_path"];

  string requirements_s3_object_version = 16 [json_name = "requirements_s3_object_version"];

  string requirements_s3_path = 17 [json_name = "requirements_s3_path"];

  string service_role_arn = 18 [json_name = "service_role_arn"];

  string source_bucket_arn = 19 [json_name = "source_bucket_arn"];

  string status = 20;

  map<string, string> tags = 21;

  map<string, string> tags_all = 22 [json_name = "tags_all"];

  string webserver_access_mode = 23 [json_name = "webserver_access_mode"];

  string webserver_url = 24 [json_name = "webserver_url"];

  string weekly_maintenance_window_start = 25 [json_name = "weekly_maintenance_window_start"];

  LoggingConfiguration logging_configuration = 26 [json_name = "logging_configuration"];

  NetworkConfiguration network_configuration = 27 [json_name = "network_configuration"];

  repeated string depends_on = 28;

  int32 count = 29;

  map<string, string> for_each = 30;

  string provider = 31;

  terraform.meta.Lifecycle lifecycle = 32;

  message LastUpdated {
    //created_at: string
    string created_at = 1 [json_name = "created_at"];

    //error: list of object
    repeated Error error = 2;

    //status: string
    string status = 3;

    message Error {
      //error_code: string
      string error_code = 1 [json_name = "error_code"];

      //error_message: string
      string error_message = 2 [json_name = "error_message"];
    }
  }

  message LoggingConfiguration {
    DagProcessingLogs dag_processing_logs = 1 [json_name = "dag_processing_logs"];

    SchedulerLogs scheduler_logs = 2 [json_name = "scheduler_logs"];

    TaskLogs task_logs = 3 [json_name = "task_logs"];

    WebserverLogs webserver_logs = 4 [json_name = "webserver_logs"];

    WorkerLogs worker_logs = 5 [json_name = "worker_logs"];

    message DagProcessingLogs {
      string cloud_watch_log_group_arn = 1 [json_name = "cloud_watch_log_group_arn"];

      bool enabled = 2;

      string log_level = 3 [json_name = "log_level"];
    }

    message SchedulerLogs {
      string cloud_watch_log_group_arn = 1 [json_name = "cloud_watch_log_group_arn"];

      bool enabled = 2;

      string log_level = 3 [json_name = "log_level"];
    }

    message TaskLogs {
      string cloud_watch_log_group_arn = 1 [json_name = "cloud_watch_log_group_arn"];

      bool enabled = 2;

      string log_level = 3 [json_name = "log_level"];
    }

    message WebserverLogs {
      string cloud_watch_log_group_arn = 1 [json_name = "cloud_watch_log_group_arn"];

      bool enabled = 2;

      string log_level = 3 [json_name = "log_level"];
    }

    message WorkerLogs {
      string cloud_watch_log_group_arn = 1 [json_name = "cloud_watch_log_group_arn"];

      bool enabled = 2;

      string log_level = 3 [json_name = "log_level"];
    }
  }

  message NetworkConfiguration {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnet_ids = 2 [json_name = "subnet_ids"];
  }
}

//AwsNatGateway version is 0
message AwsNatGateway {
  string allocation_id = 1 [json_name = "allocation_id"];

  string connectivity_type = 2 [json_name = "connectivity_type"];

  string id = 3;

  string network_interface_id = 4 [json_name = "network_interface_id"];

  string private_ip = 5 [json_name = "private_ip"];

  string public_ip = 6 [json_name = "public_ip"];

  string subnet_id = 7 [json_name = "subnet_id"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsNeptuneCluster version is 0
message AwsNeptuneCluster {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  repeated string availability_zones = 3 [json_name = "availability_zones"];

  int64 backup_retention_period = 4 [json_name = "backup_retention_period"];

  string cluster_identifier = 5 [json_name = "cluster_identifier"];

  string cluster_identifier_prefix = 6 [json_name = "cluster_identifier_prefix"];

  repeated string cluster_members = 7 [json_name = "cluster_members"];

  string cluster_resource_id = 8 [json_name = "cluster_resource_id"];

  bool copy_tags_to_snapshot = 9 [json_name = "copy_tags_to_snapshot"];

  bool deletion_protection = 10 [json_name = "deletion_protection"];

  repeated string enable_cloudwatch_logs_exports = 11 [json_name = "enable_cloudwatch_logs_exports"];

  string endpoint = 12;

  string engine = 13;

  string engine_version = 14 [json_name = "engine_version"];

  string final_snapshot_identifier = 15 [json_name = "final_snapshot_identifier"];

  string hosted_zone_id = 16 [json_name = "hosted_zone_id"];

  bool iam_database_authentication_enabled = 17 [json_name = "iam_database_authentication_enabled"];

  repeated string iam_roles = 18 [json_name = "iam_roles"];

  string id = 19;

  string kms_key_arn = 20 [json_name = "kms_key_arn"];

  string neptune_cluster_parameter_group_name = 21 [json_name = "neptune_cluster_parameter_group_name"];

  string neptune_subnet_group_name = 22 [json_name = "neptune_subnet_group_name"];

  int64 port = 23;

  string preferred_backup_window = 24 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 25 [json_name = "preferred_maintenance_window"];

  string reader_endpoint = 26 [json_name = "reader_endpoint"];

  string replication_source_identifier = 27 [json_name = "replication_source_identifier"];

  bool skip_final_snapshot = 28 [json_name = "skip_final_snapshot"];

  string snapshot_identifier = 29 [json_name = "snapshot_identifier"];

  bool storage_encrypted = 30 [json_name = "storage_encrypted"];

  map<string, string> tags = 31;

  map<string, string> tags_all = 32 [json_name = "tags_all"];

  repeated string vpc_security_group_ids = 33 [json_name = "vpc_security_group_ids"];

  repeated Timeouts timeouts = 34;

  repeated string depends_on = 35;

  int32 count = 36;

  map<string, string> for_each = 37;

  string provider = 38;

  terraform.meta.Lifecycle lifecycle = 39;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsNeptuneClusterEndpoint version is 0
message AwsNeptuneClusterEndpoint {
  string arn = 1;

  string cluster_endpoint_identifier = 2 [json_name = "cluster_endpoint_identifier"];

  string cluster_identifier = 3 [json_name = "cluster_identifier"];

  string endpoint = 4;

  string endpoint_type = 5 [json_name = "endpoint_type"];

  repeated string excluded_members = 6 [json_name = "excluded_members"];

  string id = 7;

  repeated string static_members = 8 [json_name = "static_members"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsNeptuneClusterInstance version is 0
message AwsNeptuneClusterInstance {
  string address = 1;

  bool apply_immediately = 2 [json_name = "apply_immediately"];

  string arn = 3;

  bool auto_minor_version_upgrade = 4 [json_name = "auto_minor_version_upgrade"];

  string availability_zone = 5 [json_name = "availability_zone"];

  string cluster_identifier = 6 [json_name = "cluster_identifier"];

  string dbi_resource_id = 7 [json_name = "dbi_resource_id"];

  string endpoint = 8;

  string engine = 9;

  string engine_version = 10 [json_name = "engine_version"];

  string id = 11;

  string identifier = 12;

  string identifier_prefix = 13 [json_name = "identifier_prefix"];

  string instance_class = 14 [json_name = "instance_class"];

  string kms_key_arn = 15 [json_name = "kms_key_arn"];

  string neptune_parameter_group_name = 16 [json_name = "neptune_parameter_group_name"];

  string neptune_subnet_group_name = 17 [json_name = "neptune_subnet_group_name"];

  int64 port = 18;

  string preferred_backup_window = 19 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 20 [json_name = "preferred_maintenance_window"];

  int64 promotion_tier = 21 [json_name = "promotion_tier"];

  bool publicly_accessible = 22 [json_name = "publicly_accessible"];

  bool storage_encrypted = 23 [json_name = "storage_encrypted"];

  map<string, string> tags = 24;

  map<string, string> tags_all = 25 [json_name = "tags_all"];

  bool writer = 26;

  repeated Timeouts timeouts = 27;

  repeated string depends_on = 28;

  int32 count = 29;

  map<string, string> for_each = 30;

  string provider = 31;

  terraform.meta.Lifecycle lifecycle = 32;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsNeptuneClusterParameterGroup version is 0
message AwsNeptuneClusterParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated Parameter parameter = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Parameter {
    string apply_method = 1 [json_name = "apply_method"];

    string name = 2;

    string value = 3;
  }
}

//AwsNeptuneClusterSnapshot version is 0
message AwsNeptuneClusterSnapshot {
  int64 allocated_storage = 1 [json_name = "allocated_storage"];

  repeated string availability_zones = 2 [json_name = "availability_zones"];

  string db_cluster_identifier = 3 [json_name = "db_cluster_identifier"];

  string db_cluster_snapshot_arn = 4 [json_name = "db_cluster_snapshot_arn"];

  string db_cluster_snapshot_identifier = 5 [json_name = "db_cluster_snapshot_identifier"];

  string engine = 6;

  string engine_version = 7 [json_name = "engine_version"];

  string id = 8;

  string kms_key_id = 9 [json_name = "kms_key_id"];

  string license_model = 10 [json_name = "license_model"];

  int64 port = 11;

  string snapshot_type = 12 [json_name = "snapshot_type"];

  string source_db_cluster_snapshot_arn = 13 [json_name = "source_db_cluster_snapshot_arn"];

  string status = 14;

  bool storage_encrypted = 15 [json_name = "storage_encrypted"];

  string vpc_id = 16 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 17;

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message Timeouts {
    string create = 1;
  }
}

//AwsNeptuneEventSubscription version is 0
message AwsNeptuneEventSubscription {
  string arn = 1;

  string customer_aws_id = 2 [json_name = "customer_aws_id"];

  bool enabled = 3;

  repeated string event_categories = 4 [json_name = "event_categories"];

  string id = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string sns_topic_arn = 8 [json_name = "sns_topic_arn"];

  repeated string source_ids = 9 [json_name = "source_ids"];

  string source_type = 10 [json_name = "source_type"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsNeptuneParameterGroup version is 0
message AwsNeptuneParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated Parameter parameter = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Parameter {
    string apply_method = 1 [json_name = "apply_method"];

    string name = 2;

    string value = 3;
  }
}

//AwsNeptuneSubnetGroup version is 0
message AwsNeptuneSubnetGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  repeated string subnet_ids = 6 [json_name = "subnet_ids"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsNetworkAcl version is 0
message AwsNetworkAcl {
  string arn = 1;

  repeated Egress egress = 2;

  string id = 3;

  repeated Ingress ingress = 4;

  string owner_id = 5 [json_name = "owner_id"];

  repeated string subnet_ids = 6 [json_name = "subnet_ids"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string vpc_id = 9 [json_name = "vpc_id"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Egress {
    //action: string
    string action = 1;

    //cidr_block: string
    string cidr_block = 2 [json_name = "cidr_block"];

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //icmp_code: number
    int64 icmp_code = 4 [json_name = "icmp_code"];

    //icmp_type: number
    int64 icmp_type = 5 [json_name = "icmp_type"];

    //ipv6_cidr_block: string
    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    //protocol: string
    string protocol = 7;

    //rule_no: number
    int64 rule_no = 8 [json_name = "rule_no"];

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }

  message Ingress {
    //action: string
    string action = 1;

    //cidr_block: string
    string cidr_block = 2 [json_name = "cidr_block"];

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //icmp_code: number
    int64 icmp_code = 4 [json_name = "icmp_code"];

    //icmp_type: number
    int64 icmp_type = 5 [json_name = "icmp_type"];

    //ipv6_cidr_block: string
    string ipv6_cidr_block = 6 [json_name = "ipv6_cidr_block"];

    //protocol: string
    string protocol = 7;

    //rule_no: number
    int64 rule_no = 8 [json_name = "rule_no"];

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }
}

//AwsNetworkAclRule version is 0
message AwsNetworkAclRule {
  string cidr_block = 1 [json_name = "cidr_block"];

  bool egress = 2;

  int64 from_port = 3 [json_name = "from_port"];

  string icmp_code = 4 [json_name = "icmp_code"];

  string icmp_type = 5 [json_name = "icmp_type"];

  string id = 6;

  string ipv6_cidr_block = 7 [json_name = "ipv6_cidr_block"];

  string network_acl_id = 8 [json_name = "network_acl_id"];

  string protocol = 9;

  string rule_action = 10 [json_name = "rule_action"];

  int64 rule_number = 11 [json_name = "rule_number"];

  int64 to_port = 12 [json_name = "to_port"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsNetworkInterface version is 0
message AwsNetworkInterface {
  string arn = 1;

  string description = 2;

  string id = 3;

  string interface_type = 4 [json_name = "interface_type"];

  int64 ipv4_prefix_count = 5 [json_name = "ipv4_prefix_count"];

  repeated string ipv4_prefixes = 6 [json_name = "ipv4_prefixes"];

  int64 ipv6_address_count = 7 [json_name = "ipv6_address_count"];

  repeated string ipv6_addresses = 8 [json_name = "ipv6_addresses"];

  int64 ipv6_prefix_count = 9 [json_name = "ipv6_prefix_count"];

  repeated string ipv6_prefixes = 10 [json_name = "ipv6_prefixes"];

  string mac_address = 11 [json_name = "mac_address"];

  string outpost_arn = 12 [json_name = "outpost_arn"];

  string owner_id = 13 [json_name = "owner_id"];

  string private_dns_name = 14 [json_name = "private_dns_name"];

  string private_ip = 15 [json_name = "private_ip"];

  repeated string private_ips = 16 [json_name = "private_ips"];

  int64 private_ips_count = 17 [json_name = "private_ips_count"];

  repeated string security_groups = 18 [json_name = "security_groups"];

  bool source_dest_check = 19 [json_name = "source_dest_check"];

  string subnet_id = 20 [json_name = "subnet_id"];

  map<string, string> tags = 21;

  map<string, string> tags_all = 22 [json_name = "tags_all"];

  repeated Attachment attachment = 23;

  repeated string depends_on = 24;

  int32 count = 25;

  map<string, string> for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;

  message Attachment {
    string attachment_id = 1 [json_name = "attachment_id"];

    int64 device_index = 2 [json_name = "device_index"];

    string instance = 3;
  }
}

//AwsNetworkInterfaceAttachment version is 0
message AwsNetworkInterfaceAttachment {
  string attachment_id = 1 [json_name = "attachment_id"];

  int64 device_index = 2 [json_name = "device_index"];

  string id = 3;

  string instance_id = 4 [json_name = "instance_id"];

  string network_interface_id = 5 [json_name = "network_interface_id"];

  string status = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsNetworkInterfaceSgAttachment version is 0
message AwsNetworkInterfaceSgAttachment {
  string id = 1;

  string network_interface_id = 2 [json_name = "network_interface_id"];

  string security_group_id = 3 [json_name = "security_group_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsNetworkfirewallFirewall version is 0
message AwsNetworkfirewallFirewall {
  string arn = 1;

  bool delete_protection = 2 [json_name = "delete_protection"];

  string description = 3;

  string firewall_policy_arn = 4 [json_name = "firewall_policy_arn"];

  bool firewall_policy_change_protection = 5 [json_name = "firewall_policy_change_protection"];

  repeated FirewallStatus firewall_status = 6 [json_name = "firewall_status"];

  string id = 7;

  string name = 8;

  bool subnet_change_protection = 9 [json_name = "subnet_change_protection"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  string update_token = 12 [json_name = "update_token"];

  string vpc_id = 13 [json_name = "vpc_id"];

  repeated SubnetMapping subnet_mapping = 14 [json_name = "subnet_mapping"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message FirewallStatus {
    //sync_states: set of object
    repeated SyncStates sync_states = 1 [json_name = "sync_states"];

    message SyncStates {
      //attachment: list of object
      repeated Attachment attachment = 1;

      //availability_zone: string
      string availability_zone = 2 [json_name = "availability_zone"];

      message Attachment {
        //endpoint_id: string
        string endpoint_id = 1 [json_name = "endpoint_id"];

        //subnet_id: string
        string subnet_id = 2 [json_name = "subnet_id"];
      }
    }
  }

  message SubnetMapping {
    string subnet_id = 1 [json_name = "subnet_id"];
  }
}

//AwsNetworkfirewallFirewallPolicy version is 0
message AwsNetworkfirewallFirewallPolicy {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  string update_token = 7 [json_name = "update_token"];

  FirewallPolicy firewall_policy = 8 [json_name = "firewall_policy"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message FirewallPolicy {
    repeated string stateful_default_actions = 1 [json_name = "stateful_default_actions"];

    repeated string stateless_default_actions = 2 [json_name = "stateless_default_actions"];

    repeated string stateless_fragment_default_actions = 3 [json_name = "stateless_fragment_default_actions"];

    StatefulEngineOptions stateful_engine_options = 4 [json_name = "stateful_engine_options"];

    repeated StatefulRuleGroupReference stateful_rule_group_reference = 5 [json_name = "stateful_rule_group_reference"];

    repeated StatelessCustomAction stateless_custom_action = 6 [json_name = "stateless_custom_action"];

    repeated StatelessRuleGroupReference stateless_rule_group_reference = 7 [json_name = "stateless_rule_group_reference"];

    message StatefulEngineOptions {
      string rule_order = 1 [json_name = "rule_order"];
    }

    message StatefulRuleGroupReference {
      int64 priority = 1;

      string resource_arn = 2 [json_name = "resource_arn"];
    }

    message StatelessCustomAction {
      string action_name = 1 [json_name = "action_name"];

      ActionDefinition action_definition = 2 [json_name = "action_definition"];

      message ActionDefinition {
        PublishMetricAction publish_metric_action = 1 [json_name = "publish_metric_action"];

        message PublishMetricAction {
          repeated Dimension dimension = 1;

          message Dimension {
            string value = 1;
          }
        }
      }
    }

    message StatelessRuleGroupReference {
      int64 priority = 1;

      string resource_arn = 2 [json_name = "resource_arn"];
    }
  }
}

//AwsNetworkfirewallLoggingConfiguration version is 0
message AwsNetworkfirewallLoggingConfiguration {
  string firewall_arn = 1 [json_name = "firewall_arn"];

  string id = 2;

  LoggingConfiguration logging_configuration = 3 [json_name = "logging_configuration"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message LoggingConfiguration {
    repeated LogDestinationConfig log_destination_config = 1 [json_name = "log_destination_config"];

    message LogDestinationConfig {
      map<string, string> log_destination = 1 [json_name = "log_destination"];

      string log_destination_type = 2 [json_name = "log_destination_type"];

      string log_type = 3 [json_name = "log_type"];
    }
  }
}

//AwsNetworkfirewallResourcePolicy version is 0
message AwsNetworkfirewallResourcePolicy {
  string id = 1;

  string policy = 2;

  string resource_arn = 3 [json_name = "resource_arn"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsNetworkfirewallRuleGroup version is 0
message AwsNetworkfirewallRuleGroup {
  string arn = 1;

  int64 capacity = 2;

  string description = 3;

  string id = 4;

  string name = 5;

  string rules = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string type = 9;

  string update_token = 10 [json_name = "update_token"];

  RuleGroup rule_group = 11 [json_name = "rule_group"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message RuleGroup {
    RuleVariables rule_variables = 1 [json_name = "rule_variables"];

    RulesSource rules_source = 2 [json_name = "rules_source"];

    StatefulRuleOptions stateful_rule_options = 3 [json_name = "stateful_rule_options"];

    message RuleVariables {
      repeated IpSets ip_sets = 1 [json_name = "ip_sets"];

      repeated PortSets port_sets = 2 [json_name = "port_sets"];

      message IpSets {
        string key = 1;

        IpSet ip_set = 2 [json_name = "ip_set"];

        message IpSet {
          repeated string definition = 1;
        }
      }

      message PortSets {
        string key = 1;

        PortSet port_set = 2 [json_name = "port_set"];

        message PortSet {
          repeated string definition = 1;
        }
      }
    }

    message RulesSource {
      string rules_string = 1 [json_name = "rules_string"];

      RulesSourceList rules_source_list = 2 [json_name = "rules_source_list"];

      repeated StatefulRule stateful_rule = 3 [json_name = "stateful_rule"];

      StatelessRulesAndCustomActions stateless_rules_and_custom_actions = 4 [json_name = "stateless_rules_and_custom_actions"];

      message RulesSourceList {
        string generated_rules_type = 1 [json_name = "generated_rules_type"];

        repeated string target_types = 2 [json_name = "target_types"];

        repeated string targets = 3;
      }

      message StatefulRule {
        string action = 1;

        Header header = 2;

        repeated RuleOption rule_option = 3 [json_name = "rule_option"];

        message Header {
          string destination = 1;

          string destination_port = 2 [json_name = "destination_port"];

          string direction = 3;

          string protocol = 4;

          string source = 5;

          string source_port = 6 [json_name = "source_port"];
        }

        message RuleOption {
          string keyword = 1;

          repeated string settings = 2;
        }
      }

      message StatelessRulesAndCustomActions {
        repeated CustomAction custom_action = 1 [json_name = "custom_action"];

        repeated StatelessRule stateless_rule = 2 [json_name = "stateless_rule"];

        message CustomAction {
          string action_name = 1 [json_name = "action_name"];

          ActionDefinition action_definition = 2 [json_name = "action_definition"];

          message ActionDefinition {
            PublishMetricAction publish_metric_action = 1 [json_name = "publish_metric_action"];

            message PublishMetricAction {
              repeated Dimension dimension = 1;

              message Dimension {
                string value = 1;
              }
            }
          }
        }

        message StatelessRule {
          int64 priority = 1;

          RuleDefinition rule_definition = 2 [json_name = "rule_definition"];

          message RuleDefinition {
            repeated string actions = 1;

            MatchAttributes match_attributes = 2 [json_name = "match_attributes"];

            message MatchAttributes {
              repeated int64 protocols = 1;

              repeated Destination destination = 2;

              repeated DestinationPort destination_port = 3 [json_name = "destination_port"];

              repeated Source source = 4;

              repeated SourcePort source_port = 5 [json_name = "source_port"];

              repeated TcpFlag tcp_flag = 6 [json_name = "tcp_flag"];

              message Destination {
                string address_definition = 1 [json_name = "address_definition"];
              }

              message DestinationPort {
                int64 from_port = 1 [json_name = "from_port"];

                int64 to_port = 2 [json_name = "to_port"];
              }

              message Source {
                string address_definition = 1 [json_name = "address_definition"];
              }

              message SourcePort {
                int64 from_port = 1 [json_name = "from_port"];

                int64 to_port = 2 [json_name = "to_port"];
              }

              message TcpFlag {
                repeated string flags = 1;

                repeated string masks = 2;
              }
            }
          }
        }
      }
    }

    message StatefulRuleOptions {
      string rule_order = 1 [json_name = "rule_order"];
    }
  }
}

//AwsOpsworksApplication version is 0
message AwsOpsworksApplication {
  string auto_bundle_on_deploy = 1 [json_name = "auto_bundle_on_deploy"];

  string aws_flow_ruby_settings = 2 [json_name = "aws_flow_ruby_settings"];

  string data_source_arn = 3 [json_name = "data_source_arn"];

  string data_source_database_name = 4 [json_name = "data_source_database_name"];

  string data_source_type = 5 [json_name = "data_source_type"];

  string description = 6;

  string document_root = 7 [json_name = "document_root"];

  repeated string domains = 8;

  bool enable_ssl = 9 [json_name = "enable_ssl"];

  string id = 10;

  string name = 11;

  string rails_env = 12 [json_name = "rails_env"];

  string short_name = 13 [json_name = "short_name"];

  string stack_id = 14 [json_name = "stack_id"];

  string type = 15;

  repeated AppSource app_source = 16 [json_name = "app_source"];

  repeated Environment environment = 17;

  repeated SslConfiguration ssl_configuration = 18 [json_name = "ssl_configuration"];

  repeated string depends_on = 19;

  int32 count = 20;

  map<string, string> for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;

  message AppSource {
    string password = 1;

    string revision = 2;

    string ssh_key = 3 [json_name = "ssh_key"];

    string type = 4;

    string url = 5;

    string username = 6;
  }

  message Environment {
    string key = 1;

    bool secure = 2;

    string value = 3;
  }

  message SslConfiguration {
    string certificate = 1;

    string chain = 2;

    string private_key = 3 [json_name = "private_key"];
  }
}

//AwsOpsworksCustomLayer version is 0
message AwsOpsworksCustomLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string short_name = 19 [json_name = "short_name"];

  string stack_id = 20 [json_name = "stack_id"];

  repeated string system_packages = 21 [json_name = "system_packages"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  bool use_ebs_optimized_instances = 24 [json_name = "use_ebs_optimized_instances"];

  repeated EbsVolume ebs_volume = 25 [json_name = "ebs_volume"];

  repeated string depends_on = 26;

  int32 count = 27;

  map<string, string> for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksGangliaLayer version is 0
message AwsOpsworksGangliaLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string password = 19;

  string stack_id = 20 [json_name = "stack_id"];

  repeated string system_packages = 21 [json_name = "system_packages"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  string url = 24;

  bool use_ebs_optimized_instances = 25 [json_name = "use_ebs_optimized_instances"];

  string username = 26;

  repeated EbsVolume ebs_volume = 27 [json_name = "ebs_volume"];

  repeated string depends_on = 28;

  int32 count = 29;

  map<string, string> for_each = 30;

  string provider = 31;

  terraform.meta.Lifecycle lifecycle = 32;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksHaproxyLayer version is 0
message AwsOpsworksHaproxyLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string healthcheck_method = 15 [json_name = "healthcheck_method"];

  string healthcheck_url = 16 [json_name = "healthcheck_url"];

  string id = 17;

  bool install_updates_on_boot = 18 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 19 [json_name = "instance_shutdown_timeout"];

  string name = 20;

  string stack_id = 21 [json_name = "stack_id"];

  bool stats_enabled = 22 [json_name = "stats_enabled"];

  string stats_password = 23 [json_name = "stats_password"];

  string stats_url = 24 [json_name = "stats_url"];

  string stats_user = 25 [json_name = "stats_user"];

  repeated string system_packages = 26 [json_name = "system_packages"];

  map<string, string> tags = 27;

  map<string, string> tags_all = 28 [json_name = "tags_all"];

  bool use_ebs_optimized_instances = 29 [json_name = "use_ebs_optimized_instances"];

  repeated EbsVolume ebs_volume = 30 [json_name = "ebs_volume"];

  repeated string depends_on = 31;

  int32 count = 32;

  map<string, string> for_each = 33;

  string provider = 34;

  terraform.meta.Lifecycle lifecycle = 35;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksInstance version is 0
message AwsOpsworksInstance {
  string agent_version = 1 [json_name = "agent_version"];

  string ami_id = 2 [json_name = "ami_id"];

  string architecture = 3;

  string auto_scaling_type = 4 [json_name = "auto_scaling_type"];

  string availability_zone = 5 [json_name = "availability_zone"];

  string created_at = 6 [json_name = "created_at"];

  bool delete_ebs = 7 [json_name = "delete_ebs"];

  bool delete_eip = 8 [json_name = "delete_eip"];

  bool ebs_optimized = 9 [json_name = "ebs_optimized"];

  string ec2_instance_id = 10 [json_name = "ec2_instance_id"];

  string ecs_cluster_arn = 11 [json_name = "ecs_cluster_arn"];

  string elastic_ip = 12 [json_name = "elastic_ip"];

  string hostname = 13;

  string id = 14;

  string infrastructure_class = 15 [json_name = "infrastructure_class"];

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  string instance_profile_arn = 17 [json_name = "instance_profile_arn"];

  string instance_type = 18 [json_name = "instance_type"];

  string last_service_error_id = 19 [json_name = "last_service_error_id"];

  repeated string layer_ids = 20 [json_name = "layer_ids"];

  string os = 21;

  string platform = 22;

  string private_dns = 23 [json_name = "private_dns"];

  string private_ip = 24 [json_name = "private_ip"];

  string public_dns = 25 [json_name = "public_dns"];

  string public_ip = 26 [json_name = "public_ip"];

  string registered_by = 27 [json_name = "registered_by"];

  string reported_agent_version = 28 [json_name = "reported_agent_version"];

  string reported_os_family = 29 [json_name = "reported_os_family"];

  string reported_os_name = 30 [json_name = "reported_os_name"];

  string reported_os_version = 31 [json_name = "reported_os_version"];

  string root_device_type = 32 [json_name = "root_device_type"];

  string root_device_volume_id = 33 [json_name = "root_device_volume_id"];

  repeated string security_group_ids = 34 [json_name = "security_group_ids"];

  string ssh_host_dsa_key_fingerprint = 35 [json_name = "ssh_host_dsa_key_fingerprint"];

  string ssh_host_rsa_key_fingerprint = 36 [json_name = "ssh_host_rsa_key_fingerprint"];

  string ssh_key_name = 37 [json_name = "ssh_key_name"];

  string stack_id = 38 [json_name = "stack_id"];

  string state = 39;

  string status = 40;

  string subnet_id = 41 [json_name = "subnet_id"];

  string tenancy = 42;

  string virtualization_type = 43 [json_name = "virtualization_type"];

  repeated EbsBlockDevice ebs_block_device = 44 [json_name = "ebs_block_device"];

  repeated EphemeralBlockDevice ephemeral_block_device = 45 [json_name = "ephemeral_block_device"];

  repeated RootBlockDevice root_block_device = 46 [json_name = "root_block_device"];

  repeated Timeouts timeouts = 47;

  repeated string depends_on = 48;

  int32 count = 49;

  map<string, string> for_each = 50;

  string provider = 51;

  terraform.meta.Lifecycle lifecycle = 52;

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    int64 iops = 3;

    string snapshot_id = 4 [json_name = "snapshot_id"];

    int64 volume_size = 5 [json_name = "volume_size"];

    string volume_type = 6 [json_name = "volume_type"];
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    string virtual_name = 2 [json_name = "virtual_name"];
  }

  message RootBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    int64 iops = 2;

    int64 volume_size = 3 [json_name = "volume_size"];

    string volume_type = 4 [json_name = "volume_type"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsOpsworksJavaAppLayer version is 0
message AwsOpsworksJavaAppLayer {
  string app_server = 1 [json_name = "app_server"];

  string app_server_version = 2 [json_name = "app_server_version"];

  string arn = 3;

  bool auto_assign_elastic_ips = 4 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 5 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 6 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 7 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 8 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 9 [json_name = "custom_instance_profile_arn"];

  string custom_json = 10 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 11 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 12 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 13 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 14 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 15 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 16 [json_name = "elastic_load_balancer"];

  string id = 17;

  bool install_updates_on_boot = 18 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 19 [json_name = "instance_shutdown_timeout"];

  string jvm_options = 20 [json_name = "jvm_options"];

  string jvm_type = 21 [json_name = "jvm_type"];

  string jvm_version = 22 [json_name = "jvm_version"];

  string name = 23;

  string stack_id = 24 [json_name = "stack_id"];

  repeated string system_packages = 25 [json_name = "system_packages"];

  map<string, string> tags = 26;

  map<string, string> tags_all = 27 [json_name = "tags_all"];

  bool use_ebs_optimized_instances = 28 [json_name = "use_ebs_optimized_instances"];

  repeated EbsVolume ebs_volume = 29 [json_name = "ebs_volume"];

  repeated string depends_on = 30;

  int32 count = 31;

  map<string, string> for_each = 32;

  string provider = 33;

  terraform.meta.Lifecycle lifecycle = 34;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksMemcachedLayer version is 0
message AwsOpsworksMemcachedLayer {
  int64 allocated_memory = 1 [json_name = "allocated_memory"];

  string arn = 2;

  bool auto_assign_elastic_ips = 3 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 4 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 5 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 6 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 7 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 8 [json_name = "custom_instance_profile_arn"];

  string custom_json = 9 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 10 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 11 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 12 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 13 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 14 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 15 [json_name = "elastic_load_balancer"];

  string id = 16;

  bool install_updates_on_boot = 17 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 18 [json_name = "instance_shutdown_timeout"];

  string name = 19;

  string stack_id = 20 [json_name = "stack_id"];

  repeated string system_packages = 21 [json_name = "system_packages"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  bool use_ebs_optimized_instances = 24 [json_name = "use_ebs_optimized_instances"];

  repeated EbsVolume ebs_volume = 25 [json_name = "ebs_volume"];

  repeated string depends_on = 26;

  int32 count = 27;

  map<string, string> for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksMysqlLayer version is 0
message AwsOpsworksMysqlLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string root_password = 19 [json_name = "root_password"];

  bool root_password_on_all_instances = 20 [json_name = "root_password_on_all_instances"];

  string stack_id = 21 [json_name = "stack_id"];

  repeated string system_packages = 22 [json_name = "system_packages"];

  map<string, string> tags = 23;

  map<string, string> tags_all = 24 [json_name = "tags_all"];

  bool use_ebs_optimized_instances = 25 [json_name = "use_ebs_optimized_instances"];

  repeated EbsVolume ebs_volume = 26 [json_name = "ebs_volume"];

  repeated string depends_on = 27;

  int32 count = 28;

  map<string, string> for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksNodejsAppLayer version is 0
message AwsOpsworksNodejsAppLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string nodejs_version = 19 [json_name = "nodejs_version"];

  string stack_id = 20 [json_name = "stack_id"];

  repeated string system_packages = 21 [json_name = "system_packages"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  bool use_ebs_optimized_instances = 24 [json_name = "use_ebs_optimized_instances"];

  repeated EbsVolume ebs_volume = 25 [json_name = "ebs_volume"];

  repeated string depends_on = 26;

  int32 count = 27;

  map<string, string> for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksPermission version is 0
message AwsOpsworksPermission {
  bool allow_ssh = 1 [json_name = "allow_ssh"];

  bool allow_sudo = 2 [json_name = "allow_sudo"];

  string id = 3;

  string level = 4;

  string stack_id = 5 [json_name = "stack_id"];

  string user_arn = 6 [json_name = "user_arn"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsOpsworksPhpAppLayer version is 0
message AwsOpsworksPhpAppLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string stack_id = 19 [json_name = "stack_id"];

  repeated string system_packages = 20 [json_name = "system_packages"];

  map<string, string> tags = 21;

  map<string, string> tags_all = 22 [json_name = "tags_all"];

  bool use_ebs_optimized_instances = 23 [json_name = "use_ebs_optimized_instances"];

  repeated EbsVolume ebs_volume = 24 [json_name = "ebs_volume"];

  repeated string depends_on = 25;

  int32 count = 26;

  map<string, string> for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksRailsAppLayer version is 0
message AwsOpsworksRailsAppLayer {
  string app_server = 1 [json_name = "app_server"];

  string arn = 2;

  bool auto_assign_elastic_ips = 3 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 4 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 5 [json_name = "auto_healing"];

  string bundler_version = 6 [json_name = "bundler_version"];

  repeated string custom_configure_recipes = 7 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 8 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 9 [json_name = "custom_instance_profile_arn"];

  string custom_json = 10 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 11 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 12 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 13 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 14 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 15 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 16 [json_name = "elastic_load_balancer"];

  string id = 17;

  bool install_updates_on_boot = 18 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 19 [json_name = "instance_shutdown_timeout"];

  bool manage_bundler = 20 [json_name = "manage_bundler"];

  string name = 21;

  string passenger_version = 22 [json_name = "passenger_version"];

  string ruby_version = 23 [json_name = "ruby_version"];

  string rubygems_version = 24 [json_name = "rubygems_version"];

  string stack_id = 25 [json_name = "stack_id"];

  repeated string system_packages = 26 [json_name = "system_packages"];

  map<string, string> tags = 27;

  map<string, string> tags_all = 28 [json_name = "tags_all"];

  bool use_ebs_optimized_instances = 29 [json_name = "use_ebs_optimized_instances"];

  repeated EbsVolume ebs_volume = 30 [json_name = "ebs_volume"];

  repeated string depends_on = 31;

  int32 count = 32;

  map<string, string> for_each = 33;

  string provider = 34;

  terraform.meta.Lifecycle lifecycle = 35;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksRdsDbInstance version is 0
message AwsOpsworksRdsDbInstance {
  string db_password = 1 [json_name = "db_password"];

  string db_user = 2 [json_name = "db_user"];

  string id = 3;

  string rds_db_instance_arn = 4 [json_name = "rds_db_instance_arn"];

  string stack_id = 5 [json_name = "stack_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsOpsworksStack version is 0
message AwsOpsworksStack {
  string agent_version = 1 [json_name = "agent_version"];

  string arn = 2;

  string berkshelf_version = 3 [json_name = "berkshelf_version"];

  string color = 4;

  string configuration_manager_name = 5 [json_name = "configuration_manager_name"];

  string configuration_manager_version = 6 [json_name = "configuration_manager_version"];

  string custom_json = 7 [json_name = "custom_json"];

  string default_availability_zone = 8 [json_name = "default_availability_zone"];

  string default_instance_profile_arn = 9 [json_name = "default_instance_profile_arn"];

  string default_os = 10 [json_name = "default_os"];

  string default_root_device_type = 11 [json_name = "default_root_device_type"];

  string default_ssh_key_name = 12 [json_name = "default_ssh_key_name"];

  string default_subnet_id = 13 [json_name = "default_subnet_id"];

  string hostname_theme = 14 [json_name = "hostname_theme"];

  string id = 15;

  bool manage_berkshelf = 16 [json_name = "manage_berkshelf"];

  string name = 17;

  string region = 18;

  string service_role_arn = 19 [json_name = "service_role_arn"];

  string stack_endpoint = 20 [json_name = "stack_endpoint"];

  map<string, string> tags = 21;

  map<string, string> tags_all = 22 [json_name = "tags_all"];

  bool use_custom_cookbooks = 23 [json_name = "use_custom_cookbooks"];

  bool use_opsworks_security_groups = 24 [json_name = "use_opsworks_security_groups"];

  string vpc_id = 25 [json_name = "vpc_id"];

  repeated CustomCookbooksSource custom_cookbooks_source = 26 [json_name = "custom_cookbooks_source"];

  repeated string depends_on = 27;

  int32 count = 28;

  map<string, string> for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message CustomCookbooksSource {
    string password = 1;

    string revision = 2;

    string ssh_key = 3 [json_name = "ssh_key"];

    string type = 4;

    string url = 5;

    string username = 6;
  }
}

//AwsOpsworksStaticWebLayer version is 0
message AwsOpsworksStaticWebLayer {
  string arn = 1;

  bool auto_assign_elastic_ips = 2 [json_name = "auto_assign_elastic_ips"];

  bool auto_assign_public_ips = 3 [json_name = "auto_assign_public_ips"];

  bool auto_healing = 4 [json_name = "auto_healing"];

  repeated string custom_configure_recipes = 5 [json_name = "custom_configure_recipes"];

  repeated string custom_deploy_recipes = 6 [json_name = "custom_deploy_recipes"];

  string custom_instance_profile_arn = 7 [json_name = "custom_instance_profile_arn"];

  string custom_json = 8 [json_name = "custom_json"];

  repeated string custom_security_group_ids = 9 [json_name = "custom_security_group_ids"];

  repeated string custom_setup_recipes = 10 [json_name = "custom_setup_recipes"];

  repeated string custom_shutdown_recipes = 11 [json_name = "custom_shutdown_recipes"];

  repeated string custom_undeploy_recipes = 12 [json_name = "custom_undeploy_recipes"];

  bool drain_elb_on_shutdown = 13 [json_name = "drain_elb_on_shutdown"];

  string elastic_load_balancer = 14 [json_name = "elastic_load_balancer"];

  string id = 15;

  bool install_updates_on_boot = 16 [json_name = "install_updates_on_boot"];

  int64 instance_shutdown_timeout = 17 [json_name = "instance_shutdown_timeout"];

  string name = 18;

  string stack_id = 19 [json_name = "stack_id"];

  repeated string system_packages = 20 [json_name = "system_packages"];

  map<string, string> tags = 21;

  map<string, string> tags_all = 22 [json_name = "tags_all"];

  bool use_ebs_optimized_instances = 23 [json_name = "use_ebs_optimized_instances"];

  repeated EbsVolume ebs_volume = 24 [json_name = "ebs_volume"];

  repeated string depends_on = 25;

  int32 count = 26;

  map<string, string> for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message EbsVolume {
    bool encrypted = 1;

    int64 iops = 2;

    string mount_point = 3 [json_name = "mount_point"];

    int64 number_of_disks = 4 [json_name = "number_of_disks"];

    string raid_level = 5 [json_name = "raid_level"];

    int64 size = 6;

    string type = 7;
  }
}

//AwsOpsworksUserProfile version is 0
message AwsOpsworksUserProfile {
  bool allow_self_management = 1 [json_name = "allow_self_management"];

  string id = 2;

  string ssh_public_key = 3 [json_name = "ssh_public_key"];

  string ssh_username = 4 [json_name = "ssh_username"];

  string user_arn = 5 [json_name = "user_arn"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsOrganizationsAccount version is 0
message AwsOrganizationsAccount {
  string arn = 1;

  string email = 2;

  string iam_user_access_to_billing = 3 [json_name = "iam_user_access_to_billing"];

  string id = 4;

  string joined_method = 5 [json_name = "joined_method"];

  string joined_timestamp = 6 [json_name = "joined_timestamp"];

  string name = 7;

  string parent_id = 8 [json_name = "parent_id"];

  string role_name = 9 [json_name = "role_name"];

  string status = 10;

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsOrganizationsDelegatedAdministrator version is 0
message AwsOrganizationsDelegatedAdministrator {
  string account_id = 1 [json_name = "account_id"];

  string arn = 2;

  string delegation_enabled_date = 3 [json_name = "delegation_enabled_date"];

  string email = 4;

  string id = 5;

  string joined_method = 6 [json_name = "joined_method"];

  string joined_timestamp = 7 [json_name = "joined_timestamp"];

  string name = 8;

  string service_principal = 9 [json_name = "service_principal"];

  string status = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsOrganizationsOrganization version is 0
message AwsOrganizationsOrganization {
  repeated Accounts accounts = 1;

  string arn = 2;

  repeated string aws_service_access_principals = 3 [json_name = "aws_service_access_principals"];

  repeated string enabled_policy_types = 4 [json_name = "enabled_policy_types"];

  string feature_set = 5 [json_name = "feature_set"];

  string id = 6;

  string master_account_arn = 7 [json_name = "master_account_arn"];

  string master_account_email = 8 [json_name = "master_account_email"];

  string master_account_id = 9 [json_name = "master_account_id"];

  repeated NonMasterAccounts non_master_accounts = 10 [json_name = "non_master_accounts"];

  repeated Roots roots = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Accounts {
    //arn: string
    string arn = 1;

    //email: string
    string email = 2;

    //id: string
    string id = 3;

    //name: string
    string name = 4;

    //status: string
    string status = 5;
  }

  message NonMasterAccounts {
    //arn: string
    string arn = 1;

    //email: string
    string email = 2;

    //id: string
    string id = 3;

    //name: string
    string name = 4;

    //status: string
    string status = 5;
  }

  message Roots {
    //arn: string
    string arn = 1;

    //id: string
    string id = 2;

    //name: string
    string name = 3;

    //policy_types: list of object
    repeated PolicyTypes policy_types = 4 [json_name = "policy_types"];

    message PolicyTypes {
      //status: string
      string status = 1;

      //type: string
      string type = 2;
    }
  }
}

//AwsOrganizationsOrganizationalUnit version is 0
message AwsOrganizationsOrganizationalUnit {
  repeated Accounts accounts = 1;

  string arn = 2;

  string id = 3;

  string name = 4;

  string parent_id = 5 [json_name = "parent_id"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Accounts {
    //arn: string
    string arn = 1;

    //email: string
    string email = 2;

    //id: string
    string id = 3;

    //name: string
    string name = 4;
  }
}

//AwsOrganizationsPolicy version is 0
message AwsOrganizationsPolicy {
  string arn = 1;

  string content = 2;

  string description = 3;

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string type = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsOrganizationsPolicyAttachment version is 0
message AwsOrganizationsPolicyAttachment {
  string id = 1;

  string policy_id = 2 [json_name = "policy_id"];

  string target_id = 3 [json_name = "target_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsPinpointAdmChannel version is 0
message AwsPinpointAdmChannel {
  string application_id = 1 [json_name = "application_id"];

  string client_id = 2 [json_name = "client_id"];

  string client_secret = 3 [json_name = "client_secret"];

  bool enabled = 4;

  string id = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsPinpointApnsChannel version is 0
message AwsPinpointApnsChannel {
  string application_id = 1 [json_name = "application_id"];

  string bundle_id = 2 [json_name = "bundle_id"];

  string certificate = 3;

  string default_authentication_method = 4 [json_name = "default_authentication_method"];

  bool enabled = 5;

  string id = 6;

  string private_key = 7 [json_name = "private_key"];

  string team_id = 8 [json_name = "team_id"];

  string token_key = 9 [json_name = "token_key"];

  string token_key_id = 10 [json_name = "token_key_id"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsPinpointApnsSandboxChannel version is 0
message AwsPinpointApnsSandboxChannel {
  string application_id = 1 [json_name = "application_id"];

  string bundle_id = 2 [json_name = "bundle_id"];

  string certificate = 3;

  string default_authentication_method = 4 [json_name = "default_authentication_method"];

  bool enabled = 5;

  string id = 6;

  string private_key = 7 [json_name = "private_key"];

  string team_id = 8 [json_name = "team_id"];

  string token_key = 9 [json_name = "token_key"];

  string token_key_id = 10 [json_name = "token_key_id"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsPinpointApnsVoipChannel version is 0
message AwsPinpointApnsVoipChannel {
  string application_id = 1 [json_name = "application_id"];

  string bundle_id = 2 [json_name = "bundle_id"];

  string certificate = 3;

  string default_authentication_method = 4 [json_name = "default_authentication_method"];

  bool enabled = 5;

  string id = 6;

  string private_key = 7 [json_name = "private_key"];

  string team_id = 8 [json_name = "team_id"];

  string token_key = 9 [json_name = "token_key"];

  string token_key_id = 10 [json_name = "token_key_id"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsPinpointApnsVoipSandboxChannel version is 0
message AwsPinpointApnsVoipSandboxChannel {
  string application_id = 1 [json_name = "application_id"];

  string bundle_id = 2 [json_name = "bundle_id"];

  string certificate = 3;

  string default_authentication_method = 4 [json_name = "default_authentication_method"];

  bool enabled = 5;

  string id = 6;

  string private_key = 7 [json_name = "private_key"];

  string team_id = 8 [json_name = "team_id"];

  string token_key = 9 [json_name = "token_key"];

  string token_key_id = 10 [json_name = "token_key_id"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsPinpointApp version is 0
message AwsPinpointApp {
  string application_id = 1 [json_name = "application_id"];

  string arn = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  CampaignHook campaign_hook = 8 [json_name = "campaign_hook"];

  Limits limits = 9;

  QuietTime quiet_time = 10 [json_name = "quiet_time"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message CampaignHook {
    string lambda_function_name = 1 [json_name = "lambda_function_name"];

    string mode = 2;

    string web_url = 3 [json_name = "web_url"];
  }

  message Limits {
    int64 daily = 1;

    int64 maximum_duration = 2 [json_name = "maximum_duration"];

    int64 messages_per_second = 3 [json_name = "messages_per_second"];

    int64 total = 4;
  }

  message QuietTime {
    string end = 1;

    string start = 2;
  }
}

//AwsPinpointBaiduChannel version is 0
message AwsPinpointBaiduChannel {
  string api_key = 1 [json_name = "api_key"];

  string application_id = 2 [json_name = "application_id"];

  bool enabled = 3;

  string id = 4;

  string secret_key = 5 [json_name = "secret_key"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsPinpointEmailChannel version is 0
message AwsPinpointEmailChannel {
  string application_id = 1 [json_name = "application_id"];

  string configuration_set = 2 [json_name = "configuration_set"];

  bool enabled = 3;

  string from_address = 4 [json_name = "from_address"];

  string id = 5;

  string identity = 6;

  int64 messages_per_second = 7 [json_name = "messages_per_second"];

  string role_arn = 8 [json_name = "role_arn"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsPinpointEventStream version is 0
message AwsPinpointEventStream {
  string application_id = 1 [json_name = "application_id"];

  string destination_stream_arn = 2 [json_name = "destination_stream_arn"];

  string id = 3;

  string role_arn = 4 [json_name = "role_arn"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsPinpointGcmChannel version is 0
message AwsPinpointGcmChannel {
  string api_key = 1 [json_name = "api_key"];

  string application_id = 2 [json_name = "application_id"];

  bool enabled = 3;

  string id = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsPinpointSmsChannel version is 0
message AwsPinpointSmsChannel {
  string application_id = 1 [json_name = "application_id"];

  bool enabled = 2;

  string id = 3;

  int64 promotional_messages_per_second = 4 [json_name = "promotional_messages_per_second"];

  string sender_id = 5 [json_name = "sender_id"];

  string short_code = 6 [json_name = "short_code"];

  int64 transactional_messages_per_second = 7 [json_name = "transactional_messages_per_second"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsPlacementGroup version is 0
message AwsPlacementGroup {
  string arn = 1;

  string id = 2;

  string name = 3;

  int64 partition_count = 4 [json_name = "partition_count"];

  string placement_group_id = 5 [json_name = "placement_group_id"];

  string strategy = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsPrometheusAlertManagerDefinition version is 0
message AwsPrometheusAlertManagerDefinition {
  string definition = 1;

  string id = 2;

  string workspace_id = 3 [json_name = "workspace_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsPrometheusRuleGroupNamespace version is 0
message AwsPrometheusRuleGroupNamespace {
  string data = 1;

  string id = 2;

  string name = 3;

  string workspace_id = 4 [json_name = "workspace_id"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsPrometheusWorkspace version is 0
message AwsPrometheusWorkspace {
  string alias = 1;

  string arn = 2;

  string id = 3;

  string prometheus_endpoint = 4 [json_name = "prometheus_endpoint"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsProxyProtocolPolicy version is 0
message AwsProxyProtocolPolicy {
  string id = 1;

  repeated string instance_ports = 2 [json_name = "instance_ports"];

  string load_balancer = 3 [json_name = "load_balancer"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsQldbLedger version is 0
message AwsQldbLedger {
  string arn = 1;

  bool deletion_protection = 2 [json_name = "deletion_protection"];

  string id = 3;

  string name = 4;

  string permissions_mode = 5 [json_name = "permissions_mode"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsQuicksightDataSource version is 0
message AwsQuicksightDataSource {
  string arn = 1;

  string aws_account_id = 2 [json_name = "aws_account_id"];

  string data_source_id = 3 [json_name = "data_source_id"];

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string type = 8;

  Credentials credentials = 9;

  Parameters parameters = 10;

  repeated Permission permission = 11;

  SslProperties ssl_properties = 12 [json_name = "ssl_properties"];

  VpcConnectionProperties vpc_connection_properties = 13 [json_name = "vpc_connection_properties"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Credentials {
    string copy_source_arn = 1 [json_name = "copy_source_arn"];

    CredentialPair credential_pair = 2 [json_name = "credential_pair"];

    message CredentialPair {
      string password = 1;

      string username = 2;
    }
  }

  message Parameters {
    AmazonElasticsearch amazon_elasticsearch = 1 [json_name = "amazon_elasticsearch"];

    Athena athena = 2;

    Aurora aurora = 3;

    AuroraPostgresql aurora_postgresql = 4 [json_name = "aurora_postgresql"];

    AwsIotAnalytics aws_iot_analytics = 5 [json_name = "aws_iot_analytics"];

    Jira jira = 6;

    MariaDb maria_db = 7 [json_name = "maria_db"];

    Mysql mysql = 8;

    Oracle oracle = 9;

    Postgresql postgresql = 10;

    Presto presto = 11;

    Rds rds = 12;

    Redshift redshift = 13;

    S3 s3 = 14;

    ServiceNow service_now = 15 [json_name = "service_now"];

    Snowflake snowflake = 16;

    Spark spark = 17;

    SqlServer sql_server = 18 [json_name = "sql_server"];

    Teradata teradata = 19;

    Twitter twitter = 20;

    message AmazonElasticsearch {
      string domain = 1;
    }

    message Athena {
      string work_group = 1 [json_name = "work_group"];
    }

    message Aurora {
      string database = 1;

      string host = 2;

      int64 port = 3;
    }

    message AuroraPostgresql {
      string database = 1;

      string host = 2;

      int64 port = 3;
    }

    message AwsIotAnalytics {
      string data_set_name = 1 [json_name = "data_set_name"];
    }

    message Jira {
      string site_base_url = 1 [json_name = "site_base_url"];
    }

    message MariaDb {
      string database = 1;

      string host = 2;

      int64 port = 3;
    }

    message Mysql {
      string database = 1;

      string host = 2;

      int64 port = 3;
    }

    message Oracle {
      string database = 1;

      string host = 2;

      int64 port = 3;
    }

    message Postgresql {
      string database = 1;

      string host = 2;

      int64 port = 3;
    }

    message Presto {
      string catalog = 1;

      string host = 2;

      int64 port = 3;
    }

    message Rds {
      string database = 1;

      string instance_id = 2 [json_name = "instance_id"];
    }

    message Redshift {
      string cluster_id = 1 [json_name = "cluster_id"];

      string database = 2;

      string host = 3;

      int64 port = 4;
    }

    message S3 {
      ManifestFileLocation manifest_file_location = 1 [json_name = "manifest_file_location"];

      message ManifestFileLocation {
        string bucket = 1;

        string key = 2;
      }
    }

    message ServiceNow {
      string site_base_url = 1 [json_name = "site_base_url"];
    }

    message Snowflake {
      string database = 1;

      string host = 2;

      string warehouse = 3;
    }

    message Spark {
      string host = 1;

      int64 port = 2;
    }

    message SqlServer {
      string database = 1;

      string host = 2;

      int64 port = 3;
    }

    message Teradata {
      string database = 1;

      string host = 2;

      int64 port = 3;
    }

    message Twitter {
      int64 max_rows = 1 [json_name = "max_rows"];

      string query = 2;
    }
  }

  message Permission {
    repeated string actions = 1;

    string principal = 2;
  }

  message SslProperties {
    bool disable_ssl = 1 [json_name = "disable_ssl"];
  }

  message VpcConnectionProperties {
    string vpc_connection_arn = 1 [json_name = "vpc_connection_arn"];
  }
}

//AwsQuicksightGroup version is 0
message AwsQuicksightGroup {
  string arn = 1;

  string aws_account_id = 2 [json_name = "aws_account_id"];

  string description = 3;

  string group_name = 4 [json_name = "group_name"];

  string id = 5;

  string namespace = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsQuicksightGroupMembership version is 0
message AwsQuicksightGroupMembership {
  string arn = 1;

  string aws_account_id = 2 [json_name = "aws_account_id"];

  string group_name = 3 [json_name = "group_name"];

  string id = 4;

  string member_name = 5 [json_name = "member_name"];

  string namespace = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsQuicksightUser version is 0
message AwsQuicksightUser {
  string arn = 1;

  string aws_account_id = 2 [json_name = "aws_account_id"];

  string email = 3;

  string iam_arn = 4 [json_name = "iam_arn"];

  string id = 5;

  string identity_type = 6 [json_name = "identity_type"];

  string namespace = 7;

  string session_name = 8 [json_name = "session_name"];

  string user_name = 9 [json_name = "user_name"];

  string user_role = 10 [json_name = "user_role"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsRamPrincipalAssociation version is 0
message AwsRamPrincipalAssociation {
  string id = 1;

  string principal = 2;

  string resource_share_arn = 3 [json_name = "resource_share_arn"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsRamResourceAssociation version is 0
message AwsRamResourceAssociation {
  string id = 1;

  string resource_arn = 2 [json_name = "resource_arn"];

  string resource_share_arn = 3 [json_name = "resource_share_arn"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsRamResourceShare version is 0
message AwsRamResourceShare {
  bool allow_external_principals = 1 [json_name = "allow_external_principals"];

  string arn = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated Timeouts timeouts = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsRamResourceShareAccepter version is 0
message AwsRamResourceShareAccepter {
  string id = 1;

  string invitation_arn = 2 [json_name = "invitation_arn"];

  string receiver_account_id = 3 [json_name = "receiver_account_id"];

  repeated string resources = 4;

  string sender_account_id = 5 [json_name = "sender_account_id"];

  string share_arn = 6 [json_name = "share_arn"];

  string share_id = 7 [json_name = "share_id"];

  string share_name = 8 [json_name = "share_name"];

  string status = 9;

  repeated Timeouts timeouts = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsRdsCluster version is 0
message AwsRdsCluster {
  bool allow_major_version_upgrade = 1 [json_name = "allow_major_version_upgrade"];

  bool apply_immediately = 2 [json_name = "apply_immediately"];

  string arn = 3;

  repeated string availability_zones = 4 [json_name = "availability_zones"];

  int64 backtrack_window = 5 [json_name = "backtrack_window"];

  int64 backup_retention_period = 6 [json_name = "backup_retention_period"];

  string cluster_identifier = 7 [json_name = "cluster_identifier"];

  string cluster_identifier_prefix = 8 [json_name = "cluster_identifier_prefix"];

  repeated string cluster_members = 9 [json_name = "cluster_members"];

  string cluster_resource_id = 10 [json_name = "cluster_resource_id"];

  bool copy_tags_to_snapshot = 11 [json_name = "copy_tags_to_snapshot"];

  string database_name = 12 [json_name = "database_name"];

  string db_cluster_parameter_group_name = 13 [json_name = "db_cluster_parameter_group_name"];

  string db_instance_parameter_group_name = 14 [json_name = "db_instance_parameter_group_name"];

  string db_subnet_group_name = 15 [json_name = "db_subnet_group_name"];

  bool deletion_protection = 16 [json_name = "deletion_protection"];

  bool enable_global_write_forwarding = 17 [json_name = "enable_global_write_forwarding"];

  bool enable_http_endpoint = 18 [json_name = "enable_http_endpoint"];

  repeated string enabled_cloudwatch_logs_exports = 19 [json_name = "enabled_cloudwatch_logs_exports"];

  string endpoint = 20;

  string engine = 21;

  string engine_mode = 22 [json_name = "engine_mode"];

  string engine_version = 23 [json_name = "engine_version"];

  string engine_version_actual = 24 [json_name = "engine_version_actual"];

  string final_snapshot_identifier = 25 [json_name = "final_snapshot_identifier"];

  string global_cluster_identifier = 26 [json_name = "global_cluster_identifier"];

  string hosted_zone_id = 27 [json_name = "hosted_zone_id"];

  bool iam_database_authentication_enabled = 28 [json_name = "iam_database_authentication_enabled"];

  repeated string iam_roles = 29 [json_name = "iam_roles"];

  string id = 30;

  string kms_key_id = 31 [json_name = "kms_key_id"];

  string master_password = 32 [json_name = "master_password"];

  string master_username = 33 [json_name = "master_username"];

  int64 port = 34;

  string preferred_backup_window = 35 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 36 [json_name = "preferred_maintenance_window"];

  string reader_endpoint = 37 [json_name = "reader_endpoint"];

  string replication_source_identifier = 38 [json_name = "replication_source_identifier"];

  bool skip_final_snapshot = 39 [json_name = "skip_final_snapshot"];

  string snapshot_identifier = 40 [json_name = "snapshot_identifier"];

  string source_region = 41 [json_name = "source_region"];

  bool storage_encrypted = 42 [json_name = "storage_encrypted"];

  map<string, string> tags = 43;

  map<string, string> tags_all = 44 [json_name = "tags_all"];

  repeated string vpc_security_group_ids = 45 [json_name = "vpc_security_group_ids"];

  RestoreToPointInTime restore_to_point_in_time = 46 [json_name = "restore_to_point_in_time"];

  S3Import s3_import = 47 [json_name = "s3_import"];

  ScalingConfiguration scaling_configuration = 48 [json_name = "scaling_configuration"];

  repeated Timeouts timeouts = 49;

  repeated string depends_on = 50;

  int32 count = 51;

  map<string, string> for_each = 52;

  string provider = 53;

  terraform.meta.Lifecycle lifecycle = 54;

  message RestoreToPointInTime {
    string restore_to_time = 1 [json_name = "restore_to_time"];

    string restore_type = 2 [json_name = "restore_type"];

    string source_cluster_identifier = 3 [json_name = "source_cluster_identifier"];

    bool use_latest_restorable_time = 4 [json_name = "use_latest_restorable_time"];
  }

  message S3Import {
    string bucket_name = 1 [json_name = "bucket_name"];

    string bucket_prefix = 2 [json_name = "bucket_prefix"];

    string ingestion_role = 3 [json_name = "ingestion_role"];

    string source_engine = 4 [json_name = "source_engine"];

    string source_engine_version = 5 [json_name = "source_engine_version"];
  }

  message ScalingConfiguration {
    bool auto_pause = 1 [json_name = "auto_pause"];

    int64 max_capacity = 2 [json_name = "max_capacity"];

    int64 min_capacity = 3 [json_name = "min_capacity"];

    int64 seconds_until_auto_pause = 4 [json_name = "seconds_until_auto_pause"];

    string timeout_action = 5 [json_name = "timeout_action"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRdsClusterEndpoint version is 0
message AwsRdsClusterEndpoint {
  string arn = 1;

  string cluster_endpoint_identifier = 2 [json_name = "cluster_endpoint_identifier"];

  string cluster_identifier = 3 [json_name = "cluster_identifier"];

  string custom_endpoint_type = 4 [json_name = "custom_endpoint_type"];

  string endpoint = 5;

  repeated string excluded_members = 6 [json_name = "excluded_members"];

  string id = 7;

  repeated string static_members = 8 [json_name = "static_members"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsRdsClusterInstance version is 0
message AwsRdsClusterInstance {
  bool apply_immediately = 1 [json_name = "apply_immediately"];

  string arn = 2;

  bool auto_minor_version_upgrade = 3 [json_name = "auto_minor_version_upgrade"];

  string availability_zone = 4 [json_name = "availability_zone"];

  string ca_cert_identifier = 5 [json_name = "ca_cert_identifier"];

  string cluster_identifier = 6 [json_name = "cluster_identifier"];

  bool copy_tags_to_snapshot = 7 [json_name = "copy_tags_to_snapshot"];

  string db_parameter_group_name = 8 [json_name = "db_parameter_group_name"];

  string db_subnet_group_name = 9 [json_name = "db_subnet_group_name"];

  string dbi_resource_id = 10 [json_name = "dbi_resource_id"];

  string endpoint = 11;

  string engine = 12;

  string engine_version = 13 [json_name = "engine_version"];

  string engine_version_actual = 14 [json_name = "engine_version_actual"];

  string id = 15;

  string identifier = 16;

  string identifier_prefix = 17 [json_name = "identifier_prefix"];

  string instance_class = 18 [json_name = "instance_class"];

  string kms_key_id = 19 [json_name = "kms_key_id"];

  int64 monitoring_interval = 20 [json_name = "monitoring_interval"];

  string monitoring_role_arn = 21 [json_name = "monitoring_role_arn"];

  bool performance_insights_enabled = 22 [json_name = "performance_insights_enabled"];

  string performance_insights_kms_key_id = 23 [json_name = "performance_insights_kms_key_id"];

  int64 performance_insights_retention_period = 24 [json_name = "performance_insights_retention_period"];

  int64 port = 25;

  string preferred_backup_window = 26 [json_name = "preferred_backup_window"];

  string preferred_maintenance_window = 27 [json_name = "preferred_maintenance_window"];

  int64 promotion_tier = 28 [json_name = "promotion_tier"];

  bool publicly_accessible = 29 [json_name = "publicly_accessible"];

  bool storage_encrypted = 30 [json_name = "storage_encrypted"];

  map<string, string> tags = 31;

  map<string, string> tags_all = 32 [json_name = "tags_all"];

  bool writer = 33;

  repeated Timeouts timeouts = 34;

  repeated string depends_on = 35;

  int32 count = 36;

  map<string, string> for_each = 37;

  string provider = 38;

  terraform.meta.Lifecycle lifecycle = 39;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRdsClusterParameterGroup version is 0
message AwsRdsClusterParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  string name_prefix = 6 [json_name = "name_prefix"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated Parameter parameter = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Parameter {
    string apply_method = 1 [json_name = "apply_method"];

    string name = 2;

    string value = 3;
  }
}

//AwsRdsClusterRoleAssociation version is 0
message AwsRdsClusterRoleAssociation {
  string db_cluster_identifier = 1 [json_name = "db_cluster_identifier"];

  string feature_name = 2 [json_name = "feature_name"];

  string id = 3;

  string role_arn = 4 [json_name = "role_arn"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsRdsGlobalCluster version is 0
message AwsRdsGlobalCluster {
  string arn = 1;

  string database_name = 2 [json_name = "database_name"];

  bool deletion_protection = 3 [json_name = "deletion_protection"];

  string engine = 4;

  string engine_version = 5 [json_name = "engine_version"];

  bool force_destroy = 6 [json_name = "force_destroy"];

  string global_cluster_identifier = 7 [json_name = "global_cluster_identifier"];

  repeated GlobalClusterMembers global_cluster_members = 8 [json_name = "global_cluster_members"];

  string global_cluster_resource_id = 9 [json_name = "global_cluster_resource_id"];

  string id = 10;

  string source_db_cluster_identifier = 11 [json_name = "source_db_cluster_identifier"];

  bool storage_encrypted = 12 [json_name = "storage_encrypted"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message GlobalClusterMembers {
    //db_cluster_arn: string
    string db_cluster_arn = 1 [json_name = "db_cluster_arn"];

    //is_writer: bool
    bool is_writer = 2 [json_name = "is_writer"];
  }
}

//AwsRedshiftCluster version is 0
message AwsRedshiftCluster {
  bool allow_version_upgrade = 1 [json_name = "allow_version_upgrade"];

  string arn = 2;

  int64 automated_snapshot_retention_period = 3 [json_name = "automated_snapshot_retention_period"];

  string availability_zone = 4 [json_name = "availability_zone"];

  string cluster_identifier = 5 [json_name = "cluster_identifier"];

  repeated ClusterNodes cluster_nodes = 6 [json_name = "cluster_nodes"];

  string cluster_parameter_group_name = 7 [json_name = "cluster_parameter_group_name"];

  string cluster_public_key = 8 [json_name = "cluster_public_key"];

  string cluster_revision_number = 9 [json_name = "cluster_revision_number"];

  repeated string cluster_security_groups = 10 [json_name = "cluster_security_groups"];

  string cluster_subnet_group_name = 11 [json_name = "cluster_subnet_group_name"];

  string cluster_type = 12 [json_name = "cluster_type"];

  string cluster_version = 13 [json_name = "cluster_version"];

  string database_name = 14 [json_name = "database_name"];

  string dns_name = 15 [json_name = "dns_name"];

  string elastic_ip = 16 [json_name = "elastic_ip"];

  bool encrypted = 17;

  string endpoint = 18;

  bool enhanced_vpc_routing = 19 [json_name = "enhanced_vpc_routing"];

  string final_snapshot_identifier = 20 [json_name = "final_snapshot_identifier"];

  repeated string iam_roles = 21 [json_name = "iam_roles"];

  string id = 22;

  string kms_key_id = 23 [json_name = "kms_key_id"];

  string master_password = 24 [json_name = "master_password"];

  string master_username = 25 [json_name = "master_username"];

  string node_type = 26 [json_name = "node_type"];

  int64 number_of_nodes = 27 [json_name = "number_of_nodes"];

  string owner_account = 28 [json_name = "owner_account"];

  int64 port = 29;

  string preferred_maintenance_window = 30 [json_name = "preferred_maintenance_window"];

  bool publicly_accessible = 31 [json_name = "publicly_accessible"];

  bool skip_final_snapshot = 32 [json_name = "skip_final_snapshot"];

  string snapshot_cluster_identifier = 33 [json_name = "snapshot_cluster_identifier"];

  string snapshot_identifier = 34 [json_name = "snapshot_identifier"];

  map<string, string> tags = 35;

  map<string, string> tags_all = 36 [json_name = "tags_all"];

  repeated string vpc_security_group_ids = 37 [json_name = "vpc_security_group_ids"];

  Logging logging = 38;

  SnapshotCopy snapshot_copy = 39 [json_name = "snapshot_copy"];

  repeated Timeouts timeouts = 40;

  repeated string depends_on = 41;

  int32 count = 42;

  map<string, string> for_each = 43;

  string provider = 44;

  terraform.meta.Lifecycle lifecycle = 45;

  message ClusterNodes {
    //node_role: string
    string node_role = 1 [json_name = "node_role"];

    //private_ip_address: string
    string private_ip_address = 2 [json_name = "private_ip_address"];

    //public_ip_address: string
    string public_ip_address = 3 [json_name = "public_ip_address"];
  }

  message Logging {
    string bucket_name = 1 [json_name = "bucket_name"];

    bool enable = 2;

    string s3_key_prefix = 3 [json_name = "s3_key_prefix"];
  }

  message SnapshotCopy {
    string destination_region = 1 [json_name = "destination_region"];

    string grant_name = 2 [json_name = "grant_name"];

    int64 retention_period = 3 [json_name = "retention_period"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRedshiftEventSubscription version is 0
message AwsRedshiftEventSubscription {
  string arn = 1;

  string customer_aws_id = 2 [json_name = "customer_aws_id"];

  bool enabled = 3;

  repeated string event_categories = 4 [json_name = "event_categories"];

  string id = 5;

  string name = 6;

  string severity = 7;

  string sns_topic_arn = 8 [json_name = "sns_topic_arn"];

  repeated string source_ids = 9 [json_name = "source_ids"];

  string source_type = 10 [json_name = "source_type"];

  string status = 11;

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  repeated Timeouts timeouts = 14;

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRedshiftParameterGroup version is 0
message AwsRedshiftParameterGroup {
  string arn = 1;

  string description = 2;

  string family = 3;

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated Parameter parameter = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Parameter {
    string name = 1;

    string value = 2;
  }
}

//AwsRedshiftScheduledAction version is 0
message AwsRedshiftScheduledAction {
  string description = 1;

  bool enable = 2;

  string end_time = 3 [json_name = "end_time"];

  string iam_role = 4 [json_name = "iam_role"];

  string id = 5;

  string name = 6;

  string schedule = 7;

  string start_time = 8 [json_name = "start_time"];

  TargetAction target_action = 9 [json_name = "target_action"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message TargetAction {
    PauseCluster pause_cluster = 1 [json_name = "pause_cluster"];

    ResizeCluster resize_cluster = 2 [json_name = "resize_cluster"];

    ResumeCluster resume_cluster = 3 [json_name = "resume_cluster"];

    message PauseCluster {
      string cluster_identifier = 1 [json_name = "cluster_identifier"];
    }

    message ResizeCluster {
      bool classic = 1;

      string cluster_identifier = 2 [json_name = "cluster_identifier"];

      string cluster_type = 3 [json_name = "cluster_type"];

      string node_type = 4 [json_name = "node_type"];

      int64 number_of_nodes = 5 [json_name = "number_of_nodes"];
    }

    message ResumeCluster {
      string cluster_identifier = 1 [json_name = "cluster_identifier"];
    }
  }
}

//AwsRedshiftSecurityGroup version is 0
message AwsRedshiftSecurityGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  repeated Ingress ingress = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Ingress {
    string cidr = 1;

    string security_group_name = 2 [json_name = "security_group_name"];

    string security_group_owner_id = 3 [json_name = "security_group_owner_id"];
  }
}

//AwsRedshiftSnapshotCopyGrant version is 0
message AwsRedshiftSnapshotCopyGrant {
  string arn = 1;

  string id = 2;

  string kms_key_id = 3 [json_name = "kms_key_id"];

  string snapshot_copy_grant_name = 4 [json_name = "snapshot_copy_grant_name"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsRedshiftSnapshotSchedule version is 0
message AwsRedshiftSnapshotSchedule {
  string arn = 1;

  repeated string definitions = 2;

  string description = 3;

  bool force_destroy = 4 [json_name = "force_destroy"];

  string id = 5;

  string identifier = 6;

  string identifier_prefix = 7 [json_name = "identifier_prefix"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsRedshiftSnapshotScheduleAssociation version is 0
message AwsRedshiftSnapshotScheduleAssociation {
  string cluster_identifier = 1 [json_name = "cluster_identifier"];

  string id = 2;

  string schedule_identifier = 3 [json_name = "schedule_identifier"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsRedshiftSubnetGroup version is 0
message AwsRedshiftSubnetGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  repeated string subnet_ids = 5 [json_name = "subnet_ids"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsResourcegroupsGroup version is 0
message AwsResourcegroupsGroup {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  ResourceQuery resource_query = 7 [json_name = "resource_query"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message ResourceQuery {
    string query = 1;

    string type = 2;
  }
}

//AwsRoute version is 0
message AwsRoute {
  string carrier_gateway_id = 1 [json_name = "carrier_gateway_id"];

  string destination_cidr_block = 2 [json_name = "destination_cidr_block"];

  string destination_ipv6_cidr_block = 3 [json_name = "destination_ipv6_cidr_block"];

  string destination_prefix_list_id = 4 [json_name = "destination_prefix_list_id"];

  string egress_only_gateway_id = 5 [json_name = "egress_only_gateway_id"];

  string gateway_id = 6 [json_name = "gateway_id"];

  string id = 7;

  string instance_id = 8 [json_name = "instance_id"];

  string instance_owner_id = 9 [json_name = "instance_owner_id"];

  string local_gateway_id = 10 [json_name = "local_gateway_id"];

  string nat_gateway_id = 11 [json_name = "nat_gateway_id"];

  string network_interface_id = 12 [json_name = "network_interface_id"];

  string origin = 13;

  string route_table_id = 14 [json_name = "route_table_id"];

  string state = 15;

  string transit_gateway_id = 16 [json_name = "transit_gateway_id"];

  string vpc_endpoint_id = 17 [json_name = "vpc_endpoint_id"];

  string vpc_peering_connection_id = 18 [json_name = "vpc_peering_connection_id"];

  repeated Timeouts timeouts = 19;

  repeated string depends_on = 20;

  int32 count = 21;

  map<string, string> for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRoute53DelegationSet version is 0
message AwsRoute53DelegationSet {
  string arn = 1;

  string id = 2;

  repeated string name_servers = 3 [json_name = "name_servers"];

  string reference_name = 4 [json_name = "reference_name"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsRoute53HealthCheck version is 0
message AwsRoute53HealthCheck {
  string arn = 1;

  int64 child_health_threshold = 2 [json_name = "child_health_threshold"];

  repeated string child_healthchecks = 3 [json_name = "child_healthchecks"];

  string cloudwatch_alarm_name = 4 [json_name = "cloudwatch_alarm_name"];

  string cloudwatch_alarm_region = 5 [json_name = "cloudwatch_alarm_region"];

  bool disabled = 6;

  bool enable_sni = 7 [json_name = "enable_sni"];

  int64 failure_threshold = 8 [json_name = "failure_threshold"];

  string fqdn = 9;

  string id = 10;

  string insufficient_data_health_status = 11 [json_name = "insufficient_data_health_status"];

  bool invert_healthcheck = 12 [json_name = "invert_healthcheck"];

  string ip_address = 13 [json_name = "ip_address"];

  bool measure_latency = 14 [json_name = "measure_latency"];

  int64 port = 15;

  string reference_name = 16 [json_name = "reference_name"];

  repeated string regions = 17;

  int64 request_interval = 18 [json_name = "request_interval"];

  string resource_path = 19 [json_name = "resource_path"];

  string routing_control_arn = 20 [json_name = "routing_control_arn"];

  string search_string = 21 [json_name = "search_string"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  string type = 24;

  repeated string depends_on = 25;

  int32 count = 26;

  map<string, string> for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;
}

//AwsRoute53HostedZoneDnssec version is 0
message AwsRoute53HostedZoneDnssec {
  string hosted_zone_id = 1 [json_name = "hosted_zone_id"];

  string id = 2;

  string signing_status = 3 [json_name = "signing_status"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsRoute53KeySigningKey version is 0
message AwsRoute53KeySigningKey {
  string digest_algorithm_mnemonic = 1 [json_name = "digest_algorithm_mnemonic"];

  int64 digest_algorithm_type = 2 [json_name = "digest_algorithm_type"];

  string digest_value = 3 [json_name = "digest_value"];

  string dnskey_record = 4 [json_name = "dnskey_record"];

  string ds_record = 5 [json_name = "ds_record"];

  int64 flag = 6;

  string hosted_zone_id = 7 [json_name = "hosted_zone_id"];

  string id = 8;

  string key_management_service_arn = 9 [json_name = "key_management_service_arn"];

  int64 key_tag = 10 [json_name = "key_tag"];

  string name = 11;

  string public_key = 12 [json_name = "public_key"];

  string signing_algorithm_mnemonic = 13 [json_name = "signing_algorithm_mnemonic"];

  int64 signing_algorithm_type = 14 [json_name = "signing_algorithm_type"];

  string status = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;
}

//AwsRoute53QueryLog version is 0
message AwsRoute53QueryLog {
  string arn = 1;

  string cloudwatch_log_group_arn = 2 [json_name = "cloudwatch_log_group_arn"];

  string id = 3;

  string zone_id = 4 [json_name = "zone_id"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsRoute53Record version is 2
message AwsRoute53Record {
  bool allow_overwrite = 1 [json_name = "allow_overwrite"];

  string fqdn = 2;

  string health_check_id = 3 [json_name = "health_check_id"];

  string id = 4;

  bool multivalue_answer_routing_policy = 5 [json_name = "multivalue_answer_routing_policy"];

  string name = 6;

  repeated string records = 7;

  string set_identifier = 8 [json_name = "set_identifier"];

  int64 ttl = 9;

  string type = 10;

  string zone_id = 11 [json_name = "zone_id"];

  repeated Alias alias = 12;

  repeated FailoverRoutingPolicy failover_routing_policy = 13 [json_name = "failover_routing_policy"];

  repeated GeolocationRoutingPolicy geolocation_routing_policy = 14 [json_name = "geolocation_routing_policy"];

  repeated LatencyRoutingPolicy latency_routing_policy = 15 [json_name = "latency_routing_policy"];

  repeated WeightedRoutingPolicy weighted_routing_policy = 16 [json_name = "weighted_routing_policy"];

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message Alias {
    bool evaluate_target_health = 1 [json_name = "evaluate_target_health"];

    string name = 2;

    string zone_id = 3 [json_name = "zone_id"];
  }

  message FailoverRoutingPolicy {
    string type = 1;
  }

  message GeolocationRoutingPolicy {
    string continent = 1;

    string country = 2;

    string subdivision = 3;
  }

  message LatencyRoutingPolicy {
    string region = 1;
  }

  message WeightedRoutingPolicy {
    int64 weight = 1;
  }
}

//AwsRoute53ResolverDnssecConfig version is 0
message AwsRoute53ResolverDnssecConfig {
  string arn = 1;

  string id = 2;

  string owner_id = 3 [json_name = "owner_id"];

  string resource_id = 4 [json_name = "resource_id"];

  string validation_status = 5 [json_name = "validation_status"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsRoute53ResolverEndpoint version is 0
message AwsRoute53ResolverEndpoint {
  string arn = 1;

  string direction = 2;

  string host_vpc_id = 3 [json_name = "host_vpc_id"];

  string id = 4;

  string name = 5;

  repeated string security_group_ids = 6 [json_name = "security_group_ids"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated IpAddress ip_address = 9 [json_name = "ip_address"];

  repeated Timeouts timeouts = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message IpAddress {
    string ip = 1;

    string ip_id = 2 [json_name = "ip_id"];

    string subnet_id = 3 [json_name = "subnet_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRoute53ResolverFirewallConfig version is 0
message AwsRoute53ResolverFirewallConfig {
  string firewall_fail_open = 1 [json_name = "firewall_fail_open"];

  string id = 2;

  string owner_id = 3 [json_name = "owner_id"];

  string resource_id = 4 [json_name = "resource_id"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsRoute53ResolverFirewallDomainList version is 0
message AwsRoute53ResolverFirewallDomainList {
  string arn = 1;

  repeated string domains = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsRoute53ResolverFirewallRule version is 0
message AwsRoute53ResolverFirewallRule {
  string action = 1;

  string block_override_dns_type = 2 [json_name = "block_override_dns_type"];

  string block_override_domain = 3 [json_name = "block_override_domain"];

  int64 block_override_ttl = 4 [json_name = "block_override_ttl"];

  string block_response = 5 [json_name = "block_response"];

  string firewall_domain_list_id = 6 [json_name = "firewall_domain_list_id"];

  string firewall_rule_group_id = 7 [json_name = "firewall_rule_group_id"];

  string id = 8;

  string name = 9;

  int64 priority = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsRoute53ResolverFirewallRuleGroup version is 0
message AwsRoute53ResolverFirewallRuleGroup {
  string arn = 1;

  string id = 2;

  string name = 3;

  string owner_id = 4 [json_name = "owner_id"];

  string share_status = 5 [json_name = "share_status"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsRoute53ResolverFirewallRuleGroupAssociation version is 0
message AwsRoute53ResolverFirewallRuleGroupAssociation {
  string arn = 1;

  string firewall_rule_group_id = 2 [json_name = "firewall_rule_group_id"];

  string id = 3;

  string mutation_protection = 4 [json_name = "mutation_protection"];

  string name = 5;

  int64 priority = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string vpc_id = 9 [json_name = "vpc_id"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsRoute53ResolverQueryLogConfig version is 0
message AwsRoute53ResolverQueryLogConfig {
  string arn = 1;

  string destination_arn = 2 [json_name = "destination_arn"];

  string id = 3;

  string name = 4;

  string owner_id = 5 [json_name = "owner_id"];

  string share_status = 6 [json_name = "share_status"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsRoute53ResolverQueryLogConfigAssociation version is 0
message AwsRoute53ResolverQueryLogConfigAssociation {
  string id = 1;

  string resolver_query_log_config_id = 2 [json_name = "resolver_query_log_config_id"];

  string resource_id = 3 [json_name = "resource_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsRoute53ResolverRule version is 0
message AwsRoute53ResolverRule {
  string arn = 1;

  string domain_name = 2 [json_name = "domain_name"];

  string id = 3;

  string name = 4;

  string owner_id = 5 [json_name = "owner_id"];

  string resolver_endpoint_id = 6 [json_name = "resolver_endpoint_id"];

  string rule_type = 7 [json_name = "rule_type"];

  string share_status = 8 [json_name = "share_status"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated TargetIp target_ip = 11 [json_name = "target_ip"];

  repeated Timeouts timeouts = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message TargetIp {
    string ip = 1;

    int64 port = 2;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRoute53ResolverRuleAssociation version is 0
message AwsRoute53ResolverRuleAssociation {
  string id = 1;

  string name = 2;

  string resolver_rule_id = 3 [json_name = "resolver_rule_id"];

  string vpc_id = 4 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsRoute53VpcAssociationAuthorization version is 0
message AwsRoute53VpcAssociationAuthorization {
  string id = 1;

  string vpc_id = 2 [json_name = "vpc_id"];

  string vpc_region = 3 [json_name = "vpc_region"];

  string zone_id = 4 [json_name = "zone_id"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsRoute53Zone version is 0
message AwsRoute53Zone {
  string arn = 1;

  string comment = 2;

  string delegation_set_id = 3 [json_name = "delegation_set_id"];

  bool force_destroy = 4 [json_name = "force_destroy"];

  string id = 5;

  string name = 6;

  repeated string name_servers = 7 [json_name = "name_servers"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  string zone_id = 10 [json_name = "zone_id"];

  repeated Vpc vpc = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Vpc {
    string vpc_id = 1 [json_name = "vpc_id"];

    string vpc_region = 2 [json_name = "vpc_region"];
  }
}

//AwsRoute53ZoneAssociation version is 0
message AwsRoute53ZoneAssociation {
  string id = 1;

  string owning_account = 2 [json_name = "owning_account"];

  string vpc_id = 3 [json_name = "vpc_id"];

  string vpc_region = 4 [json_name = "vpc_region"];

  string zone_id = 5 [json_name = "zone_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsRoute53recoverycontrolconfigCluster version is 0
message AwsRoute53recoverycontrolconfigCluster {
  string arn = 1;

  repeated ClusterEndpoints cluster_endpoints = 2 [json_name = "cluster_endpoints"];

  string id = 3;

  string name = 4;

  string status = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message ClusterEndpoints {
    //endpoint: string
    string endpoint = 1;

    //region: string
    string region = 2;
  }
}

//AwsRoute53recoverycontrolconfigControlPanel version is 0
message AwsRoute53recoverycontrolconfigControlPanel {
  string arn = 1;

  string cluster_arn = 2 [json_name = "cluster_arn"];

  bool default_control_panel = 3 [json_name = "default_control_panel"];

  string id = 4;

  string name = 5;

  int64 routing_control_count = 6 [json_name = "routing_control_count"];

  string status = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsRoute53recoverycontrolconfigRoutingControl version is 0
message AwsRoute53recoverycontrolconfigRoutingControl {
  string arn = 1;

  string cluster_arn = 2 [json_name = "cluster_arn"];

  string control_panel_arn = 3 [json_name = "control_panel_arn"];

  string id = 4;

  string name = 5;

  string status = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsRoute53recoverycontrolconfigSafetyRule version is 0
message AwsRoute53recoverycontrolconfigSafetyRule {
  string arn = 1;

  repeated string asserted_controls = 2 [json_name = "asserted_controls"];

  string control_panel_arn = 3 [json_name = "control_panel_arn"];

  repeated string gating_controls = 4 [json_name = "gating_controls"];

  string id = 5;

  string name = 6;

  string status = 7;

  repeated string target_controls = 8 [json_name = "target_controls"];

  int64 wait_period_ms = 9 [json_name = "wait_period_ms"];

  RuleConfig rule_config = 10 [json_name = "rule_config"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message RuleConfig {
    bool inverted = 1;

    int64 threshold = 2;

    string type = 3;
  }
}

//AwsRoute53recoveryreadinessCell version is 0
message AwsRoute53recoveryreadinessCell {
  string arn = 1;

  string cell_name = 2 [json_name = "cell_name"];

  repeated string cells = 3;

  string id = 4;

  repeated string parent_readiness_scopes = 5 [json_name = "parent_readiness_scopes"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated Timeouts timeouts = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Timeouts {
    string delete = 1;
  }
}

//AwsRoute53recoveryreadinessReadinessCheck version is 0
message AwsRoute53recoveryreadinessReadinessCheck {
  string arn = 1;

  string id = 2;

  string readiness_check_name = 3 [json_name = "readiness_check_name"];

  string resource_set_name = 4 [json_name = "resource_set_name"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated Timeouts timeouts = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Timeouts {
    string delete = 1;
  }
}

//AwsRoute53recoveryreadinessRecoveryGroup version is 0
message AwsRoute53recoveryreadinessRecoveryGroup {
  string arn = 1;

  repeated string cells = 2;

  string id = 3;

  string recovery_group_name = 4 [json_name = "recovery_group_name"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated Timeouts timeouts = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Timeouts {
    string delete = 1;
  }
}

//AwsRoute53recoveryreadinessResourceSet version is 0
message AwsRoute53recoveryreadinessResourceSet {
  string arn = 1;

  string id = 2;

  string resource_set_name = 3 [json_name = "resource_set_name"];

  string resource_set_type = 4 [json_name = "resource_set_type"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated Resources resources = 7;

  repeated Timeouts timeouts = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Resources {
    string component_id = 1 [json_name = "component_id"];

    repeated string readiness_scopes = 2 [json_name = "readiness_scopes"];

    string resource_arn = 3 [json_name = "resource_arn"];

    DnsTargetResource dns_target_resource = 4 [json_name = "dns_target_resource"];

    message DnsTargetResource {
      string domain_name = 1 [json_name = "domain_name"];

      string hosted_zone_arn = 2 [json_name = "hosted_zone_arn"];

      string record_set_id = 3 [json_name = "record_set_id"];

      string record_type = 4 [json_name = "record_type"];

      TargetResource target_resource = 5 [json_name = "target_resource"];

      message TargetResource {
        NlbResource nlb_resource = 1 [json_name = "nlb_resource"];

        R53Resource r53_resource = 2 [json_name = "r53_resource"];

        message NlbResource {
          string arn = 1;
        }

        message R53Resource {
          string domain_name = 1 [json_name = "domain_name"];

          string record_set_id = 2 [json_name = "record_set_id"];
        }
      }
    }
  }

  message Timeouts {
    string delete = 1;
  }
}

//AwsRouteTable version is 0
message AwsRouteTable {
  string arn = 1;

  string id = 2;

  string owner_id = 3 [json_name = "owner_id"];

  repeated string propagating_vgws = 4 [json_name = "propagating_vgws"];

  repeated Route route = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string vpc_id = 8 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Route {
    //carrier_gateway_id: string
    string carrier_gateway_id = 1 [json_name = "carrier_gateway_id"];

    //cidr_block: string
    string cidr_block = 2 [json_name = "cidr_block"];

    //destination_prefix_list_id: string
    string destination_prefix_list_id = 3 [json_name = "destination_prefix_list_id"];

    //egress_only_gateway_id: string
    string egress_only_gateway_id = 4 [json_name = "egress_only_gateway_id"];

    //gateway_id: string
    string gateway_id = 5 [json_name = "gateway_id"];

    //instance_id: string
    string instance_id = 6 [json_name = "instance_id"];

    //ipv6_cidr_block: string
    string ipv6_cidr_block = 7 [json_name = "ipv6_cidr_block"];

    //local_gateway_id: string
    string local_gateway_id = 8 [json_name = "local_gateway_id"];

    //nat_gateway_id: string
    string nat_gateway_id = 9 [json_name = "nat_gateway_id"];

    //network_interface_id: string
    string network_interface_id = 10 [json_name = "network_interface_id"];

    //transit_gateway_id: string
    string transit_gateway_id = 11 [json_name = "transit_gateway_id"];

    //vpc_endpoint_id: string
    string vpc_endpoint_id = 12 [json_name = "vpc_endpoint_id"];

    //vpc_peering_connection_id: string
    string vpc_peering_connection_id = 13 [json_name = "vpc_peering_connection_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsRouteTableAssociation version is 0
message AwsRouteTableAssociation {
  string gateway_id = 1 [json_name = "gateway_id"];

  string id = 2;

  string route_table_id = 3 [json_name = "route_table_id"];

  string subnet_id = 4 [json_name = "subnet_id"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsS3AccessPoint version is 0
message AwsS3AccessPoint {
  string account_id = 1 [json_name = "account_id"];

  string alias = 2;

  string arn = 3;

  string bucket = 4;

  string domain_name = 5 [json_name = "domain_name"];

  map<string, string> endpoints = 6;

  bool has_public_access_policy = 7 [json_name = "has_public_access_policy"];

  string id = 8;

  string name = 9;

  string network_origin = 10 [json_name = "network_origin"];

  string policy = 11;

  PublicAccessBlockConfiguration public_access_block_configuration = 12 [json_name = "public_access_block_configuration"];

  VpcConfiguration vpc_configuration = 13 [json_name = "vpc_configuration"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message PublicAccessBlockConfiguration {
    bool block_public_acls = 1 [json_name = "block_public_acls"];

    bool block_public_policy = 2 [json_name = "block_public_policy"];

    bool ignore_public_acls = 3 [json_name = "ignore_public_acls"];

    bool restrict_public_buckets = 4 [json_name = "restrict_public_buckets"];
  }

  message VpcConfiguration {
    string vpc_id = 1 [json_name = "vpc_id"];
  }
}

//AwsS3AccountPublicAccessBlock version is 0
message AwsS3AccountPublicAccessBlock {
  string account_id = 1 [json_name = "account_id"];

  bool block_public_acls = 2 [json_name = "block_public_acls"];

  bool block_public_policy = 3 [json_name = "block_public_policy"];

  string id = 4;

  bool ignore_public_acls = 5 [json_name = "ignore_public_acls"];

  bool restrict_public_buckets = 6 [json_name = "restrict_public_buckets"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsS3Bucket version is 0
message AwsS3Bucket {
  string acceleration_status = 1 [json_name = "acceleration_status"];

  string acl = 2;

  string arn = 3;

  string bucket = 4;

  string bucket_domain_name = 5 [json_name = "bucket_domain_name"];

  string bucket_prefix = 6 [json_name = "bucket_prefix"];

  string bucket_regional_domain_name = 7 [json_name = "bucket_regional_domain_name"];

  bool force_destroy = 8 [json_name = "force_destroy"];

  string hosted_zone_id = 9 [json_name = "hosted_zone_id"];

  string id = 10;

  string policy = 11;

  string region = 12;

  string request_payer = 13 [json_name = "request_payer"];

  map<string, string> tags = 14;

  map<string, string> tags_all = 15 [json_name = "tags_all"];

  string website_domain = 16 [json_name = "website_domain"];

  string website_endpoint = 17 [json_name = "website_endpoint"];

  repeated CorsRule cors_rule = 18 [json_name = "cors_rule"];

  repeated Grant grant = 19;

  repeated LifecycleRule lifecycle_rule = 20 [json_name = "lifecycle_rule"];

  repeated Logging logging = 21;

  ObjectLockConfiguration object_lock_configuration = 22 [json_name = "object_lock_configuration"];

  ReplicationConfiguration replication_configuration = 23 [json_name = "replication_configuration"];

  ServerSideEncryptionConfiguration server_side_encryption_configuration = 24 [json_name = "server_side_encryption_configuration"];

  Versioning versioning = 25;

  Website website = 26;

  repeated string depends_on = 27;

  int32 count = 28;

  map<string, string> for_each = 29;

  string provider = 30;

  terraform.meta.Lifecycle lifecycle = 31;

  message CorsRule {
    repeated string allowed_headers = 1 [json_name = "allowed_headers"];

    repeated string allowed_methods = 2 [json_name = "allowed_methods"];

    repeated string allowed_origins = 3 [json_name = "allowed_origins"];

    repeated string expose_headers = 4 [json_name = "expose_headers"];

    int64 max_age_seconds = 5 [json_name = "max_age_seconds"];
  }

  message Grant {
    string id = 1;

    repeated string permissions = 2;

    string type = 3;

    string uri = 4;
  }

  message LifecycleRule {
    int64 abort_incomplete_multipart_upload_days = 1 [json_name = "abort_incomplete_multipart_upload_days"];

    bool enabled = 2;

    string id = 3;

    string prefix = 4;

    map<string, string> tags = 5;

    Expiration expiration = 6;

    NoncurrentVersionExpiration noncurrent_version_expiration = 7 [json_name = "noncurrent_version_expiration"];

    repeated NoncurrentVersionTransition noncurrent_version_transition = 8 [json_name = "noncurrent_version_transition"];

    repeated Transition transition = 9;

    message Expiration {
      string date = 1;

      int64 days = 2;

      bool expired_object_delete_marker = 3 [json_name = "expired_object_delete_marker"];
    }

    message NoncurrentVersionExpiration {
      int64 days = 1;
    }

    message NoncurrentVersionTransition {
      int64 days = 1;

      string storage_class = 2 [json_name = "storage_class"];
    }

    message Transition {
      string date = 1;

      int64 days = 2;

      string storage_class = 3 [json_name = "storage_class"];
    }
  }

  message Logging {
    string target_bucket = 1 [json_name = "target_bucket"];

    string target_prefix = 2 [json_name = "target_prefix"];
  }

  message ObjectLockConfiguration {
    string object_lock_enabled = 1 [json_name = "object_lock_enabled"];

    Rule rule = 2;

    message Rule {
      DefaultRetention default_retention = 1 [json_name = "default_retention"];

      message DefaultRetention {
        int64 days = 1;

        string mode = 2;

        int64 years = 3;
      }
    }
  }

  message ReplicationConfiguration {
    string role = 1;

    repeated Rules rules = 2;

    message Rules {
      string delete_marker_replication_status = 1 [json_name = "delete_marker_replication_status"];

      string id = 2;

      string prefix = 3;

      int64 priority = 4;

      string status = 5;

      Destination destination = 6;

      Filter filter = 7;

      SourceSelectionCriteria source_selection_criteria = 8 [json_name = "source_selection_criteria"];

      message Destination {
        string account_id = 1 [json_name = "account_id"];

        string bucket = 2;

        string replica_kms_key_id = 3 [json_name = "replica_kms_key_id"];

        string storage_class = 4 [json_name = "storage_class"];

        AccessControlTranslation access_control_translation = 5 [json_name = "access_control_translation"];

        Metrics metrics = 6;

        ReplicationTime replication_time = 7 [json_name = "replication_time"];

        message AccessControlTranslation {
          string owner = 1;
        }

        message Metrics {
          int64 minutes = 1;

          string status = 2;
        }

        message ReplicationTime {
          int64 minutes = 1;

          string status = 2;
        }
      }

      message Filter {
        string prefix = 1;

        map<string, string> tags = 2;
      }

      message SourceSelectionCriteria {
        SseKmsEncryptedObjects sse_kms_encrypted_objects = 1 [json_name = "sse_kms_encrypted_objects"];

        message SseKmsEncryptedObjects {
          bool enabled = 1;
        }
      }
    }
  }

  message ServerSideEncryptionConfiguration {
    Rule rule = 1;

    message Rule {
      bool bucket_key_enabled = 1 [json_name = "bucket_key_enabled"];

      ApplyServerSideEncryptionByDefault apply_server_side_encryption_by_default = 2 [json_name = "apply_server_side_encryption_by_default"];

      message ApplyServerSideEncryptionByDefault {
        string kms_master_key_id = 1 [json_name = "kms_master_key_id"];

        string sse_algorithm = 2 [json_name = "sse_algorithm"];
      }
    }
  }

  message Versioning {
    bool enabled = 1;

    bool mfa_delete = 2 [json_name = "mfa_delete"];
  }

  message Website {
    string error_document = 1 [json_name = "error_document"];

    string index_document = 2 [json_name = "index_document"];

    string redirect_all_requests_to = 3 [json_name = "redirect_all_requests_to"];

    string routing_rules = 4 [json_name = "routing_rules"];
  }
}

//AwsS3BucketAnalyticsConfiguration version is 0
message AwsS3BucketAnalyticsConfiguration {
  string bucket = 1;

  string id = 2;

  string name = 3;

  Filter filter = 4;

  StorageClassAnalysis storage_class_analysis = 5 [json_name = "storage_class_analysis"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Filter {
    string prefix = 1;

    map<string, string> tags = 2;
  }

  message StorageClassAnalysis {
    DataExport data_export = 1 [json_name = "data_export"];

    message DataExport {
      string output_schema_version = 1 [json_name = "output_schema_version"];

      Destination destination = 2;

      message Destination {
        S3BucketDestination s3_bucket_destination = 1 [json_name = "s3_bucket_destination"];

        message S3BucketDestination {
          string bucket_account_id = 1 [json_name = "bucket_account_id"];

          string bucket_arn = 2 [json_name = "bucket_arn"];

          string format = 3;

          string prefix = 4;
        }
      }
    }
  }
}

//AwsS3BucketIntelligentTieringConfiguration version is 0
message AwsS3BucketIntelligentTieringConfiguration {
  string bucket = 1;

  string id = 2;

  string name = 3;

  string status = 4;

  Filter filter = 5;

  repeated Tiering tiering = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Filter {
    string prefix = 1;

    map<string, string> tags = 2;
  }

  message Tiering {
    string access_tier = 1 [json_name = "access_tier"];

    int64 days = 2;
  }
}

//AwsS3BucketInventory version is 0
message AwsS3BucketInventory {
  string bucket = 1;

  bool enabled = 2;

  string id = 3;

  string included_object_versions = 4 [json_name = "included_object_versions"];

  string name = 5;

  repeated string optional_fields = 6 [json_name = "optional_fields"];

  Destination destination = 7;

  Filter filter = 8;

  Schedule schedule = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Destination {
    Bucket bucket = 1;

    message Bucket {
      string account_id = 1 [json_name = "account_id"];

      string bucket_arn = 2 [json_name = "bucket_arn"];

      string format = 3;

      string prefix = 4;

      Encryption encryption = 5;

      message Encryption {
        SseKms sse_kms = 1 [json_name = "sse_kms"];

        SseS3 sse_s3 = 2 [json_name = "sse_s3"];

        message SseKms {
          string key_id = 1 [json_name = "key_id"];
        }

        message SseS3 {
        }
      }
    }
  }

  message Filter {
    string prefix = 1;
  }

  message Schedule {
    string frequency = 1;
  }
}

//AwsS3BucketMetric version is 0
message AwsS3BucketMetric {
  string bucket = 1;

  string id = 2;

  string name = 3;

  Filter filter = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Filter {
    string prefix = 1;

    map<string, string> tags = 2;
  }
}

//AwsS3BucketNotification version is 0
message AwsS3BucketNotification {
  string bucket = 1;

  string id = 2;

  repeated LambdaFunction lambda_function = 3 [json_name = "lambda_function"];

  repeated Queue queue = 4;

  repeated Topic topic = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message LambdaFunction {
    repeated string events = 1;

    string filter_prefix = 2 [json_name = "filter_prefix"];

    string filter_suffix = 3 [json_name = "filter_suffix"];

    string id = 4;

    string lambda_function_arn = 5 [json_name = "lambda_function_arn"];
  }

  message Queue {
    repeated string events = 1;

    string filter_prefix = 2 [json_name = "filter_prefix"];

    string filter_suffix = 3 [json_name = "filter_suffix"];

    string id = 4;

    string queue_arn = 5 [json_name = "queue_arn"];
  }

  message Topic {
    repeated string events = 1;

    string filter_prefix = 2 [json_name = "filter_prefix"];

    string filter_suffix = 3 [json_name = "filter_suffix"];

    string id = 4;

    string topic_arn = 5 [json_name = "topic_arn"];
  }
}

//AwsS3BucketObject version is 0
message AwsS3BucketObject {
  string acl = 1;

  string bucket = 2;

  bool bucket_key_enabled = 3 [json_name = "bucket_key_enabled"];

  string cache_control = 4 [json_name = "cache_control"];

  string content = 5;

  string content_base64 = 6 [json_name = "content_base64"];

  string content_disposition = 7 [json_name = "content_disposition"];

  string content_encoding = 8 [json_name = "content_encoding"];

  string content_language = 9 [json_name = "content_language"];

  string content_type = 10 [json_name = "content_type"];

  string etag = 11;

  bool force_destroy = 12 [json_name = "force_destroy"];

  string id = 13;

  string key = 14;

  string kms_key_id = 15 [json_name = "kms_key_id"];

  map<string, string> metadata = 16;

  string object_lock_legal_hold_status = 17 [json_name = "object_lock_legal_hold_status"];

  string object_lock_mode = 18 [json_name = "object_lock_mode"];

  string object_lock_retain_until_date = 19 [json_name = "object_lock_retain_until_date"];

  string server_side_encryption = 20 [json_name = "server_side_encryption"];

  string source = 21;

  string source_hash = 22 [json_name = "source_hash"];

  string storage_class = 23 [json_name = "storage_class"];

  map<string, string> tags = 24;

  map<string, string> tags_all = 25 [json_name = "tags_all"];

  string version_id = 26 [json_name = "version_id"];

  string website_redirect = 27 [json_name = "website_redirect"];

  repeated string depends_on = 28;

  int32 count = 29;

  map<string, string> for_each = 30;

  string provider = 31;

  terraform.meta.Lifecycle lifecycle = 32;
}

//AwsS3BucketOwnershipControls version is 0
message AwsS3BucketOwnershipControls {
  string bucket = 1;

  string id = 2;

  Rule rule = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message Rule {
    string object_ownership = 1 [json_name = "object_ownership"];
  }
}

//AwsS3BucketPolicy version is 0
message AwsS3BucketPolicy {
  string bucket = 1;

  string id = 2;

  string policy = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsS3BucketPublicAccessBlock version is 0
message AwsS3BucketPublicAccessBlock {
  bool block_public_acls = 1 [json_name = "block_public_acls"];

  bool block_public_policy = 2 [json_name = "block_public_policy"];

  string bucket = 3;

  string id = 4;

  bool ignore_public_acls = 5 [json_name = "ignore_public_acls"];

  bool restrict_public_buckets = 6 [json_name = "restrict_public_buckets"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsS3BucketReplicationConfiguration version is 0
message AwsS3BucketReplicationConfiguration {
  string bucket = 1;

  string id = 2;

  string role = 3;

  repeated Rule rule = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Rule {
    string id = 1;

    string prefix = 2;

    int64 priority = 3;

    string status = 4;

    DeleteMarkerReplication delete_marker_replication = 5 [json_name = "delete_marker_replication"];

    Destination destination = 6;

    ExistingObjectReplication existing_object_replication = 7 [json_name = "existing_object_replication"];

    Filter filter = 8;

    SourceSelectionCriteria source_selection_criteria = 9 [json_name = "source_selection_criteria"];

    message DeleteMarkerReplication {
      string status = 1;
    }

    message Destination {
      string account = 1;

      string bucket = 2;

      string storage_class = 3 [json_name = "storage_class"];

      AccessControlTranslation access_control_translation = 4 [json_name = "access_control_translation"];

      EncryptionConfiguration encryption_configuration = 5 [json_name = "encryption_configuration"];

      Metrics metrics = 6;

      ReplicationTime replication_time = 7 [json_name = "replication_time"];

      message AccessControlTranslation {
        string owner = 1;
      }

      message EncryptionConfiguration {
        string replica_kms_key_id = 1 [json_name = "replica_kms_key_id"];
      }

      message Metrics {
        string status = 1;

        EventThreshold event_threshold = 2 [json_name = "event_threshold"];

        message EventThreshold {
          int64 minutes = 1;
        }
      }

      message ReplicationTime {
        string status = 1;

        Time time = 2;

        message Time {
          int64 minutes = 1;
        }
      }
    }

    message ExistingObjectReplication {
      string status = 1;
    }

    message Filter {
      string prefix = 1;

      And and = 2;

      Tag tag = 3;

      message And {
        string prefix = 1;

        map<string, string> tags = 2;
      }

      message Tag {
        string key = 1;

        string value = 2;
      }
    }

    message SourceSelectionCriteria {
      ReplicaModifications replica_modifications = 1 [json_name = "replica_modifications"];

      SseKmsEncryptedObjects sse_kms_encrypted_objects = 2 [json_name = "sse_kms_encrypted_objects"];

      message ReplicaModifications {
        string status = 1;
      }

      message SseKmsEncryptedObjects {
        string status = 1;
      }
    }
  }
}

//AwsS3ObjectCopy version is 0
message AwsS3ObjectCopy {
  string acl = 1;

  string bucket = 2;

  bool bucket_key_enabled = 3 [json_name = "bucket_key_enabled"];

  string cache_control = 4 [json_name = "cache_control"];

  string content_disposition = 5 [json_name = "content_disposition"];

  string content_encoding = 6 [json_name = "content_encoding"];

  string content_language = 7 [json_name = "content_language"];

  string content_type = 8 [json_name = "content_type"];

  string copy_if_match = 9 [json_name = "copy_if_match"];

  string copy_if_modified_since = 10 [json_name = "copy_if_modified_since"];

  string copy_if_none_match = 11 [json_name = "copy_if_none_match"];

  string copy_if_unmodified_since = 12 [json_name = "copy_if_unmodified_since"];

  string customer_algorithm = 13 [json_name = "customer_algorithm"];

  string customer_key = 14 [json_name = "customer_key"];

  string customer_key_md5 = 15 [json_name = "customer_key_md5"];

  string etag = 16;

  string expected_bucket_owner = 17 [json_name = "expected_bucket_owner"];

  string expected_source_bucket_owner = 18 [json_name = "expected_source_bucket_owner"];

  string expiration = 19;

  string expires = 20;

  bool force_destroy = 21 [json_name = "force_destroy"];

  string id = 22;

  string key = 23;

  string kms_encryption_context = 24 [json_name = "kms_encryption_context"];

  string kms_key_id = 25 [json_name = "kms_key_id"];

  string last_modified = 26 [json_name = "last_modified"];

  map<string, string> metadata = 27;

  string metadata_directive = 28 [json_name = "metadata_directive"];

  string object_lock_legal_hold_status = 29 [json_name = "object_lock_legal_hold_status"];

  string object_lock_mode = 30 [json_name = "object_lock_mode"];

  string object_lock_retain_until_date = 31 [json_name = "object_lock_retain_until_date"];

  bool request_charged = 32 [json_name = "request_charged"];

  string request_payer = 33 [json_name = "request_payer"];

  string server_side_encryption = 34 [json_name = "server_side_encryption"];

  string source = 35;

  string source_customer_algorithm = 36 [json_name = "source_customer_algorithm"];

  string source_customer_key = 37 [json_name = "source_customer_key"];

  string source_customer_key_md5 = 38 [json_name = "source_customer_key_md5"];

  string source_version_id = 39 [json_name = "source_version_id"];

  string storage_class = 40 [json_name = "storage_class"];

  string tagging_directive = 41 [json_name = "tagging_directive"];

  map<string, string> tags = 42;

  map<string, string> tags_all = 43 [json_name = "tags_all"];

  string version_id = 44 [json_name = "version_id"];

  string website_redirect = 45 [json_name = "website_redirect"];

  repeated Grant grant = 46;

  repeated string depends_on = 47;

  int32 count = 48;

  map<string, string> for_each = 49;

  string provider = 50;

  terraform.meta.Lifecycle lifecycle = 51;

  message Grant {
    string email = 1;

    string id = 2;

    repeated string permissions = 3;

    string type = 4;

    string uri = 5;
  }
}

//AwsS3controlAccessPointPolicy version is 0
message AwsS3controlAccessPointPolicy {
  string access_point_arn = 1 [json_name = "access_point_arn"];

  bool has_public_access_policy = 2 [json_name = "has_public_access_policy"];

  string id = 3;

  string policy = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsS3controlBucket version is 0
message AwsS3controlBucket {
  string arn = 1;

  string bucket = 2;

  string creation_date = 3 [json_name = "creation_date"];

  string id = 4;

  string outpost_id = 5 [json_name = "outpost_id"];

  bool public_access_block_enabled = 6 [json_name = "public_access_block_enabled"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsS3controlBucketLifecycleConfiguration version is 0
message AwsS3controlBucketLifecycleConfiguration {
  string bucket = 1;

  string id = 2;

  repeated Rule rule = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message Rule {
    string id = 1;

    string status = 2;

    AbortIncompleteMultipartUpload abort_incomplete_multipart_upload = 3 [json_name = "abort_incomplete_multipart_upload"];

    Expiration expiration = 4;

    Filter filter = 5;

    message AbortIncompleteMultipartUpload {
      int64 days_after_initiation = 1 [json_name = "days_after_initiation"];
    }

    message Expiration {
      string date = 1;

      int64 days = 2;

      bool expired_object_delete_marker = 3 [json_name = "expired_object_delete_marker"];
    }

    message Filter {
      string prefix = 1;

      map<string, string> tags = 2;
    }
  }
}

//AwsS3controlBucketPolicy version is 0
message AwsS3controlBucketPolicy {
  string bucket = 1;

  string id = 2;

  string policy = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsS3controlMultiRegionAccessPoint version is 0
message AwsS3controlMultiRegionAccessPoint {
  string account_id = 1 [json_name = "account_id"];

  string alias = 2;

  string arn = 3;

  string domain_name = 4 [json_name = "domain_name"];

  string id = 5;

  string status = 6;

  Details details = 7;

  repeated Timeouts timeouts = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message Details {
    string name = 1;

    PublicAccessBlock public_access_block = 2 [json_name = "public_access_block"];

    repeated Region region = 3;

    message PublicAccessBlock {
      bool block_public_acls = 1 [json_name = "block_public_acls"];

      bool block_public_policy = 2 [json_name = "block_public_policy"];

      bool ignore_public_acls = 3 [json_name = "ignore_public_acls"];

      bool restrict_public_buckets = 4 [json_name = "restrict_public_buckets"];
    }

    message Region {
      string bucket = 1;
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsS3controlMultiRegionAccessPointPolicy version is 0
message AwsS3controlMultiRegionAccessPointPolicy {
  string account_id = 1 [json_name = "account_id"];

  string established = 2;

  string id = 3;

  string proposed = 4;

  Details details = 5;

  repeated Timeouts timeouts = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Details {
    string name = 1;

    string policy = 2;
  }

  message Timeouts {
    string create = 1;

    string update = 2;
  }
}

//AwsS3controlObjectLambdaAccessPoint version is 0
message AwsS3controlObjectLambdaAccessPoint {
  string account_id = 1 [json_name = "account_id"];

  string arn = 2;

  string id = 3;

  string name = 4;

  Configuration configuration = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Configuration {
    repeated string allowed_features = 1 [json_name = "allowed_features"];

    bool cloud_watch_metrics_enabled = 2 [json_name = "cloud_watch_metrics_enabled"];

    string supporting_access_point = 3 [json_name = "supporting_access_point"];

    repeated TransformationConfiguration transformation_configuration = 4 [json_name = "transformation_configuration"];

    message TransformationConfiguration {
      repeated string actions = 1;

      ContentTransformation content_transformation = 2 [json_name = "content_transformation"];

      message ContentTransformation {
        AwsLambda aws_lambda = 1 [json_name = "aws_lambda"];

        message AwsLambda {
          string function_arn = 1 [json_name = "function_arn"];

          string function_payload = 2 [json_name = "function_payload"];
        }
      }
    }
  }
}

//AwsS3controlObjectLambdaAccessPointPolicy version is 0
message AwsS3controlObjectLambdaAccessPointPolicy {
  string account_id = 1 [json_name = "account_id"];

  bool has_public_access_policy = 2 [json_name = "has_public_access_policy"];

  string id = 3;

  string name = 4;

  string policy = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsS3outpostsEndpoint version is 0
message AwsS3outpostsEndpoint {
  string arn = 1;

  string cidr_block = 2 [json_name = "cidr_block"];

  string creation_time = 3 [json_name = "creation_time"];

  string id = 4;

  repeated NetworkInterfaces network_interfaces = 5 [json_name = "network_interfaces"];

  string outpost_id = 6 [json_name = "outpost_id"];

  string security_group_id = 7 [json_name = "security_group_id"];

  string subnet_id = 8 [json_name = "subnet_id"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;

  message NetworkInterfaces {
    //network_interface_id: string
    string network_interface_id = 1 [json_name = "network_interface_id"];
  }
}

//AwsSagemakerApp version is 0
message AwsSagemakerApp {
  string app_name = 1 [json_name = "app_name"];

  string app_type = 2 [json_name = "app_type"];

  string arn = 3;

  string domain_id = 4 [json_name = "domain_id"];

  string id = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string user_profile_name = 8 [json_name = "user_profile_name"];

  ResourceSpec resource_spec = 9 [json_name = "resource_spec"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message ResourceSpec {
    string instance_type = 1 [json_name = "instance_type"];

    string sagemaker_image_arn = 2 [json_name = "sagemaker_image_arn"];
  }
}

//AwsSagemakerAppImageConfig version is 0
message AwsSagemakerAppImageConfig {
  string app_image_config_name = 1 [json_name = "app_image_config_name"];

  string arn = 2;

  string id = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  KernelGatewayImageConfig kernel_gateway_image_config = 6 [json_name = "kernel_gateway_image_config"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message KernelGatewayImageConfig {
    FileSystemConfig file_system_config = 1 [json_name = "file_system_config"];

    KernelSpec kernel_spec = 2 [json_name = "kernel_spec"];

    message FileSystemConfig {
      int64 default_gid = 1 [json_name = "default_gid"];

      int64 default_uid = 2 [json_name = "default_uid"];

      string mount_path = 3 [json_name = "mount_path"];
    }

    message KernelSpec {
      string display_name = 1 [json_name = "display_name"];

      string name = 2;
    }
  }
}

//AwsSagemakerCodeRepository version is 0
message AwsSagemakerCodeRepository {
  string arn = 1;

  string code_repository_name = 2 [json_name = "code_repository_name"];

  string id = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  GitConfig git_config = 6 [json_name = "git_config"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message GitConfig {
    string branch = 1;

    string repository_url = 2 [json_name = "repository_url"];

    string secret_arn = 3 [json_name = "secret_arn"];
  }
}

//AwsSagemakerDeviceFleet version is 0
message AwsSagemakerDeviceFleet {
  string arn = 1;

  string description = 2;

  string device_fleet_name = 3 [json_name = "device_fleet_name"];

  bool enable_iot_role_alias = 4 [json_name = "enable_iot_role_alias"];

  string id = 5;

  string iot_role_alias = 6 [json_name = "iot_role_alias"];

  string role_arn = 7 [json_name = "role_arn"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  OutputConfig output_config = 10 [json_name = "output_config"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message OutputConfig {
    string kms_key_id = 1 [json_name = "kms_key_id"];

    string s3_output_location = 2 [json_name = "s3_output_location"];
  }
}

//AwsSagemakerDomain version is 0
message AwsSagemakerDomain {
  string app_network_access_type = 1 [json_name = "app_network_access_type"];

  string arn = 2;

  string auth_mode = 3 [json_name = "auth_mode"];

  string domain_name = 4 [json_name = "domain_name"];

  string home_efs_file_system_id = 5 [json_name = "home_efs_file_system_id"];

  string id = 6;

  string kms_key_id = 7 [json_name = "kms_key_id"];

  string single_sign_on_managed_application_instance_id = 8 [json_name = "single_sign_on_managed_application_instance_id"];

  repeated string subnet_ids = 9 [json_name = "subnet_ids"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  string url = 12;

  string vpc_id = 13 [json_name = "vpc_id"];

  DefaultUserSettings default_user_settings = 14 [json_name = "default_user_settings"];

  RetentionPolicy retention_policy = 15 [json_name = "retention_policy"];

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message DefaultUserSettings {
    string execution_role = 1 [json_name = "execution_role"];

    repeated string security_groups = 2 [json_name = "security_groups"];

    JupyterServerAppSettings jupyter_server_app_settings = 3 [json_name = "jupyter_server_app_settings"];

    KernelGatewayAppSettings kernel_gateway_app_settings = 4 [json_name = "kernel_gateway_app_settings"];

    SharingSettings sharing_settings = 5 [json_name = "sharing_settings"];

    TensorBoardAppSettings tensor_board_app_settings = 6 [json_name = "tensor_board_app_settings"];

    message JupyterServerAppSettings {
      repeated string lifecycle_config_arns = 1 [json_name = "lifecycle_config_arns"];

      DefaultResourceSpec default_resource_spec = 2 [json_name = "default_resource_spec"];

      message DefaultResourceSpec {
        string instance_type = 1 [json_name = "instance_type"];

        string sagemaker_image_arn = 2 [json_name = "sagemaker_image_arn"];
      }
    }

    message KernelGatewayAppSettings {
      repeated string lifecycle_config_arns = 1 [json_name = "lifecycle_config_arns"];

      repeated CustomImage custom_image = 2 [json_name = "custom_image"];

      DefaultResourceSpec default_resource_spec = 3 [json_name = "default_resource_spec"];

      message CustomImage {
        string app_image_config_name = 1 [json_name = "app_image_config_name"];

        string image_name = 2 [json_name = "image_name"];

        int64 image_version_number = 3 [json_name = "image_version_number"];
      }

      message DefaultResourceSpec {
        string instance_type = 1 [json_name = "instance_type"];

        string sagemaker_image_arn = 2 [json_name = "sagemaker_image_arn"];
      }
    }

    message SharingSettings {
      string notebook_output_option = 1 [json_name = "notebook_output_option"];

      string s3_kms_key_id = 2 [json_name = "s3_kms_key_id"];

      string s3_output_path = 3 [json_name = "s3_output_path"];
    }

    message TensorBoardAppSettings {
      DefaultResourceSpec default_resource_spec = 1 [json_name = "default_resource_spec"];

      message DefaultResourceSpec {
        string instance_type = 1 [json_name = "instance_type"];

        string sagemaker_image_arn = 2 [json_name = "sagemaker_image_arn"];
      }
    }
  }

  message RetentionPolicy {
    string home_efs_file_system = 1 [json_name = "home_efs_file_system"];
  }
}

//AwsSagemakerEndpoint version is 0
message AwsSagemakerEndpoint {
  string arn = 1;

  string endpoint_config_name = 2 [json_name = "endpoint_config_name"];

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  DeploymentConfig deployment_config = 7 [json_name = "deployment_config"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message DeploymentConfig {
    AutoRollbackConfiguration auto_rollback_configuration = 1 [json_name = "auto_rollback_configuration"];

    BlueGreenUpdatePolicy blue_green_update_policy = 2 [json_name = "blue_green_update_policy"];

    message AutoRollbackConfiguration {
      repeated Alarms alarms = 1;

      message Alarms {
        string alarm_name = 1 [json_name = "alarm_name"];
      }
    }

    message BlueGreenUpdatePolicy {
      int64 maximum_execution_timeout_in_seconds = 1 [json_name = "maximum_execution_timeout_in_seconds"];

      int64 termination_wait_in_seconds = 2 [json_name = "termination_wait_in_seconds"];

      TrafficRoutingConfiguration traffic_routing_configuration = 3 [json_name = "traffic_routing_configuration"];

      message TrafficRoutingConfiguration {
        string type = 1;

        int64 wait_interval_in_seconds = 2 [json_name = "wait_interval_in_seconds"];

        CanarySize canary_size = 3 [json_name = "canary_size"];

        LinearStepSize linear_step_size = 4 [json_name = "linear_step_size"];

        message CanarySize {
          string type = 1;

          int64 value = 2;
        }

        message LinearStepSize {
          string type = 1;

          int64 value = 2;
        }
      }
    }
  }
}

//AwsSagemakerEndpointConfiguration version is 0
message AwsSagemakerEndpointConfiguration {
  string arn = 1;

  string id = 2;

  string kms_key_arn = 3 [json_name = "kms_key_arn"];

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  AsyncInferenceConfig async_inference_config = 7 [json_name = "async_inference_config"];

  DataCaptureConfig data_capture_config = 8 [json_name = "data_capture_config"];

  repeated ProductionVariants production_variants = 9 [json_name = "production_variants"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message AsyncInferenceConfig {
    ClientConfig client_config = 1 [json_name = "client_config"];

    OutputConfig output_config = 2 [json_name = "output_config"];

    message ClientConfig {
      int64 max_concurrent_invocations_per_instance = 1 [json_name = "max_concurrent_invocations_per_instance"];
    }

    message OutputConfig {
      string kms_key_id = 1 [json_name = "kms_key_id"];

      string s3_output_path = 2 [json_name = "s3_output_path"];

      NotificationConfig notification_config = 3 [json_name = "notification_config"];

      message NotificationConfig {
        string error_topic = 1 [json_name = "error_topic"];

        string success_topic = 2 [json_name = "success_topic"];
      }
    }
  }

  message DataCaptureConfig {
    string destination_s3_uri = 1 [json_name = "destination_s3_uri"];

    bool enable_capture = 2 [json_name = "enable_capture"];

    int64 initial_sampling_percentage = 3 [json_name = "initial_sampling_percentage"];

    string kms_key_id = 4 [json_name = "kms_key_id"];

    CaptureContentTypeHeader capture_content_type_header = 5 [json_name = "capture_content_type_header"];

    repeated CaptureOptions capture_options = 6 [json_name = "capture_options"];

    message CaptureContentTypeHeader {
      repeated string csv_content_types = 1 [json_name = "csv_content_types"];

      repeated string json_content_types = 2 [json_name = "json_content_types"];
    }

    message CaptureOptions {
      string capture_mode = 1 [json_name = "capture_mode"];
    }
  }

  message ProductionVariants {
    string accelerator_type = 1 [json_name = "accelerator_type"];

    int64 initial_instance_count = 2 [json_name = "initial_instance_count"];

    int64 initial_variant_weight = 3 [json_name = "initial_variant_weight"];

    string instance_type = 4 [json_name = "instance_type"];

    string model_name = 5 [json_name = "model_name"];

    string variant_name = 6 [json_name = "variant_name"];
  }
}

//AwsSagemakerFeatureGroup version is 0
message AwsSagemakerFeatureGroup {
  string arn = 1;

  string description = 2;

  string event_time_feature_name = 3 [json_name = "event_time_feature_name"];

  string feature_group_name = 4 [json_name = "feature_group_name"];

  string id = 5;

  string record_identifier_feature_name = 6 [json_name = "record_identifier_feature_name"];

  string role_arn = 7 [json_name = "role_arn"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated FeatureDefinition feature_definition = 10 [json_name = "feature_definition"];

  OfflineStoreConfig offline_store_config = 11 [json_name = "offline_store_config"];

  OnlineStoreConfig online_store_config = 12 [json_name = "online_store_config"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message FeatureDefinition {
    string feature_name = 1 [json_name = "feature_name"];

    string feature_type = 2 [json_name = "feature_type"];
  }

  message OfflineStoreConfig {
    bool disable_glue_table_creation = 1 [json_name = "disable_glue_table_creation"];

    DataCatalogConfig data_catalog_config = 2 [json_name = "data_catalog_config"];

    S3StorageConfig s3_storage_config = 3 [json_name = "s3_storage_config"];

    message DataCatalogConfig {
      string catalog = 1;

      string database = 2;

      string table_name = 3 [json_name = "table_name"];
    }

    message S3StorageConfig {
      string kms_key_id = 1 [json_name = "kms_key_id"];

      string s3_uri = 2 [json_name = "s3_uri"];
    }
  }

  message OnlineStoreConfig {
    bool enable_online_store = 1 [json_name = "enable_online_store"];

    SecurityConfig security_config = 2 [json_name = "security_config"];

    message SecurityConfig {
      string kms_key_id = 1 [json_name = "kms_key_id"];
    }
  }
}

//AwsSagemakerFlowDefinition version is 0
message AwsSagemakerFlowDefinition {
  string arn = 1;

  string flow_definition_name = 2 [json_name = "flow_definition_name"];

  string id = 3;

  string role_arn = 4 [json_name = "role_arn"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  HumanLoopActivationConfig human_loop_activation_config = 7 [json_name = "human_loop_activation_config"];

  HumanLoopConfig human_loop_config = 8 [json_name = "human_loop_config"];

  HumanLoopRequestSource human_loop_request_source = 9 [json_name = "human_loop_request_source"];

  OutputConfig output_config = 10 [json_name = "output_config"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message HumanLoopActivationConfig {
    HumanLoopActivationConditionsConfig human_loop_activation_conditions_config = 1 [json_name = "human_loop_activation_conditions_config"];

    message HumanLoopActivationConditionsConfig {
      string human_loop_activation_conditions = 1 [json_name = "human_loop_activation_conditions"];
    }
  }

  message HumanLoopConfig {
    string human_task_ui_arn = 1 [json_name = "human_task_ui_arn"];

    int64 task_availability_lifetime_in_seconds = 2 [json_name = "task_availability_lifetime_in_seconds"];

    int64 task_count = 3 [json_name = "task_count"];

    string task_description = 4 [json_name = "task_description"];

    repeated string task_keywords = 5 [json_name = "task_keywords"];

    int64 task_time_limit_in_seconds = 6 [json_name = "task_time_limit_in_seconds"];

    string task_title = 7 [json_name = "task_title"];

    string workteam_arn = 8 [json_name = "workteam_arn"];

    PublicWorkforceTaskPrice public_workforce_task_price = 9 [json_name = "public_workforce_task_price"];

    message PublicWorkforceTaskPrice {
      AmountInUsd amount_in_usd = 1 [json_name = "amount_in_usd"];

      message AmountInUsd {
        int64 cents = 1;

        int64 dollars = 2;

        int64 tenth_fractions_of_a_cent = 3 [json_name = "tenth_fractions_of_a_cent"];
      }
    }
  }

  message HumanLoopRequestSource {
    string aws_managed_human_loop_request_source = 1 [json_name = "aws_managed_human_loop_request_source"];
  }

  message OutputConfig {
    string kms_key_id = 1 [json_name = "kms_key_id"];

    string s3_output_path = 2 [json_name = "s3_output_path"];
  }
}

//AwsSagemakerHumanTaskUi version is 0
message AwsSagemakerHumanTaskUi {
  string arn = 1;

  string human_task_ui_name = 2 [json_name = "human_task_ui_name"];

  string id = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  UiTemplate ui_template = 6 [json_name = "ui_template"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message UiTemplate {
    string content = 1;

    string content_sha256 = 2 [json_name = "content_sha256"];

    string url = 3;
  }
}

//AwsSagemakerImage version is 0
message AwsSagemakerImage {
  string arn = 1;

  string description = 2;

  string display_name = 3 [json_name = "display_name"];

  string id = 4;

  string image_name = 5 [json_name = "image_name"];

  string role_arn = 6 [json_name = "role_arn"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsSagemakerImageVersion version is 0
message AwsSagemakerImageVersion {
  string arn = 1;

  string base_image = 2 [json_name = "base_image"];

  string container_image = 3 [json_name = "container_image"];

  string id = 4;

  string image_arn = 5 [json_name = "image_arn"];

  string image_name = 6 [json_name = "image_name"];

  int64 version = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsSagemakerModel version is 0
message AwsSagemakerModel {
  string arn = 1;

  bool enable_network_isolation = 2 [json_name = "enable_network_isolation"];

  string execution_role_arn = 3 [json_name = "execution_role_arn"];

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated Container container = 8;

  InferenceExecutionConfig inference_execution_config = 9 [json_name = "inference_execution_config"];

  PrimaryContainer primary_container = 10 [json_name = "primary_container"];

  VpcConfig vpc_config = 11 [json_name = "vpc_config"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message Container {
    string container_hostname = 1 [json_name = "container_hostname"];

    map<string, string> environment = 2;

    string image = 3;

    string mode = 4;

    string model_data_url = 5 [json_name = "model_data_url"];

    ImageConfig image_config = 6 [json_name = "image_config"];

    message ImageConfig {
      string repository_access_mode = 1 [json_name = "repository_access_mode"];
    }
  }

  message InferenceExecutionConfig {
    string mode = 1;
  }

  message PrimaryContainer {
    string container_hostname = 1 [json_name = "container_hostname"];

    map<string, string> environment = 2;

    string image = 3;

    string mode = 4;

    string model_data_url = 5 [json_name = "model_data_url"];

    ImageConfig image_config = 6 [json_name = "image_config"];

    message ImageConfig {
      string repository_access_mode = 1 [json_name = "repository_access_mode"];
    }
  }

  message VpcConfig {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnets = 2;
  }
}

//AwsSagemakerModelPackageGroup version is 0
message AwsSagemakerModelPackageGroup {
  string arn = 1;

  string id = 2;

  string model_package_group_description = 3 [json_name = "model_package_group_description"];

  string model_package_group_name = 4 [json_name = "model_package_group_name"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsSagemakerModelPackageGroupPolicy version is 0
message AwsSagemakerModelPackageGroupPolicy {
  string id = 1;

  string model_package_group_name = 2 [json_name = "model_package_group_name"];

  string resource_policy = 3 [json_name = "resource_policy"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSagemakerNotebookInstance version is 0
message AwsSagemakerNotebookInstance {
  repeated string additional_code_repositories = 1 [json_name = "additional_code_repositories"];

  string arn = 2;

  string default_code_repository = 3 [json_name = "default_code_repository"];

  string direct_internet_access = 4 [json_name = "direct_internet_access"];

  string id = 5;

  string instance_type = 6 [json_name = "instance_type"];

  string kms_key_id = 7 [json_name = "kms_key_id"];

  string lifecycle_config_name = 8 [json_name = "lifecycle_config_name"];

  string name = 9;

  string network_interface_id = 10 [json_name = "network_interface_id"];

  string platform_identifier = 11 [json_name = "platform_identifier"];

  string role_arn = 12 [json_name = "role_arn"];

  string root_access = 13 [json_name = "root_access"];

  repeated string security_groups = 14 [json_name = "security_groups"];

  string subnet_id = 15 [json_name = "subnet_id"];

  map<string, string> tags = 16;

  map<string, string> tags_all = 17 [json_name = "tags_all"];

  string url = 18;

  int64 volume_size = 19 [json_name = "volume_size"];

  repeated string depends_on = 20;

  int32 count = 21;

  map<string, string> for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;
}

//AwsSagemakerNotebookInstanceLifecycleConfiguration version is 0
message AwsSagemakerNotebookInstanceLifecycleConfiguration {
  string arn = 1;

  string id = 2;

  string name = 3;

  string on_create = 4 [json_name = "on_create"];

  string on_start = 5 [json_name = "on_start"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsSagemakerStudioLifecycleConfig version is 0
message AwsSagemakerStudioLifecycleConfig {
  string arn = 1;

  string id = 2;

  string studio_lifecycle_config_app_type = 3 [json_name = "studio_lifecycle_config_app_type"];

  string studio_lifecycle_config_content = 4 [json_name = "studio_lifecycle_config_content"];

  string studio_lifecycle_config_name = 5 [json_name = "studio_lifecycle_config_name"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsSagemakerUserProfile version is 0
message AwsSagemakerUserProfile {
  string arn = 1;

  string domain_id = 2 [json_name = "domain_id"];

  string home_efs_file_system_uid = 3 [json_name = "home_efs_file_system_uid"];

  string id = 4;

  string single_sign_on_user_identifier = 5 [json_name = "single_sign_on_user_identifier"];

  string single_sign_on_user_value = 6 [json_name = "single_sign_on_user_value"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string user_profile_name = 9 [json_name = "user_profile_name"];

  UserSettings user_settings = 10 [json_name = "user_settings"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message UserSettings {
    string execution_role = 1 [json_name = "execution_role"];

    repeated string security_groups = 2 [json_name = "security_groups"];

    JupyterServerAppSettings jupyter_server_app_settings = 3 [json_name = "jupyter_server_app_settings"];

    KernelGatewayAppSettings kernel_gateway_app_settings = 4 [json_name = "kernel_gateway_app_settings"];

    SharingSettings sharing_settings = 5 [json_name = "sharing_settings"];

    TensorBoardAppSettings tensor_board_app_settings = 6 [json_name = "tensor_board_app_settings"];

    message JupyterServerAppSettings {
      repeated string lifecycle_config_arns = 1 [json_name = "lifecycle_config_arns"];

      DefaultResourceSpec default_resource_spec = 2 [json_name = "default_resource_spec"];

      message DefaultResourceSpec {
        string instance_type = 1 [json_name = "instance_type"];

        string sagemaker_image_arn = 2 [json_name = "sagemaker_image_arn"];
      }
    }

    message KernelGatewayAppSettings {
      repeated string lifecycle_config_arns = 1 [json_name = "lifecycle_config_arns"];

      repeated CustomImage custom_image = 2 [json_name = "custom_image"];

      DefaultResourceSpec default_resource_spec = 3 [json_name = "default_resource_spec"];

      message CustomImage {
        string app_image_config_name = 1 [json_name = "app_image_config_name"];

        string image_name = 2 [json_name = "image_name"];

        int64 image_version_number = 3 [json_name = "image_version_number"];
      }

      message DefaultResourceSpec {
        string instance_type = 1 [json_name = "instance_type"];

        string sagemaker_image_arn = 2 [json_name = "sagemaker_image_arn"];
      }
    }

    message SharingSettings {
      string notebook_output_option = 1 [json_name = "notebook_output_option"];

      string s3_kms_key_id = 2 [json_name = "s3_kms_key_id"];

      string s3_output_path = 3 [json_name = "s3_output_path"];
    }

    message TensorBoardAppSettings {
      DefaultResourceSpec default_resource_spec = 1 [json_name = "default_resource_spec"];

      message DefaultResourceSpec {
        string instance_type = 1 [json_name = "instance_type"];

        string sagemaker_image_arn = 2 [json_name = "sagemaker_image_arn"];
      }
    }
  }
}

//AwsSagemakerWorkforce version is 0
message AwsSagemakerWorkforce {
  string arn = 1;

  string id = 2;

  string subdomain = 3;

  string workforce_name = 4 [json_name = "workforce_name"];

  CognitoConfig cognito_config = 5 [json_name = "cognito_config"];

  OidcConfig oidc_config = 6 [json_name = "oidc_config"];

  SourceIpConfig source_ip_config = 7 [json_name = "source_ip_config"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message CognitoConfig {
    string client_id = 1 [json_name = "client_id"];

    string user_pool = 2 [json_name = "user_pool"];
  }

  message OidcConfig {
    string authorization_endpoint = 1 [json_name = "authorization_endpoint"];

    string client_id = 2 [json_name = "client_id"];

    string client_secret = 3 [json_name = "client_secret"];

    string issuer = 4;

    string jwks_uri = 5 [json_name = "jwks_uri"];

    string logout_endpoint = 6 [json_name = "logout_endpoint"];

    string token_endpoint = 7 [json_name = "token_endpoint"];

    string user_info_endpoint = 8 [json_name = "user_info_endpoint"];
  }

  message SourceIpConfig {
    repeated string cidrs = 1;
  }
}

//AwsSagemakerWorkteam version is 0
message AwsSagemakerWorkteam {
  string arn = 1;

  string description = 2;

  string id = 3;

  string subdomain = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  string workforce_name = 7 [json_name = "workforce_name"];

  string workteam_name = 8 [json_name = "workteam_name"];

  repeated MemberDefinition member_definition = 9 [json_name = "member_definition"];

  NotificationConfiguration notification_configuration = 10 [json_name = "notification_configuration"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message MemberDefinition {
    CognitoMemberDefinition cognito_member_definition = 1 [json_name = "cognito_member_definition"];

    OidcMemberDefinition oidc_member_definition = 2 [json_name = "oidc_member_definition"];

    message CognitoMemberDefinition {
      string client_id = 1 [json_name = "client_id"];

      string user_group = 2 [json_name = "user_group"];

      string user_pool = 3 [json_name = "user_pool"];
    }

    message OidcMemberDefinition {
      repeated string groups = 1;
    }
  }

  message NotificationConfiguration {
    string notification_topic_arn = 1 [json_name = "notification_topic_arn"];
  }
}

//AwsSchemasDiscoverer version is 0
message AwsSchemasDiscoverer {
  string arn = 1;

  string description = 2;

  string id = 3;

  string source_arn = 4 [json_name = "source_arn"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsSchemasRegistry version is 0
message AwsSchemasRegistry {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsSchemasSchema version is 0
message AwsSchemasSchema {
  string arn = 1;

  string content = 2;

  string description = 3;

  string id = 4;

  string last_modified = 5 [json_name = "last_modified"];

  string name = 6;

  string registry_name = 7 [json_name = "registry_name"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  string type = 10;

  string version = 11;

  string version_created_date = 12 [json_name = "version_created_date"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsSecretsmanagerSecret version is 0
message AwsSecretsmanagerSecret {
  string arn = 1;

  string description = 2;

  bool force_overwrite_replica_secret = 3 [json_name = "force_overwrite_replica_secret"];

  string id = 4;

  string kms_key_id = 5 [json_name = "kms_key_id"];

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string policy = 8;

  int64 recovery_window_in_days = 9 [json_name = "recovery_window_in_days"];

  bool rotation_enabled = 10 [json_name = "rotation_enabled"];

  string rotation_lambda_arn = 11 [json_name = "rotation_lambda_arn"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  repeated Replica replica = 14;

  RotationRules rotation_rules = 15 [json_name = "rotation_rules"];

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message Replica {
    string kms_key_id = 1 [json_name = "kms_key_id"];

    string last_accessed_date = 2 [json_name = "last_accessed_date"];

    string region = 3;

    string status = 4;

    string status_message = 5 [json_name = "status_message"];
  }

  message RotationRules {
    int64 automatically_after_days = 1 [json_name = "automatically_after_days"];
  }
}

//AwsSecretsmanagerSecretPolicy version is 0
message AwsSecretsmanagerSecretPolicy {
  bool block_public_policy = 1 [json_name = "block_public_policy"];

  string id = 2;

  string policy = 3;

  string secret_arn = 4 [json_name = "secret_arn"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsSecretsmanagerSecretRotation version is 0
message AwsSecretsmanagerSecretRotation {
  string id = 1;

  bool rotation_enabled = 2 [json_name = "rotation_enabled"];

  string rotation_lambda_arn = 3 [json_name = "rotation_lambda_arn"];

  string secret_id = 4 [json_name = "secret_id"];

  map<string, string> tags = 5;

  RotationRules rotation_rules = 6 [json_name = "rotation_rules"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message RotationRules {
    int64 automatically_after_days = 1 [json_name = "automatically_after_days"];
  }
}

//AwsSecretsmanagerSecretVersion version is 0
message AwsSecretsmanagerSecretVersion {
  string arn = 1;

  string id = 2;

  string secret_binary = 3 [json_name = "secret_binary"];

  string secret_id = 4 [json_name = "secret_id"];

  string secret_string = 5 [json_name = "secret_string"];

  string version_id = 6 [json_name = "version_id"];

  repeated string version_stages = 7 [json_name = "version_stages"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsSecurityGroup version is 1
message AwsSecurityGroup {
  string arn = 1;

  string description = 2;

  repeated Egress egress = 3;

  string id = 4;

  repeated Ingress ingress = 5;

  string name = 6;

  string name_prefix = 7 [json_name = "name_prefix"];

  string owner_id = 8 [json_name = "owner_id"];

  bool revoke_rules_on_delete = 9 [json_name = "revoke_rules_on_delete"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  string vpc_id = 12 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 13;

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message Egress {
    //cidr_blocks: list of string
    repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

    //description: string
    string description = 2;

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //ipv6_cidr_blocks: list of string
    repeated string ipv6_cidr_blocks = 4 [json_name = "ipv6_cidr_blocks"];

    //prefix_list_ids: list of string
    repeated string prefix_list_ids = 5 [json_name = "prefix_list_ids"];

    //protocol: string
    string protocol = 6;

    //security_groups: set of string
    repeated string security_groups = 7 [json_name = "security_groups"];

    //self: bool
    bool self = 8;

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }

  message Ingress {
    //cidr_blocks: list of string
    repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

    //description: string
    string description = 2;

    //from_port: number
    int64 from_port = 3 [json_name = "from_port"];

    //ipv6_cidr_blocks: list of string
    repeated string ipv6_cidr_blocks = 4 [json_name = "ipv6_cidr_blocks"];

    //prefix_list_ids: list of string
    repeated string prefix_list_ids = 5 [json_name = "prefix_list_ids"];

    //protocol: string
    string protocol = 6;

    //security_groups: set of string
    repeated string security_groups = 7 [json_name = "security_groups"];

    //self: bool
    bool self = 8;

    //to_port: number
    int64 to_port = 9 [json_name = "to_port"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsSecurityGroupRule version is 2
message AwsSecurityGroupRule {
  repeated string cidr_blocks = 1 [json_name = "cidr_blocks"];

  string description = 2;

  int64 from_port = 3 [json_name = "from_port"];

  string id = 4;

  repeated string ipv6_cidr_blocks = 5 [json_name = "ipv6_cidr_blocks"];

  repeated string prefix_list_ids = 6 [json_name = "prefix_list_ids"];

  string protocol = 7;

  string security_group_id = 8 [json_name = "security_group_id"];

  bool self = 9;

  string source_security_group_id = 10 [json_name = "source_security_group_id"];

  int64 to_port = 11 [json_name = "to_port"];

  //Type of rule, ingress (inbound) or egress (outbound).
  string type = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsSecurityhubAccount version is 0
message AwsSecurityhubAccount {
  string id = 1;

  repeated string depends_on = 2;

  int32 count = 3;

  map<string, string> for_each = 4;

  string provider = 5;

  terraform.meta.Lifecycle lifecycle = 6;
}

//AwsSecurityhubActionTarget version is 0
message AwsSecurityhubActionTarget {
  string arn = 1;

  string description = 2;

  string id = 3;

  string identifier = 4;

  string name = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsSecurityhubFindingAggregator version is 0
message AwsSecurityhubFindingAggregator {
  string id = 1;

  string linking_mode = 2 [json_name = "linking_mode"];

  repeated string specified_regions = 3 [json_name = "specified_regions"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSecurityhubInsight version is 0
message AwsSecurityhubInsight {
  string arn = 1;

  string group_by_attribute = 2 [json_name = "group_by_attribute"];

  string id = 3;

  string name = 4;

  Filters filters = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Filters {
    repeated AwsAccountId aws_account_id = 1 [json_name = "aws_account_id"];

    repeated CompanyName company_name = 2 [json_name = "company_name"];

    repeated ComplianceStatus compliance_status = 3 [json_name = "compliance_status"];

    repeated Confidence confidence = 4;

    repeated CreatedAt created_at = 5 [json_name = "created_at"];

    repeated Criticality criticality = 6;

    repeated Description description = 7;

    repeated FindingProviderFieldsConfidence finding_provider_fields_confidence = 8 [json_name = "finding_provider_fields_confidence"];

    repeated FindingProviderFieldsCriticality finding_provider_fields_criticality = 9 [json_name = "finding_provider_fields_criticality"];

    repeated FindingProviderFieldsRelatedFindingsId finding_provider_fields_related_findings_id = 10 [json_name = "finding_provider_fields_related_findings_id"];

    repeated FindingProviderFieldsRelatedFindingsProductArn finding_provider_fields_related_findings_product_arn = 11 [json_name = "finding_provider_fields_related_findings_product_arn"];

    repeated FindingProviderFieldsSeverityLabel finding_provider_fields_severity_label = 12 [json_name = "finding_provider_fields_severity_label"];

    repeated FindingProviderFieldsSeverityOriginal finding_provider_fields_severity_original = 13 [json_name = "finding_provider_fields_severity_original"];

    repeated FindingProviderFieldsTypes finding_provider_fields_types = 14 [json_name = "finding_provider_fields_types"];

    repeated FirstObservedAt first_observed_at = 15 [json_name = "first_observed_at"];

    repeated GeneratorId generator_id = 16 [json_name = "generator_id"];

    repeated Id id = 17;

    repeated Keyword keyword = 18;

    repeated LastObservedAt last_observed_at = 19 [json_name = "last_observed_at"];

    repeated MalwareName malware_name = 20 [json_name = "malware_name"];

    repeated MalwarePath malware_path = 21 [json_name = "malware_path"];

    repeated MalwareState malware_state = 22 [json_name = "malware_state"];

    repeated MalwareType malware_type = 23 [json_name = "malware_type"];

    repeated NetworkDestinationDomain network_destination_domain = 24 [json_name = "network_destination_domain"];

    repeated NetworkDestinationIpv4 network_destination_ipv4 = 25 [json_name = "network_destination_ipv4"];

    repeated NetworkDestinationIpv6 network_destination_ipv6 = 26 [json_name = "network_destination_ipv6"];

    repeated NetworkDestinationPort network_destination_port = 27 [json_name = "network_destination_port"];

    repeated NetworkDirection network_direction = 28 [json_name = "network_direction"];

    repeated NetworkProtocol network_protocol = 29 [json_name = "network_protocol"];

    repeated NetworkSourceDomain network_source_domain = 30 [json_name = "network_source_domain"];

    repeated NetworkSourceIpv4 network_source_ipv4 = 31 [json_name = "network_source_ipv4"];

    repeated NetworkSourceIpv6 network_source_ipv6 = 32 [json_name = "network_source_ipv6"];

    repeated NetworkSourceMac network_source_mac = 33 [json_name = "network_source_mac"];

    repeated NetworkSourcePort network_source_port = 34 [json_name = "network_source_port"];

    repeated NoteText note_text = 35 [json_name = "note_text"];

    repeated NoteUpdatedAt note_updated_at = 36 [json_name = "note_updated_at"];

    repeated NoteUpdatedBy note_updated_by = 37 [json_name = "note_updated_by"];

    repeated ProcessLaunchedAt process_launched_at = 38 [json_name = "process_launched_at"];

    repeated ProcessName process_name = 39 [json_name = "process_name"];

    repeated ProcessParentPid process_parent_pid = 40 [json_name = "process_parent_pid"];

    repeated ProcessPath process_path = 41 [json_name = "process_path"];

    repeated ProcessPid process_pid = 42 [json_name = "process_pid"];

    repeated ProcessTerminatedAt process_terminated_at = 43 [json_name = "process_terminated_at"];

    repeated ProductArn product_arn = 44 [json_name = "product_arn"];

    repeated ProductFields product_fields = 45 [json_name = "product_fields"];

    repeated ProductName product_name = 46 [json_name = "product_name"];

    repeated RecommendationText recommendation_text = 47 [json_name = "recommendation_text"];

    repeated RecordState record_state = 48 [json_name = "record_state"];

    repeated RelatedFindingsId related_findings_id = 49 [json_name = "related_findings_id"];

    repeated RelatedFindingsProductArn related_findings_product_arn = 50 [json_name = "related_findings_product_arn"];

    repeated ResourceAwsEc2InstanceIamInstanceProfileArn resource_aws_ec2_instance_iam_instance_profile_arn = 51 [json_name = "resource_aws_ec2_instance_iam_instance_profile_arn"];

    repeated ResourceAwsEc2InstanceImageId resource_aws_ec2_instance_image_id = 52 [json_name = "resource_aws_ec2_instance_image_id"];

    repeated ResourceAwsEc2InstanceIpv4Addresses resource_aws_ec2_instance_ipv4_addresses = 53 [json_name = "resource_aws_ec2_instance_ipv4_addresses"];

    repeated ResourceAwsEc2InstanceIpv6Addresses resource_aws_ec2_instance_ipv6_addresses = 54 [json_name = "resource_aws_ec2_instance_ipv6_addresses"];

    repeated ResourceAwsEc2InstanceKeyName resource_aws_ec2_instance_key_name = 55 [json_name = "resource_aws_ec2_instance_key_name"];

    repeated ResourceAwsEc2InstanceLaunchedAt resource_aws_ec2_instance_launched_at = 56 [json_name = "resource_aws_ec2_instance_launched_at"];

    repeated ResourceAwsEc2InstanceSubnetId resource_aws_ec2_instance_subnet_id = 57 [json_name = "resource_aws_ec2_instance_subnet_id"];

    repeated ResourceAwsEc2InstanceType resource_aws_ec2_instance_type = 58 [json_name = "resource_aws_ec2_instance_type"];

    repeated ResourceAwsEc2InstanceVpcId resource_aws_ec2_instance_vpc_id = 59 [json_name = "resource_aws_ec2_instance_vpc_id"];

    repeated ResourceAwsIamAccessKeyCreatedAt resource_aws_iam_access_key_created_at = 60 [json_name = "resource_aws_iam_access_key_created_at"];

    repeated ResourceAwsIamAccessKeyStatus resource_aws_iam_access_key_status = 61 [json_name = "resource_aws_iam_access_key_status"];

    repeated ResourceAwsIamAccessKeyUserName resource_aws_iam_access_key_user_name = 62 [json_name = "resource_aws_iam_access_key_user_name"];

    repeated ResourceAwsS3BucketOwnerId resource_aws_s3_bucket_owner_id = 63 [json_name = "resource_aws_s3_bucket_owner_id"];

    repeated ResourceAwsS3BucketOwnerName resource_aws_s3_bucket_owner_name = 64 [json_name = "resource_aws_s3_bucket_owner_name"];

    repeated ResourceContainerImageId resource_container_image_id = 65 [json_name = "resource_container_image_id"];

    repeated ResourceContainerImageName resource_container_image_name = 66 [json_name = "resource_container_image_name"];

    repeated ResourceContainerLaunchedAt resource_container_launched_at = 67 [json_name = "resource_container_launched_at"];

    repeated ResourceContainerName resource_container_name = 68 [json_name = "resource_container_name"];

    repeated ResourceDetailsOther resource_details_other = 69 [json_name = "resource_details_other"];

    repeated ResourceId resource_id = 70 [json_name = "resource_id"];

    repeated ResourcePartition resource_partition = 71 [json_name = "resource_partition"];

    repeated ResourceRegion resource_region = 72 [json_name = "resource_region"];

    repeated ResourceTags resource_tags = 73 [json_name = "resource_tags"];

    repeated ResourceType resource_type = 74 [json_name = "resource_type"];

    repeated SeverityLabel severity_label = 75 [json_name = "severity_label"];

    repeated SourceUrl source_url = 76 [json_name = "source_url"];

    repeated ThreatIntelIndicatorCategory threat_intel_indicator_category = 77 [json_name = "threat_intel_indicator_category"];

    repeated ThreatIntelIndicatorLastObservedAt threat_intel_indicator_last_observed_at = 78 [json_name = "threat_intel_indicator_last_observed_at"];

    repeated ThreatIntelIndicatorSource threat_intel_indicator_source = 79 [json_name = "threat_intel_indicator_source"];

    repeated ThreatIntelIndicatorSourceUrl threat_intel_indicator_source_url = 80 [json_name = "threat_intel_indicator_source_url"];

    repeated ThreatIntelIndicatorType threat_intel_indicator_type = 81 [json_name = "threat_intel_indicator_type"];

    repeated ThreatIntelIndicatorValue threat_intel_indicator_value = 82 [json_name = "threat_intel_indicator_value"];

    repeated Title title = 83;

    repeated Type type = 84;

    repeated UpdatedAt updated_at = 85 [json_name = "updated_at"];

    repeated UserDefinedValues user_defined_values = 86 [json_name = "user_defined_values"];

    repeated VerificationState verification_state = 87 [json_name = "verification_state"];

    repeated WorkflowStatus workflow_status = 88 [json_name = "workflow_status"];

    message AwsAccountId {
      string comparison = 1;

      string value = 2;
    }

    message CompanyName {
      string comparison = 1;

      string value = 2;
    }

    message ComplianceStatus {
      string comparison = 1;

      string value = 2;
    }

    message Confidence {
      string eq = 1;

      string gte = 2;

      string lte = 3;
    }

    message CreatedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message Criticality {
      string eq = 1;

      string gte = 2;

      string lte = 3;
    }

    message Description {
      string comparison = 1;

      string value = 2;
    }

    message FindingProviderFieldsConfidence {
      string eq = 1;

      string gte = 2;

      string lte = 3;
    }

    message FindingProviderFieldsCriticality {
      string eq = 1;

      string gte = 2;

      string lte = 3;
    }

    message FindingProviderFieldsRelatedFindingsId {
      string comparison = 1;

      string value = 2;
    }

    message FindingProviderFieldsRelatedFindingsProductArn {
      string comparison = 1;

      string value = 2;
    }

    message FindingProviderFieldsSeverityLabel {
      string comparison = 1;

      string value = 2;
    }

    message FindingProviderFieldsSeverityOriginal {
      string comparison = 1;

      string value = 2;
    }

    message FindingProviderFieldsTypes {
      string comparison = 1;

      string value = 2;
    }

    message FirstObservedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message GeneratorId {
      string comparison = 1;

      string value = 2;
    }

    message Id {
      string comparison = 1;

      string value = 2;
    }

    message Keyword {
      string value = 1;
    }

    message LastObservedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message MalwareName {
      string comparison = 1;

      string value = 2;
    }

    message MalwarePath {
      string comparison = 1;

      string value = 2;
    }

    message MalwareState {
      string comparison = 1;

      string value = 2;
    }

    message MalwareType {
      string comparison = 1;

      string value = 2;
    }

    message NetworkDestinationDomain {
      string comparison = 1;

      string value = 2;
    }

    message NetworkDestinationIpv4 {
      string cidr = 1;
    }

    message NetworkDestinationIpv6 {
      string cidr = 1;
    }

    message NetworkDestinationPort {
      string eq = 1;

      string gte = 2;

      string lte = 3;
    }

    message NetworkDirection {
      string comparison = 1;

      string value = 2;
    }

    message NetworkProtocol {
      string comparison = 1;

      string value = 2;
    }

    message NetworkSourceDomain {
      string comparison = 1;

      string value = 2;
    }

    message NetworkSourceIpv4 {
      string cidr = 1;
    }

    message NetworkSourceIpv6 {
      string cidr = 1;
    }

    message NetworkSourceMac {
      string comparison = 1;

      string value = 2;
    }

    message NetworkSourcePort {
      string eq = 1;

      string gte = 2;

      string lte = 3;
    }

    message NoteText {
      string comparison = 1;

      string value = 2;
    }

    message NoteUpdatedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message NoteUpdatedBy {
      string comparison = 1;

      string value = 2;
    }

    message ProcessLaunchedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message ProcessName {
      string comparison = 1;

      string value = 2;
    }

    message ProcessParentPid {
      string eq = 1;

      string gte = 2;

      string lte = 3;
    }

    message ProcessPath {
      string comparison = 1;

      string value = 2;
    }

    message ProcessPid {
      string eq = 1;

      string gte = 2;

      string lte = 3;
    }

    message ProcessTerminatedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message ProductArn {
      string comparison = 1;

      string value = 2;
    }

    message ProductFields {
      string comparison = 1;

      string key = 2;

      string value = 3;
    }

    message ProductName {
      string comparison = 1;

      string value = 2;
    }

    message RecommendationText {
      string comparison = 1;

      string value = 2;
    }

    message RecordState {
      string comparison = 1;

      string value = 2;
    }

    message RelatedFindingsId {
      string comparison = 1;

      string value = 2;
    }

    message RelatedFindingsProductArn {
      string comparison = 1;

      string value = 2;
    }

    message ResourceAwsEc2InstanceIamInstanceProfileArn {
      string comparison = 1;

      string value = 2;
    }

    message ResourceAwsEc2InstanceImageId {
      string comparison = 1;

      string value = 2;
    }

    message ResourceAwsEc2InstanceIpv4Addresses {
      string cidr = 1;
    }

    message ResourceAwsEc2InstanceIpv6Addresses {
      string cidr = 1;
    }

    message ResourceAwsEc2InstanceKeyName {
      string comparison = 1;

      string value = 2;
    }

    message ResourceAwsEc2InstanceLaunchedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message ResourceAwsEc2InstanceSubnetId {
      string comparison = 1;

      string value = 2;
    }

    message ResourceAwsEc2InstanceType {
      string comparison = 1;

      string value = 2;
    }

    message ResourceAwsEc2InstanceVpcId {
      string comparison = 1;

      string value = 2;
    }

    message ResourceAwsIamAccessKeyCreatedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message ResourceAwsIamAccessKeyStatus {
      string comparison = 1;

      string value = 2;
    }

    message ResourceAwsIamAccessKeyUserName {
      string comparison = 1;

      string value = 2;
    }

    message ResourceAwsS3BucketOwnerId {
      string comparison = 1;

      string value = 2;
    }

    message ResourceAwsS3BucketOwnerName {
      string comparison = 1;

      string value = 2;
    }

    message ResourceContainerImageId {
      string comparison = 1;

      string value = 2;
    }

    message ResourceContainerImageName {
      string comparison = 1;

      string value = 2;
    }

    message ResourceContainerLaunchedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message ResourceContainerName {
      string comparison = 1;

      string value = 2;
    }

    message ResourceDetailsOther {
      string comparison = 1;

      string key = 2;

      string value = 3;
    }

    message ResourceId {
      string comparison = 1;

      string value = 2;
    }

    message ResourcePartition {
      string comparison = 1;

      string value = 2;
    }

    message ResourceRegion {
      string comparison = 1;

      string value = 2;
    }

    message ResourceTags {
      string comparison = 1;

      string key = 2;

      string value = 3;
    }

    message ResourceType {
      string comparison = 1;

      string value = 2;
    }

    message SeverityLabel {
      string comparison = 1;

      string value = 2;
    }

    message SourceUrl {
      string comparison = 1;

      string value = 2;
    }

    message ThreatIntelIndicatorCategory {
      string comparison = 1;

      string value = 2;
    }

    message ThreatIntelIndicatorLastObservedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message ThreatIntelIndicatorSource {
      string comparison = 1;

      string value = 2;
    }

    message ThreatIntelIndicatorSourceUrl {
      string comparison = 1;

      string value = 2;
    }

    message ThreatIntelIndicatorType {
      string comparison = 1;

      string value = 2;
    }

    message ThreatIntelIndicatorValue {
      string comparison = 1;

      string value = 2;
    }

    message Title {
      string comparison = 1;

      string value = 2;
    }

    message Type {
      string comparison = 1;

      string value = 2;
    }

    message UpdatedAt {
      string end = 1;

      string start = 2;

      DateRange date_range = 3 [json_name = "date_range"];

      message DateRange {
        string unit = 1;

        int64 value = 2;
      }
    }

    message UserDefinedValues {
      string comparison = 1;

      string key = 2;

      string value = 3;
    }

    message VerificationState {
      string comparison = 1;

      string value = 2;
    }

    message WorkflowStatus {
      string comparison = 1;

      string value = 2;
    }
  }
}

//AwsSecurityhubInviteAccepter version is 0
message AwsSecurityhubInviteAccepter {
  string id = 1;

  string invitation_id = 2 [json_name = "invitation_id"];

  string master_id = 3 [json_name = "master_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSecurityhubMember version is 0
message AwsSecurityhubMember {
  string account_id = 1 [json_name = "account_id"];

  string email = 2;

  string id = 3;

  bool invite = 4;

  string master_id = 5 [json_name = "master_id"];

  string member_status = 6 [json_name = "member_status"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsSecurityhubOrganizationAdminAccount version is 0
message AwsSecurityhubOrganizationAdminAccount {
  string admin_account_id = 1 [json_name = "admin_account_id"];

  string id = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsSecurityhubOrganizationConfiguration version is 0
message AwsSecurityhubOrganizationConfiguration {
  bool auto_enable = 1 [json_name = "auto_enable"];

  string id = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsSecurityhubProductSubscription version is 0
message AwsSecurityhubProductSubscription {
  string arn = 1;

  string id = 2;

  string product_arn = 3 [json_name = "product_arn"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSecurityhubStandardsControl version is 0
message AwsSecurityhubStandardsControl {
  string control_id = 1 [json_name = "control_id"];

  string control_status = 2 [json_name = "control_status"];

  string control_status_updated_at = 3 [json_name = "control_status_updated_at"];

  string description = 4;

  string disabled_reason = 5 [json_name = "disabled_reason"];

  string id = 6;

  repeated string related_requirements = 7 [json_name = "related_requirements"];

  string remediation_url = 8 [json_name = "remediation_url"];

  string severity_rating = 9 [json_name = "severity_rating"];

  string standards_control_arn = 10 [json_name = "standards_control_arn"];

  string title = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsSecurityhubStandardsSubscription version is 0
message AwsSecurityhubStandardsSubscription {
  string id = 1;

  string standards_arn = 2 [json_name = "standards_arn"];

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsServerlessapplicationrepositoryCloudformationStack version is 0
message AwsServerlessapplicationrepositoryCloudformationStack {
  string application_id = 1 [json_name = "application_id"];

  repeated string capabilities = 2;

  string id = 3;

  string name = 4;

  map<string, string> outputs = 5;

  map<string, string> parameters = 6;

  string semantic_version = 7 [json_name = "semantic_version"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated Timeouts timeouts = 10;

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsServiceDiscoveryHttpNamespace version is 0
message AwsServiceDiscoveryHttpNamespace {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsServiceDiscoveryInstance version is 0
message AwsServiceDiscoveryInstance {
  map<string, string> attributes = 1;

  string id = 2;

  string instance_id = 3 [json_name = "instance_id"];

  string service_id = 4 [json_name = "service_id"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsServiceDiscoveryPrivateDnsNamespace version is 0
message AwsServiceDiscoveryPrivateDnsNamespace {
  string arn = 1;

  string description = 2;

  string hosted_zone = 3 [json_name = "hosted_zone"];

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string vpc = 8;

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsServiceDiscoveryPublicDnsNamespace version is 0
message AwsServiceDiscoveryPublicDnsNamespace {
  string arn = 1;

  string description = 2;

  string hosted_zone = 3 [json_name = "hosted_zone"];

  string id = 4;

  string name = 5;

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsServiceDiscoveryService version is 0
message AwsServiceDiscoveryService {
  string arn = 1;

  string description = 2;

  bool force_destroy = 3 [json_name = "force_destroy"];

  string id = 4;

  string name = 5;

  string namespace_id = 6 [json_name = "namespace_id"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  DnsConfig dns_config = 9 [json_name = "dns_config"];

  HealthCheckConfig health_check_config = 10 [json_name = "health_check_config"];

  HealthCheckCustomConfig health_check_custom_config = 11 [json_name = "health_check_custom_config"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;

  message DnsConfig {
    string namespace_id = 1 [json_name = "namespace_id"];

    string routing_policy = 2 [json_name = "routing_policy"];

    repeated DnsRecords dns_records = 3 [json_name = "dns_records"];

    message DnsRecords {
      int64 ttl = 1;

      string type = 2;
    }
  }

  message HealthCheckConfig {
    int64 failure_threshold = 1 [json_name = "failure_threshold"];

    string resource_path = 2 [json_name = "resource_path"];

    string type = 3;
  }

  message HealthCheckCustomConfig {
    int64 failure_threshold = 1 [json_name = "failure_threshold"];
  }
}

//AwsServicecatalogBudgetResourceAssociation version is 0
message AwsServicecatalogBudgetResourceAssociation {
  string budget_name = 1 [json_name = "budget_name"];

  string id = 2;

  string resource_id = 3 [json_name = "resource_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsServicecatalogConstraint version is 0
message AwsServicecatalogConstraint {
  string accept_language = 1 [json_name = "accept_language"];

  string description = 2;

  string id = 3;

  string owner = 4;

  string parameters = 5;

  string portfolio_id = 6 [json_name = "portfolio_id"];

  string product_id = 7 [json_name = "product_id"];

  string status = 8;

  string type = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsServicecatalogOrganizationsAccess version is 0
message AwsServicecatalogOrganizationsAccess {
  bool enabled = 1;

  string id = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsServicecatalogPortfolio version is 0
message AwsServicecatalogPortfolio {
  string arn = 1;

  string created_time = 2 [json_name = "created_time"];

  string description = 3;

  string id = 4;

  string name = 5;

  string provider_name = 6 [json_name = "provider_name"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated Timeouts timeouts = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsServicecatalogPortfolioShare version is 0
message AwsServicecatalogPortfolioShare {
  string accept_language = 1 [json_name = "accept_language"];

  bool accepted = 2;

  string id = 3;

  string portfolio_id = 4 [json_name = "portfolio_id"];

  string principal_id = 5 [json_name = "principal_id"];

  bool share_tag_options = 6 [json_name = "share_tag_options"];

  string type = 7;

  bool wait_for_acceptance = 8 [json_name = "wait_for_acceptance"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsServicecatalogPrincipalPortfolioAssociation version is 0
message AwsServicecatalogPrincipalPortfolioAssociation {
  string accept_language = 1 [json_name = "accept_language"];

  string id = 2;

  string portfolio_id = 3 [json_name = "portfolio_id"];

  string principal_arn = 4 [json_name = "principal_arn"];

  string principal_type = 5 [json_name = "principal_type"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsServicecatalogProduct version is 0
message AwsServicecatalogProduct {
  string accept_language = 1 [json_name = "accept_language"];

  string arn = 2;

  string created_time = 3 [json_name = "created_time"];

  string description = 4;

  string distributor = 5;

  bool has_default_path = 6 [json_name = "has_default_path"];

  string id = 7;

  string name = 8;

  string owner = 9;

  string status = 10;

  string support_description = 11 [json_name = "support_description"];

  string support_email = 12 [json_name = "support_email"];

  string support_url = 13 [json_name = "support_url"];

  map<string, string> tags = 14;

  map<string, string> tags_all = 15 [json_name = "tags_all"];

  string type = 16;

  ProvisioningArtifactParameters provisioning_artifact_parameters = 17 [json_name = "provisioning_artifact_parameters"];

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message ProvisioningArtifactParameters {
    string description = 1;

    bool disable_template_validation = 2 [json_name = "disable_template_validation"];

    string name = 3;

    string template_physical_id = 4 [json_name = "template_physical_id"];

    string template_url = 5 [json_name = "template_url"];

    string type = 6;
  }
}

//AwsServicecatalogProductPortfolioAssociation version is 0
message AwsServicecatalogProductPortfolioAssociation {
  string accept_language = 1 [json_name = "accept_language"];

  string id = 2;

  string portfolio_id = 3 [json_name = "portfolio_id"];

  string product_id = 4 [json_name = "product_id"];

  string source_portfolio_id = 5 [json_name = "source_portfolio_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsServicecatalogProvisionedProduct version is 0
message AwsServicecatalogProvisionedProduct {
  string accept_language = 1 [json_name = "accept_language"];

  string arn = 2;

  repeated string cloudwatch_dashboard_names = 3 [json_name = "cloudwatch_dashboard_names"];

  string created_time = 4 [json_name = "created_time"];

  string id = 5;

  bool ignore_errors = 6 [json_name = "ignore_errors"];

  string last_provisioning_record_id = 7 [json_name = "last_provisioning_record_id"];

  string last_record_id = 8 [json_name = "last_record_id"];

  string last_successful_provisioning_record_id = 9 [json_name = "last_successful_provisioning_record_id"];

  string launch_role_arn = 10 [json_name = "launch_role_arn"];

  string name = 11;

  repeated string notification_arns = 12 [json_name = "notification_arns"];

  string path_id = 13 [json_name = "path_id"];

  string path_name = 14 [json_name = "path_name"];

  string product_id = 15 [json_name = "product_id"];

  string product_name = 16 [json_name = "product_name"];

  string provisioning_artifact_id = 17 [json_name = "provisioning_artifact_id"];

  string provisioning_artifact_name = 18 [json_name = "provisioning_artifact_name"];

  bool retain_physical_resources = 19 [json_name = "retain_physical_resources"];

  string status = 20;

  string status_message = 21 [json_name = "status_message"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  string type = 24;

  repeated ProvisioningParameters provisioning_parameters = 25 [json_name = "provisioning_parameters"];

  StackSetProvisioningPreferences stack_set_provisioning_preferences = 26 [json_name = "stack_set_provisioning_preferences"];

  repeated Timeouts timeouts = 27;

  repeated string depends_on = 28;

  int32 count = 29;

  map<string, string> for_each = 30;

  string provider = 31;

  terraform.meta.Lifecycle lifecycle = 32;

  message ProvisioningParameters {
    string key = 1;

    bool use_previous_value = 2 [json_name = "use_previous_value"];

    string value = 3;
  }

  message StackSetProvisioningPreferences {
    repeated string accounts = 1;

    int64 failure_tolerance_count = 2 [json_name = "failure_tolerance_count"];

    int64 failure_tolerance_percentage = 3 [json_name = "failure_tolerance_percentage"];

    int64 max_concurrency_count = 4 [json_name = "max_concurrency_count"];

    int64 max_concurrency_percentage = 5 [json_name = "max_concurrency_percentage"];

    repeated string regions = 6;
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsServicecatalogProvisioningArtifact version is 0
message AwsServicecatalogProvisioningArtifact {
  string accept_language = 1 [json_name = "accept_language"];

  bool active = 2;

  string created_time = 3 [json_name = "created_time"];

  string description = 4;

  bool disable_template_validation = 5 [json_name = "disable_template_validation"];

  string guidance = 6;

  string id = 7;

  string name = 8;

  string product_id = 9 [json_name = "product_id"];

  string template_physical_id = 10 [json_name = "template_physical_id"];

  string template_url = 11 [json_name = "template_url"];

  string type = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;
}

//AwsServicecatalogServiceAction version is 0
message AwsServicecatalogServiceAction {
  string accept_language = 1 [json_name = "accept_language"];

  string description = 2;

  string id = 3;

  string name = 4;

  Definition definition = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message Definition {
    string assume_role = 1 [json_name = "assume_role"];

    string name = 2;

    string parameters = 3;

    string type = 4;

    string version = 5;
  }
}

//AwsServicecatalogTagOption version is 0
message AwsServicecatalogTagOption {
  bool active = 1;

  string id = 2;

  string key = 3;

  string owner = 4;

  string value = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsServicecatalogTagOptionResourceAssociation version is 0
message AwsServicecatalogTagOptionResourceAssociation {
  string id = 1;

  string resource_arn = 2 [json_name = "resource_arn"];

  string resource_created_time = 3 [json_name = "resource_created_time"];

  string resource_description = 4 [json_name = "resource_description"];

  string resource_id = 5 [json_name = "resource_id"];

  string resource_name = 6 [json_name = "resource_name"];

  string tag_option_id = 7 [json_name = "tag_option_id"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsServicequotasServiceQuota version is 0
message AwsServicequotasServiceQuota {
  bool adjustable = 1;

  string arn = 2;

  int64 default_value = 3 [json_name = "default_value"];

  string id = 4;

  string quota_code = 5 [json_name = "quota_code"];

  string quota_name = 6 [json_name = "quota_name"];

  string request_id = 7 [json_name = "request_id"];

  string request_status = 8 [json_name = "request_status"];

  string service_code = 9 [json_name = "service_code"];

  string service_name = 10 [json_name = "service_name"];

  int64 value = 11;

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsSesActiveReceiptRuleSet version is 0
message AwsSesActiveReceiptRuleSet {
  string arn = 1;

  string id = 2;

  string rule_set_name = 3 [json_name = "rule_set_name"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSesConfigurationSet version is 0
message AwsSesConfigurationSet {
  string arn = 1;

  string id = 2;

  string last_fresh_start = 3 [json_name = "last_fresh_start"];

  string name = 4;

  bool reputation_metrics_enabled = 5 [json_name = "reputation_metrics_enabled"];

  bool sending_enabled = 6 [json_name = "sending_enabled"];

  DeliveryOptions delivery_options = 7 [json_name = "delivery_options"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message DeliveryOptions {
    string tls_policy = 1 [json_name = "tls_policy"];
  }
}

//AwsSesDomainDkim version is 0
message AwsSesDomainDkim {
  repeated string dkim_tokens = 1 [json_name = "dkim_tokens"];

  string domain = 2;

  string id = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSesDomainIdentity version is 0
message AwsSesDomainIdentity {
  string arn = 1;

  string domain = 2;

  string id = 3;

  string verification_token = 4 [json_name = "verification_token"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsSesDomainIdentityVerification version is 0
message AwsSesDomainIdentityVerification {
  string arn = 1;

  string domain = 2;

  string id = 3;

  repeated Timeouts timeouts = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;
  }
}

//AwsSesDomainMailFrom version is 0
message AwsSesDomainMailFrom {
  string behavior_on_mx_failure = 1 [json_name = "behavior_on_mx_failure"];

  string domain = 2;

  string id = 3;

  string mail_from_domain = 4 [json_name = "mail_from_domain"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsSesEmailIdentity version is 0
message AwsSesEmailIdentity {
  string arn = 1;

  string email = 2;

  string id = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSesEventDestination version is 0
message AwsSesEventDestination {
  string arn = 1;

  string configuration_set_name = 2 [json_name = "configuration_set_name"];

  bool enabled = 3;

  string id = 4;

  repeated string matching_types = 5 [json_name = "matching_types"];

  string name = 6;

  repeated CloudwatchDestination cloudwatch_destination = 7 [json_name = "cloudwatch_destination"];

  KinesisDestination kinesis_destination = 8 [json_name = "kinesis_destination"];

  SnsDestination sns_destination = 9 [json_name = "sns_destination"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message CloudwatchDestination {
    string default_value = 1 [json_name = "default_value"];

    string dimension_name = 2 [json_name = "dimension_name"];

    string value_source = 3 [json_name = "value_source"];
  }

  message KinesisDestination {
    string role_arn = 1 [json_name = "role_arn"];

    string stream_arn = 2 [json_name = "stream_arn"];
  }

  message SnsDestination {
    string topic_arn = 1 [json_name = "topic_arn"];
  }
}

//AwsSesIdentityNotificationTopic version is 0
message AwsSesIdentityNotificationTopic {
  string id = 1;

  string identity = 2;

  bool include_original_headers = 3 [json_name = "include_original_headers"];

  string notification_type = 4 [json_name = "notification_type"];

  string topic_arn = 5 [json_name = "topic_arn"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsSesIdentityPolicy version is 0
message AwsSesIdentityPolicy {
  string id = 1;

  string identity = 2;

  string name = 3;

  string policy = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsSesReceiptFilter version is 0
message AwsSesReceiptFilter {
  string arn = 1;

  string cidr = 2;

  string id = 3;

  string name = 4;

  string policy = 5;

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsSesReceiptRule version is 0
message AwsSesReceiptRule {
  string after = 1;

  string arn = 2;

  bool enabled = 3;

  string id = 4;

  string name = 5;

  repeated string recipients = 6;

  string rule_set_name = 7 [json_name = "rule_set_name"];

  bool scan_enabled = 8 [json_name = "scan_enabled"];

  string tls_policy = 9 [json_name = "tls_policy"];

  repeated AddHeaderAction add_header_action = 10 [json_name = "add_header_action"];

  repeated BounceAction bounce_action = 11 [json_name = "bounce_action"];

  repeated LambdaAction lambda_action = 12 [json_name = "lambda_action"];

  repeated S3Action s3_action = 13 [json_name = "s3_action"];

  repeated SnsAction sns_action = 14 [json_name = "sns_action"];

  repeated StopAction stop_action = 15 [json_name = "stop_action"];

  repeated WorkmailAction workmail_action = 16 [json_name = "workmail_action"];

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message AddHeaderAction {
    string header_name = 1 [json_name = "header_name"];

    string header_value = 2 [json_name = "header_value"];

    int64 position = 3;
  }

  message BounceAction {
    string message = 1;

    int64 position = 2;

    string sender = 3;

    string smtp_reply_code = 4 [json_name = "smtp_reply_code"];

    string status_code = 5 [json_name = "status_code"];

    string topic_arn = 6 [json_name = "topic_arn"];
  }

  message LambdaAction {
    string function_arn = 1 [json_name = "function_arn"];

    string invocation_type = 2 [json_name = "invocation_type"];

    int64 position = 3;

    string topic_arn = 4 [json_name = "topic_arn"];
  }

  message S3Action {
    string bucket_name = 1 [json_name = "bucket_name"];

    string kms_key_arn = 2 [json_name = "kms_key_arn"];

    string object_key_prefix = 3 [json_name = "object_key_prefix"];

    int64 position = 4;

    string topic_arn = 5 [json_name = "topic_arn"];
  }

  message SnsAction {
    string encoding = 1;

    int64 position = 2;

    string topic_arn = 3 [json_name = "topic_arn"];
  }

  message StopAction {
    int64 position = 1;

    string scope = 2;

    string topic_arn = 3 [json_name = "topic_arn"];
  }

  message WorkmailAction {
    string organization_arn = 1 [json_name = "organization_arn"];

    int64 position = 2;

    string topic_arn = 3 [json_name = "topic_arn"];
  }
}

//AwsSesReceiptRuleSet version is 0
message AwsSesReceiptRuleSet {
  string arn = 1;

  string id = 2;

  string rule_set_name = 3 [json_name = "rule_set_name"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSesTemplate version is 0
message AwsSesTemplate {
  string arn = 1;

  string html = 2;

  string id = 3;

  string name = 4;

  string subject = 5;

  string text = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsSfnActivity version is 0
message AwsSfnActivity {
  string creation_date = 1 [json_name = "creation_date"];

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsSfnStateMachine version is 0
message AwsSfnStateMachine {
  string arn = 1;

  string creation_date = 2 [json_name = "creation_date"];

  string definition = 3;

  string id = 4;

  string name = 5;

  string role_arn = 6 [json_name = "role_arn"];

  string status = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  string type = 10;

  LoggingConfiguration logging_configuration = 11 [json_name = "logging_configuration"];

  TracingConfiguration tracing_configuration = 12 [json_name = "tracing_configuration"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message LoggingConfiguration {
    bool include_execution_data = 1 [json_name = "include_execution_data"];

    string level = 2;

    string log_destination = 3 [json_name = "log_destination"];
  }

  message TracingConfiguration {
    bool enabled = 1;
  }
}

//AwsShieldProtection version is 0
message AwsShieldProtection {
  string arn = 1;

  string id = 2;

  string name = 3;

  string resource_arn = 4 [json_name = "resource_arn"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsShieldProtectionGroup version is 0
message AwsShieldProtectionGroup {
  string aggregation = 1;

  string id = 2;

  repeated string members = 3;

  string pattern = 4;

  string protection_group_arn = 5 [json_name = "protection_group_arn"];

  string protection_group_id = 6 [json_name = "protection_group_id"];

  string resource_type = 7 [json_name = "resource_type"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsSignerSigningJob version is 0
message AwsSignerSigningJob {
  string completed_at = 1 [json_name = "completed_at"];

  string created_at = 2 [json_name = "created_at"];

  string id = 3;

  bool ignore_signing_job_failure = 4 [json_name = "ignore_signing_job_failure"];

  string job_id = 5 [json_name = "job_id"];

  string job_invoker = 6 [json_name = "job_invoker"];

  string job_owner = 7 [json_name = "job_owner"];

  string platform_display_name = 8 [json_name = "platform_display_name"];

  string platform_id = 9 [json_name = "platform_id"];

  string profile_name = 10 [json_name = "profile_name"];

  string profile_version = 11 [json_name = "profile_version"];

  string requested_by = 12 [json_name = "requested_by"];

  repeated RevocationRecord revocation_record = 13 [json_name = "revocation_record"];

  string signature_expires_at = 14 [json_name = "signature_expires_at"];

  repeated SignedObject signed_object = 15 [json_name = "signed_object"];

  string status = 16;

  string status_reason = 17 [json_name = "status_reason"];

  Destination destination = 18;

  Source source = 19;

  repeated string depends_on = 20;

  int32 count = 21;

  map<string, string> for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;

  message RevocationRecord {
    //reason: string
    string reason = 1;

    //revoked_at: string
    string revoked_at = 2 [json_name = "revoked_at"];

    //revoked_by: string
    string revoked_by = 3 [json_name = "revoked_by"];
  }

  message SignedObject {
    //s3: list of object
    repeated S3 s3 = 1;

    message S3 {
      //bucket: string
      string bucket = 1;

      //key: string
      string key = 2;
    }
  }

  message Destination {
    S3 s3 = 1;

    message S3 {
      string bucket = 1;

      string prefix = 2;
    }
  }

  message Source {
    S3 s3 = 1;

    message S3 {
      string bucket = 1;

      string key = 2;

      string version = 3;
    }
  }
}

//AwsSignerSigningProfile version is 0
message AwsSignerSigningProfile {
  string arn = 1;

  string id = 2;

  string name = 3;

  string name_prefix = 4 [json_name = "name_prefix"];

  string platform_display_name = 5 [json_name = "platform_display_name"];

  string platform_id = 6 [json_name = "platform_id"];

  repeated RevocationRecord revocation_record = 7 [json_name = "revocation_record"];

  string status = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string version = 11;

  string version_arn = 12 [json_name = "version_arn"];

  SignatureValidityPeriod signature_validity_period = 13 [json_name = "signature_validity_period"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message RevocationRecord {
    //revocation_effective_from: string
    string revocation_effective_from = 1 [json_name = "revocation_effective_from"];

    //revoked_at: string
    string revoked_at = 2 [json_name = "revoked_at"];

    //revoked_by: string
    string revoked_by = 3 [json_name = "revoked_by"];
  }

  message SignatureValidityPeriod {
    string type = 1;

    int64 value = 2;
  }
}

//AwsSignerSigningProfilePermission version is 0
message AwsSignerSigningProfilePermission {
  string action = 1;

  string id = 2;

  string principal = 3;

  string profile_name = 4 [json_name = "profile_name"];

  string profile_version = 5 [json_name = "profile_version"];

  string statement_id = 6 [json_name = "statement_id"];

  string statement_id_prefix = 7 [json_name = "statement_id_prefix"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsSimpledbDomain version is 0
message AwsSimpledbDomain {
  string id = 1;

  string name = 2;

  repeated string depends_on = 3;

  int32 count = 4;

  map<string, string> for_each = 5;

  string provider = 6;

  terraform.meta.Lifecycle lifecycle = 7;
}

//AwsSnapshotCreateVolumePermission version is 0
message AwsSnapshotCreateVolumePermission {
  string account_id = 1 [json_name = "account_id"];

  string id = 2;

  string snapshot_id = 3 [json_name = "snapshot_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSnsPlatformApplication version is 0
message AwsSnsPlatformApplication {
  string arn = 1;

  string event_delivery_failure_topic_arn = 2 [json_name = "event_delivery_failure_topic_arn"];

  string event_endpoint_created_topic_arn = 3 [json_name = "event_endpoint_created_topic_arn"];

  string event_endpoint_deleted_topic_arn = 4 [json_name = "event_endpoint_deleted_topic_arn"];

  string event_endpoint_updated_topic_arn = 5 [json_name = "event_endpoint_updated_topic_arn"];

  string failure_feedback_role_arn = 6 [json_name = "failure_feedback_role_arn"];

  string id = 7;

  string name = 8;

  string platform = 9;

  string platform_credential = 10 [json_name = "platform_credential"];

  string platform_principal = 11 [json_name = "platform_principal"];

  string success_feedback_role_arn = 12 [json_name = "success_feedback_role_arn"];

  string success_feedback_sample_rate = 13 [json_name = "success_feedback_sample_rate"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;
}

//AwsSnsSmsPreferences version is 0
message AwsSnsSmsPreferences {
  string default_sender_id = 1 [json_name = "default_sender_id"];

  string default_sms_type = 2 [json_name = "default_sms_type"];

  string delivery_status_iam_role_arn = 3 [json_name = "delivery_status_iam_role_arn"];

  string delivery_status_success_sampling_rate = 4 [json_name = "delivery_status_success_sampling_rate"];

  string id = 5;

  int64 monthly_spend_limit = 6 [json_name = "monthly_spend_limit"];

  string usage_report_s3_bucket = 7 [json_name = "usage_report_s3_bucket"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsSnsTopic version is 0
message AwsSnsTopic {
  string application_failure_feedback_role_arn = 1 [json_name = "application_failure_feedback_role_arn"];

  string application_success_feedback_role_arn = 2 [json_name = "application_success_feedback_role_arn"];

  int64 application_success_feedback_sample_rate = 3 [json_name = "application_success_feedback_sample_rate"];

  string arn = 4;

  bool content_based_deduplication = 5 [json_name = "content_based_deduplication"];

  string delivery_policy = 6 [json_name = "delivery_policy"];

  string display_name = 7 [json_name = "display_name"];

  bool fifo_topic = 8 [json_name = "fifo_topic"];

  string firehose_failure_feedback_role_arn = 9 [json_name = "firehose_failure_feedback_role_arn"];

  string firehose_success_feedback_role_arn = 10 [json_name = "firehose_success_feedback_role_arn"];

  int64 firehose_success_feedback_sample_rate = 11 [json_name = "firehose_success_feedback_sample_rate"];

  string http_failure_feedback_role_arn = 12 [json_name = "http_failure_feedback_role_arn"];

  string http_success_feedback_role_arn = 13 [json_name = "http_success_feedback_role_arn"];

  int64 http_success_feedback_sample_rate = 14 [json_name = "http_success_feedback_sample_rate"];

  string id = 15;

  string kms_master_key_id = 16 [json_name = "kms_master_key_id"];

  string lambda_failure_feedback_role_arn = 17 [json_name = "lambda_failure_feedback_role_arn"];

  string lambda_success_feedback_role_arn = 18 [json_name = "lambda_success_feedback_role_arn"];

  int64 lambda_success_feedback_sample_rate = 19 [json_name = "lambda_success_feedback_sample_rate"];

  string name = 20;

  string name_prefix = 21 [json_name = "name_prefix"];

  string owner = 22;

  string policy = 23;

  string sqs_failure_feedback_role_arn = 24 [json_name = "sqs_failure_feedback_role_arn"];

  string sqs_success_feedback_role_arn = 25 [json_name = "sqs_success_feedback_role_arn"];

  int64 sqs_success_feedback_sample_rate = 26 [json_name = "sqs_success_feedback_sample_rate"];

  map<string, string> tags = 27;

  map<string, string> tags_all = 28 [json_name = "tags_all"];

  repeated string depends_on = 29;

  int32 count = 30;

  map<string, string> for_each = 31;

  string provider = 32;

  terraform.meta.Lifecycle lifecycle = 33;
}

//AwsSnsTopicPolicy version is 0
message AwsSnsTopicPolicy {
  string arn = 1;

  string id = 2;

  string owner = 3;

  string policy = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsSnsTopicSubscription version is 0
message AwsSnsTopicSubscription {
  string arn = 1;

  int64 confirmation_timeout_in_minutes = 2 [json_name = "confirmation_timeout_in_minutes"];

  bool confirmation_was_authenticated = 3 [json_name = "confirmation_was_authenticated"];

  string delivery_policy = 4 [json_name = "delivery_policy"];

  string endpoint = 5;

  bool endpoint_auto_confirms = 6 [json_name = "endpoint_auto_confirms"];

  string filter_policy = 7 [json_name = "filter_policy"];

  string id = 8;

  string owner_id = 9 [json_name = "owner_id"];

  bool pending_confirmation = 10 [json_name = "pending_confirmation"];

  string protocol = 11;

  bool raw_message_delivery = 12 [json_name = "raw_message_delivery"];

  string redrive_policy = 13 [json_name = "redrive_policy"];

  string subscription_role_arn = 14 [json_name = "subscription_role_arn"];

  string topic_arn = 15 [json_name = "topic_arn"];

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;
}

//AwsSpotDatafeedSubscription version is 0
message AwsSpotDatafeedSubscription {
  string bucket = 1;

  string id = 2;

  string prefix = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSpotFleetRequest version is 1
message AwsSpotFleetRequest {
  string allocation_strategy = 1 [json_name = "allocation_strategy"];

  string client_token = 2 [json_name = "client_token"];

  string excess_capacity_termination_policy = 3 [json_name = "excess_capacity_termination_policy"];

  string fleet_type = 4 [json_name = "fleet_type"];

  string iam_fleet_role = 5 [json_name = "iam_fleet_role"];

  string id = 6;

  string instance_interruption_behaviour = 7 [json_name = "instance_interruption_behaviour"];

  int64 instance_pools_to_use_count = 8 [json_name = "instance_pools_to_use_count"];

  repeated string load_balancers = 9 [json_name = "load_balancers"];

  string on_demand_allocation_strategy = 10 [json_name = "on_demand_allocation_strategy"];

  string on_demand_max_total_price = 11 [json_name = "on_demand_max_total_price"];

  int64 on_demand_target_capacity = 12 [json_name = "on_demand_target_capacity"];

  bool replace_unhealthy_instances = 13 [json_name = "replace_unhealthy_instances"];

  string spot_price = 14 [json_name = "spot_price"];

  string spot_request_state = 15 [json_name = "spot_request_state"];

  map<string, string> tags = 16;

  map<string, string> tags_all = 17 [json_name = "tags_all"];

  int64 target_capacity = 18 [json_name = "target_capacity"];

  repeated string target_group_arns = 19 [json_name = "target_group_arns"];

  bool terminate_instances_with_expiration = 20 [json_name = "terminate_instances_with_expiration"];

  string valid_from = 21 [json_name = "valid_from"];

  string valid_until = 22 [json_name = "valid_until"];

  bool wait_for_fulfillment = 23 [json_name = "wait_for_fulfillment"];

  repeated LaunchSpecification launch_specification = 24 [json_name = "launch_specification"];

  repeated LaunchTemplateConfig launch_template_config = 25 [json_name = "launch_template_config"];

  SpotMaintenanceStrategies spot_maintenance_strategies = 26 [json_name = "spot_maintenance_strategies"];

  repeated Timeouts timeouts = 27;

  repeated string depends_on = 28;

  int32 count = 29;

  map<string, string> for_each = 30;

  string provider = 31;

  terraform.meta.Lifecycle lifecycle = 32;

  message LaunchSpecification {
    string ami = 1;

    bool associate_public_ip_address = 2 [json_name = "associate_public_ip_address"];

    string availability_zone = 3 [json_name = "availability_zone"];

    bool ebs_optimized = 4 [json_name = "ebs_optimized"];

    string iam_instance_profile = 5 [json_name = "iam_instance_profile"];

    string iam_instance_profile_arn = 6 [json_name = "iam_instance_profile_arn"];

    string instance_type = 7 [json_name = "instance_type"];

    string key_name = 8 [json_name = "key_name"];

    bool monitoring = 9;

    string placement_group = 10 [json_name = "placement_group"];

    string placement_tenancy = 11 [json_name = "placement_tenancy"];

    string spot_price = 12 [json_name = "spot_price"];

    string subnet_id = 13 [json_name = "subnet_id"];

    map<string, string> tags = 14;

    string user_data = 15 [json_name = "user_data"];

    repeated string vpc_security_group_ids = 16 [json_name = "vpc_security_group_ids"];

    string weighted_capacity = 17 [json_name = "weighted_capacity"];

    repeated EbsBlockDevice ebs_block_device = 18 [json_name = "ebs_block_device"];

    repeated EphemeralBlockDevice ephemeral_block_device = 19 [json_name = "ephemeral_block_device"];

    repeated RootBlockDevice root_block_device = 20 [json_name = "root_block_device"];

    message EbsBlockDevice {
      bool delete_on_termination = 1 [json_name = "delete_on_termination"];

      string device_name = 2 [json_name = "device_name"];

      bool encrypted = 3;

      int64 iops = 4;

      string kms_key_id = 5 [json_name = "kms_key_id"];

      string snapshot_id = 6 [json_name = "snapshot_id"];

      int64 throughput = 7;

      int64 volume_size = 8 [json_name = "volume_size"];

      string volume_type = 9 [json_name = "volume_type"];
    }

    message EphemeralBlockDevice {
      string device_name = 1 [json_name = "device_name"];

      string virtual_name = 2 [json_name = "virtual_name"];
    }

    message RootBlockDevice {
      bool delete_on_termination = 1 [json_name = "delete_on_termination"];

      bool encrypted = 2;

      int64 iops = 3;

      string kms_key_id = 4 [json_name = "kms_key_id"];

      int64 throughput = 5;

      int64 volume_size = 6 [json_name = "volume_size"];

      string volume_type = 7 [json_name = "volume_type"];
    }
  }

  message LaunchTemplateConfig {
    LaunchTemplateSpecification launch_template_specification = 1 [json_name = "launch_template_specification"];

    repeated Overrides overrides = 2;

    message LaunchTemplateSpecification {
      string id = 1;

      string name = 2;

      string version = 3;
    }

    message Overrides {
      string availability_zone = 1 [json_name = "availability_zone"];

      string instance_type = 2 [json_name = "instance_type"];

      int64 priority = 3;

      string spot_price = 4 [json_name = "spot_price"];

      string subnet_id = 5 [json_name = "subnet_id"];

      int64 weighted_capacity = 6 [json_name = "weighted_capacity"];
    }
  }

  message SpotMaintenanceStrategies {
    CapacityRebalance capacity_rebalance = 1 [json_name = "capacity_rebalance"];

    message CapacityRebalance {
      string replacement_strategy = 1 [json_name = "replacement_strategy"];
    }
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsSpotInstanceRequest version is 0
message AwsSpotInstanceRequest {
  string ami = 1;

  string arn = 2;

  bool associate_public_ip_address = 3 [json_name = "associate_public_ip_address"];

  string availability_zone = 4 [json_name = "availability_zone"];

  int64 block_duration_minutes = 5 [json_name = "block_duration_minutes"];

  int64 cpu_core_count = 6 [json_name = "cpu_core_count"];

  int64 cpu_threads_per_core = 7 [json_name = "cpu_threads_per_core"];

  bool disable_api_termination = 8 [json_name = "disable_api_termination"];

  bool ebs_optimized = 9 [json_name = "ebs_optimized"];

  bool get_password_data = 10 [json_name = "get_password_data"];

  bool hibernation = 11;

  string host_id = 12 [json_name = "host_id"];

  string iam_instance_profile = 13 [json_name = "iam_instance_profile"];

  string id = 14;

  string instance_initiated_shutdown_behavior = 15 [json_name = "instance_initiated_shutdown_behavior"];

  string instance_interruption_behavior = 16 [json_name = "instance_interruption_behavior"];

  string instance_interruption_behaviour = 17 [json_name = "instance_interruption_behaviour"];

  string instance_state = 18 [json_name = "instance_state"];

  string instance_type = 19 [json_name = "instance_type"];

  int64 ipv6_address_count = 20 [json_name = "ipv6_address_count"];

  repeated string ipv6_addresses = 21 [json_name = "ipv6_addresses"];

  string key_name = 22 [json_name = "key_name"];

  string launch_group = 23 [json_name = "launch_group"];

  bool monitoring = 24;

  string outpost_arn = 25 [json_name = "outpost_arn"];

  string password_data = 26 [json_name = "password_data"];

  string placement_group = 27 [json_name = "placement_group"];

  int64 placement_partition_number = 28 [json_name = "placement_partition_number"];

  string primary_network_interface_id = 29 [json_name = "primary_network_interface_id"];

  string private_dns = 30 [json_name = "private_dns"];

  string private_ip = 31 [json_name = "private_ip"];

  string public_dns = 32 [json_name = "public_dns"];

  string public_ip = 33 [json_name = "public_ip"];

  repeated string secondary_private_ips = 34 [json_name = "secondary_private_ips"];

  repeated string security_groups = 35 [json_name = "security_groups"];

  bool source_dest_check = 36 [json_name = "source_dest_check"];

  string spot_bid_status = 37 [json_name = "spot_bid_status"];

  string spot_instance_id = 38 [json_name = "spot_instance_id"];

  string spot_price = 39 [json_name = "spot_price"];

  string spot_request_state = 40 [json_name = "spot_request_state"];

  string spot_type = 41 [json_name = "spot_type"];

  string subnet_id = 42 [json_name = "subnet_id"];

  map<string, string> tags = 43;

  map<string, string> tags_all = 44 [json_name = "tags_all"];

  string tenancy = 45;

  string user_data = 46 [json_name = "user_data"];

  string user_data_base64 = 47 [json_name = "user_data_base64"];

  string valid_from = 48 [json_name = "valid_from"];

  string valid_until = 49 [json_name = "valid_until"];

  map<string, string> volume_tags = 50 [json_name = "volume_tags"];

  repeated string vpc_security_group_ids = 51 [json_name = "vpc_security_group_ids"];

  bool wait_for_fulfillment = 52 [json_name = "wait_for_fulfillment"];

  CapacityReservationSpecification capacity_reservation_specification = 53 [json_name = "capacity_reservation_specification"];

  CreditSpecification credit_specification = 54 [json_name = "credit_specification"];

  repeated EbsBlockDevice ebs_block_device = 55 [json_name = "ebs_block_device"];

  EnclaveOptions enclave_options = 56 [json_name = "enclave_options"];

  repeated EphemeralBlockDevice ephemeral_block_device = 57 [json_name = "ephemeral_block_device"];

  LaunchTemplate launch_template = 58 [json_name = "launch_template"];

  MetadataOptions metadata_options = 59 [json_name = "metadata_options"];

  repeated NetworkInterface network_interface = 60 [json_name = "network_interface"];

  RootBlockDevice root_block_device = 61 [json_name = "root_block_device"];

  repeated Timeouts timeouts = 62;

  repeated string depends_on = 63;

  int32 count = 64;

  map<string, string> for_each = 65;

  string provider = 66;

  terraform.meta.Lifecycle lifecycle = 67;

  message CapacityReservationSpecification {
    string capacity_reservation_preference = 1 [json_name = "capacity_reservation_preference"];

    CapacityReservationTarget capacity_reservation_target = 2 [json_name = "capacity_reservation_target"];

    message CapacityReservationTarget {
      string capacity_reservation_id = 1 [json_name = "capacity_reservation_id"];
    }
  }

  message CreditSpecification {
    string cpu_credits = 1 [json_name = "cpu_credits"];
  }

  message EbsBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string kms_key_id = 5 [json_name = "kms_key_id"];

    string snapshot_id = 6 [json_name = "snapshot_id"];

    map<string, string> tags = 7;

    int64 throughput = 8;

    string volume_id = 9 [json_name = "volume_id"];

    int64 volume_size = 10 [json_name = "volume_size"];

    string volume_type = 11 [json_name = "volume_type"];
  }

  message EnclaveOptions {
    bool enabled = 1;
  }

  message EphemeralBlockDevice {
    string device_name = 1 [json_name = "device_name"];

    bool no_device = 2 [json_name = "no_device"];

    string virtual_name = 3 [json_name = "virtual_name"];
  }

  message LaunchTemplate {
    string id = 1;

    string name = 2;

    string version = 3;
  }

  message MetadataOptions {
    string http_endpoint = 1 [json_name = "http_endpoint"];

    int64 http_put_response_hop_limit = 2 [json_name = "http_put_response_hop_limit"];

    string http_tokens = 3 [json_name = "http_tokens"];
  }

  message NetworkInterface {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    int64 device_index = 2 [json_name = "device_index"];

    string network_interface_id = 3 [json_name = "network_interface_id"];
  }

  message RootBlockDevice {
    bool delete_on_termination = 1 [json_name = "delete_on_termination"];

    string device_name = 2 [json_name = "device_name"];

    bool encrypted = 3;

    int64 iops = 4;

    string kms_key_id = 5 [json_name = "kms_key_id"];

    map<string, string> tags = 6;

    int64 throughput = 7;

    string volume_id = 8 [json_name = "volume_id"];

    int64 volume_size = 9 [json_name = "volume_size"];

    string volume_type = 10 [json_name = "volume_type"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsSqsQueue version is 0
message AwsSqsQueue {
  string arn = 1;

  bool content_based_deduplication = 2 [json_name = "content_based_deduplication"];

  string deduplication_scope = 3 [json_name = "deduplication_scope"];

  int64 delay_seconds = 4 [json_name = "delay_seconds"];

  bool fifo_queue = 5 [json_name = "fifo_queue"];

  string fifo_throughput_limit = 6 [json_name = "fifo_throughput_limit"];

  string id = 7;

  int64 kms_data_key_reuse_period_seconds = 8 [json_name = "kms_data_key_reuse_period_seconds"];

  string kms_master_key_id = 9 [json_name = "kms_master_key_id"];

  int64 max_message_size = 10 [json_name = "max_message_size"];

  int64 message_retention_seconds = 11 [json_name = "message_retention_seconds"];

  string name = 12;

  string name_prefix = 13 [json_name = "name_prefix"];

  string policy = 14;

  int64 receive_wait_time_seconds = 15 [json_name = "receive_wait_time_seconds"];

  string redrive_policy = 16 [json_name = "redrive_policy"];

  bool sqs_managed_sse_enabled = 17 [json_name = "sqs_managed_sse_enabled"];

  map<string, string> tags = 18;

  map<string, string> tags_all = 19 [json_name = "tags_all"];

  string url = 20;

  int64 visibility_timeout_seconds = 21 [json_name = "visibility_timeout_seconds"];

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;
}

//AwsSqsQueuePolicy version is 1
message AwsSqsQueuePolicy {
  string id = 1;

  string policy = 2;

  string queue_url = 3 [json_name = "queue_url"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSsmActivation version is 0
message AwsSsmActivation {
  string activation_code = 1 [json_name = "activation_code"];

  string description = 2;

  string expiration_date = 3 [json_name = "expiration_date"];

  bool expired = 4;

  string iam_role = 5 [json_name = "iam_role"];

  string id = 6;

  string name = 7;

  int64 registration_count = 8 [json_name = "registration_count"];

  int64 registration_limit = 9 [json_name = "registration_limit"];

  map<string, string> tags = 10;

  map<string, string> tags_all = 11 [json_name = "tags_all"];

  repeated string depends_on = 12;

  int32 count = 13;

  map<string, string> for_each = 14;

  string provider = 15;

  terraform.meta.Lifecycle lifecycle = 16;
}

//AwsSsmAssociation version is 1
message AwsSsmAssociation {
  bool apply_only_at_cron_interval = 1 [json_name = "apply_only_at_cron_interval"];

  string association_id = 2 [json_name = "association_id"];

  string association_name = 3 [json_name = "association_name"];

  string automation_target_parameter_name = 4 [json_name = "automation_target_parameter_name"];

  string compliance_severity = 5 [json_name = "compliance_severity"];

  string document_version = 6 [json_name = "document_version"];

  string id = 7;

  string instance_id = 8 [json_name = "instance_id"];

  string max_concurrency = 9 [json_name = "max_concurrency"];

  string max_errors = 10 [json_name = "max_errors"];

  string name = 11;

  map<string, string> parameters = 12;

  string schedule_expression = 13 [json_name = "schedule_expression"];

  OutputLocation output_location = 14 [json_name = "output_location"];

  repeated Targets targets = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message OutputLocation {
    string s3_bucket_name = 1 [json_name = "s3_bucket_name"];

    string s3_key_prefix = 2 [json_name = "s3_key_prefix"];

    string s3_region = 3 [json_name = "s3_region"];
  }

  message Targets {
    string key = 1;

    repeated string values = 2;
  }
}

//AwsSsmDocument version is 0
message AwsSsmDocument {
  string arn = 1;

  string content = 2;

  string created_date = 3 [json_name = "created_date"];

  string default_version = 4 [json_name = "default_version"];

  string description = 5;

  string document_format = 6 [json_name = "document_format"];

  string document_type = 7 [json_name = "document_type"];

  string document_version = 8 [json_name = "document_version"];

  string hash = 9;

  string hash_type = 10 [json_name = "hash_type"];

  string id = 11;

  string latest_version = 12 [json_name = "latest_version"];

  string name = 13;

  string owner = 14;

  repeated Parameter parameter = 15;

  map<string, string> permissions = 16;

  repeated string platform_types = 17 [json_name = "platform_types"];

  string schema_version = 18 [json_name = "schema_version"];

  string status = 19;

  map<string, string> tags = 20;

  map<string, string> tags_all = 21 [json_name = "tags_all"];

  string target_type = 22 [json_name = "target_type"];

  string version_name = 23 [json_name = "version_name"];

  repeated AttachmentsSource attachments_source = 24 [json_name = "attachments_source"];

  repeated string depends_on = 25;

  int32 count = 26;

  map<string, string> for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message Parameter {
    //default_value: string
    string default_value = 1 [json_name = "default_value"];

    //description: string
    string description = 2;

    //name: string
    string name = 3;

    //type: string
    string type = 4;
  }

  message AttachmentsSource {
    string key = 1;

    string name = 2;

    repeated string values = 3;
  }
}

//AwsSsmMaintenanceWindow version is 0
message AwsSsmMaintenanceWindow {
  bool allow_unassociated_targets = 1 [json_name = "allow_unassociated_targets"];

  int64 cutoff = 2;

  string description = 3;

  int64 duration = 4;

  bool enabled = 5;

  string end_date = 6 [json_name = "end_date"];

  string id = 7;

  string name = 8;

  string schedule = 9;

  int64 schedule_offset = 10 [json_name = "schedule_offset"];

  string schedule_timezone = 11 [json_name = "schedule_timezone"];

  string start_date = 12 [json_name = "start_date"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;
}

//AwsSsmMaintenanceWindowTarget version is 0
message AwsSsmMaintenanceWindowTarget {
  string description = 1;

  string id = 2;

  string name = 3;

  string owner_information = 4 [json_name = "owner_information"];

  string resource_type = 5 [json_name = "resource_type"];

  string window_id = 6 [json_name = "window_id"];

  repeated Targets targets = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Targets {
    string key = 1;

    repeated string values = 2;
  }
}

//AwsSsmMaintenanceWindowTask version is 0
message AwsSsmMaintenanceWindowTask {
  string description = 1;

  string id = 2;

  string max_concurrency = 3 [json_name = "max_concurrency"];

  string max_errors = 4 [json_name = "max_errors"];

  string name = 5;

  int64 priority = 6;

  string service_role_arn = 7 [json_name = "service_role_arn"];

  string task_arn = 8 [json_name = "task_arn"];

  string task_type = 9 [json_name = "task_type"];

  string window_id = 10 [json_name = "window_id"];

  repeated Targets targets = 11;

  TaskInvocationParameters task_invocation_parameters = 12 [json_name = "task_invocation_parameters"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Targets {
    string key = 1;

    repeated string values = 2;
  }

  message TaskInvocationParameters {
    AutomationParameters automation_parameters = 1 [json_name = "automation_parameters"];

    LambdaParameters lambda_parameters = 2 [json_name = "lambda_parameters"];

    RunCommandParameters run_command_parameters = 3 [json_name = "run_command_parameters"];

    StepFunctionsParameters step_functions_parameters = 4 [json_name = "step_functions_parameters"];

    message AutomationParameters {
      string document_version = 1 [json_name = "document_version"];

      repeated Parameter parameter = 2;

      message Parameter {
        string name = 1;

        repeated string values = 2;
      }
    }

    message LambdaParameters {
      string client_context = 1 [json_name = "client_context"];

      string payload = 2;

      string qualifier = 3;
    }

    message RunCommandParameters {
      string comment = 1;

      string document_hash = 2 [json_name = "document_hash"];

      string document_hash_type = 3 [json_name = "document_hash_type"];

      string document_version = 4 [json_name = "document_version"];

      string output_s3_bucket = 5 [json_name = "output_s3_bucket"];

      string output_s3_key_prefix = 6 [json_name = "output_s3_key_prefix"];

      string service_role_arn = 7 [json_name = "service_role_arn"];

      int64 timeout_seconds = 8 [json_name = "timeout_seconds"];

      CloudwatchConfig cloudwatch_config = 9 [json_name = "cloudwatch_config"];

      NotificationConfig notification_config = 10 [json_name = "notification_config"];

      repeated Parameter parameter = 11;

      message CloudwatchConfig {
        string cloudwatch_log_group_name = 1 [json_name = "cloudwatch_log_group_name"];

        bool cloudwatch_output_enabled = 2 [json_name = "cloudwatch_output_enabled"];
      }

      message NotificationConfig {
        string notification_arn = 1 [json_name = "notification_arn"];

        repeated string notification_events = 2 [json_name = "notification_events"];

        string notification_type = 3 [json_name = "notification_type"];
      }

      message Parameter {
        string name = 1;

        repeated string values = 2;
      }
    }

    message StepFunctionsParameters {
      string input = 1;

      string name = 2;
    }
  }
}

//AwsSsmParameter version is 0
message AwsSsmParameter {
  string allowed_pattern = 1 [json_name = "allowed_pattern"];

  string arn = 2;

  string data_type = 3 [json_name = "data_type"];

  string description = 4;

  string id = 5;

  string key_id = 6 [json_name = "key_id"];

  string name = 7;

  bool overwrite = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  string tier = 11;

  string type = 12;

  string value = 13;

  int64 version = 14;

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;
}

//AwsSsmPatchBaseline version is 0
message AwsSsmPatchBaseline {
  repeated string approved_patches = 1 [json_name = "approved_patches"];

  string approved_patches_compliance_level = 2 [json_name = "approved_patches_compliance_level"];

  bool approved_patches_enable_non_security = 3 [json_name = "approved_patches_enable_non_security"];

  string arn = 4;

  string description = 5;

  string id = 6;

  string name = 7;

  string operating_system = 8 [json_name = "operating_system"];

  repeated string rejected_patches = 9 [json_name = "rejected_patches"];

  string rejected_patches_action = 10 [json_name = "rejected_patches_action"];

  map<string, string> tags = 11;

  map<string, string> tags_all = 12 [json_name = "tags_all"];

  repeated ApprovalRule approval_rule = 13 [json_name = "approval_rule"];

  repeated GlobalFilter global_filter = 14 [json_name = "global_filter"];

  repeated Source source = 15;

  repeated string depends_on = 16;

  int32 count = 17;

  map<string, string> for_each = 18;

  string provider = 19;

  terraform.meta.Lifecycle lifecycle = 20;

  message ApprovalRule {
    int64 approve_after_days = 1 [json_name = "approve_after_days"];

    string approve_until_date = 2 [json_name = "approve_until_date"];

    string compliance_level = 3 [json_name = "compliance_level"];

    bool enable_non_security = 4 [json_name = "enable_non_security"];

    repeated PatchFilter patch_filter = 5 [json_name = "patch_filter"];

    message PatchFilter {
      string key = 1;

      repeated string values = 2;
    }
  }

  message GlobalFilter {
    string key = 1;

    repeated string values = 2;
  }

  message Source {
    string configuration = 1;

    string name = 2;

    repeated string products = 3;
  }
}

//AwsSsmPatchGroup version is 1
message AwsSsmPatchGroup {
  string baseline_id = 1 [json_name = "baseline_id"];

  string id = 2;

  string patch_group = 3 [json_name = "patch_group"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSsmResourceDataSync version is 0
message AwsSsmResourceDataSync {
  string id = 1;

  string name = 2;

  S3Destination s3_destination = 3 [json_name = "s3_destination"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message S3Destination {
    string bucket_name = 1 [json_name = "bucket_name"];

    string kms_key_arn = 2 [json_name = "kms_key_arn"];

    string prefix = 3;

    string region = 4;

    string sync_format = 5 [json_name = "sync_format"];
  }
}

//AwsSsoadminAccountAssignment version is 0
message AwsSsoadminAccountAssignment {
  string id = 1;

  string instance_arn = 2 [json_name = "instance_arn"];

  string permission_set_arn = 3 [json_name = "permission_set_arn"];

  string principal_id = 4 [json_name = "principal_id"];

  string principal_type = 5 [json_name = "principal_type"];

  string target_id = 6 [json_name = "target_id"];

  string target_type = 7 [json_name = "target_type"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsSsoadminManagedPolicyAttachment version is 0
message AwsSsoadminManagedPolicyAttachment {
  string id = 1;

  string instance_arn = 2 [json_name = "instance_arn"];

  string managed_policy_arn = 3 [json_name = "managed_policy_arn"];

  string managed_policy_name = 4 [json_name = "managed_policy_name"];

  string permission_set_arn = 5 [json_name = "permission_set_arn"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsSsoadminPermissionSet version is 0
message AwsSsoadminPermissionSet {
  string arn = 1;

  string created_date = 2 [json_name = "created_date"];

  string description = 3;

  string id = 4;

  string instance_arn = 5 [json_name = "instance_arn"];

  string name = 6;

  string relay_state = 7 [json_name = "relay_state"];

  string session_duration = 8 [json_name = "session_duration"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsSsoadminPermissionSetInlinePolicy version is 0
message AwsSsoadminPermissionSetInlinePolicy {
  string id = 1;

  string inline_policy = 2 [json_name = "inline_policy"];

  string instance_arn = 3 [json_name = "instance_arn"];

  string permission_set_arn = 4 [json_name = "permission_set_arn"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsStoragegatewayCache version is 0
message AwsStoragegatewayCache {
  string disk_id = 1 [json_name = "disk_id"];

  string gateway_arn = 2 [json_name = "gateway_arn"];

  string id = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsStoragegatewayCachedIscsiVolume version is 0
message AwsStoragegatewayCachedIscsiVolume {
  string arn = 1;

  bool chap_enabled = 2 [json_name = "chap_enabled"];

  string gateway_arn = 3 [json_name = "gateway_arn"];

  string id = 4;

  bool kms_encrypted = 5 [json_name = "kms_encrypted"];

  string kms_key = 6 [json_name = "kms_key"];

  int64 lun_number = 7 [json_name = "lun_number"];

  string network_interface_id = 8 [json_name = "network_interface_id"];

  int64 network_interface_port = 9 [json_name = "network_interface_port"];

  string snapshot_id = 10 [json_name = "snapshot_id"];

  string source_volume_arn = 11 [json_name = "source_volume_arn"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string target_arn = 14 [json_name = "target_arn"];

  string target_name = 15 [json_name = "target_name"];

  string volume_arn = 16 [json_name = "volume_arn"];

  string volume_id = 17 [json_name = "volume_id"];

  int64 volume_size_in_bytes = 18 [json_name = "volume_size_in_bytes"];

  repeated string depends_on = 19;

  int32 count = 20;

  map<string, string> for_each = 21;

  string provider = 22;

  terraform.meta.Lifecycle lifecycle = 23;
}

//AwsStoragegatewayFileSystemAssociation version is 0
message AwsStoragegatewayFileSystemAssociation {
  string arn = 1;

  string audit_destination_arn = 2 [json_name = "audit_destination_arn"];

  string gateway_arn = 3 [json_name = "gateway_arn"];

  string id = 4;

  string location_arn = 5 [json_name = "location_arn"];

  string password = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string username = 9;

  CacheAttributes cache_attributes = 10 [json_name = "cache_attributes"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;

  message CacheAttributes {
    int64 cache_stale_timeout_in_seconds = 1 [json_name = "cache_stale_timeout_in_seconds"];
  }
}

//AwsStoragegatewayGateway version is 0
message AwsStoragegatewayGateway {
  string activation_key = 1 [json_name = "activation_key"];

  string arn = 2;

  int64 average_download_rate_limit_in_bits_per_sec = 3 [json_name = "average_download_rate_limit_in_bits_per_sec"];

  int64 average_upload_rate_limit_in_bits_per_sec = 4 [json_name = "average_upload_rate_limit_in_bits_per_sec"];

  string cloudwatch_log_group_arn = 5 [json_name = "cloudwatch_log_group_arn"];

  string ec2_instance_id = 6 [json_name = "ec2_instance_id"];

  string endpoint_type = 7 [json_name = "endpoint_type"];

  string gateway_id = 8 [json_name = "gateway_id"];

  string gateway_ip_address = 9 [json_name = "gateway_ip_address"];

  string gateway_name = 10 [json_name = "gateway_name"];

  repeated GatewayNetworkInterface gateway_network_interface = 11 [json_name = "gateway_network_interface"];

  string gateway_timezone = 12 [json_name = "gateway_timezone"];

  string gateway_type = 13 [json_name = "gateway_type"];

  string gateway_vpc_endpoint = 14 [json_name = "gateway_vpc_endpoint"];

  string host_environment = 15 [json_name = "host_environment"];

  string id = 16;

  string medium_changer_type = 17 [json_name = "medium_changer_type"];

  bool smb_file_share_visibility = 18 [json_name = "smb_file_share_visibility"];

  string smb_guest_password = 19 [json_name = "smb_guest_password"];

  string smb_security_strategy = 20 [json_name = "smb_security_strategy"];

  map<string, string> tags = 21;

  map<string, string> tags_all = 22 [json_name = "tags_all"];

  string tape_drive_type = 23 [json_name = "tape_drive_type"];

  SmbActiveDirectorySettings smb_active_directory_settings = 24 [json_name = "smb_active_directory_settings"];

  repeated Timeouts timeouts = 25;

  repeated string depends_on = 26;

  int32 count = 27;

  map<string, string> for_each = 28;

  string provider = 29;

  terraform.meta.Lifecycle lifecycle = 30;

  message GatewayNetworkInterface {
    //ipv4_address: string
    string ipv4_address = 1 [json_name = "ipv4_address"];
  }

  message SmbActiveDirectorySettings {
    string active_directory_status = 1 [json_name = "active_directory_status"];

    repeated string domain_controllers = 2 [json_name = "domain_controllers"];

    string domain_name = 3 [json_name = "domain_name"];

    string organizational_unit = 4 [json_name = "organizational_unit"];

    string password = 5;

    int64 timeout_in_seconds = 6 [json_name = "timeout_in_seconds"];

    string username = 7;
  }

  message Timeouts {
    string create = 1;
  }
}

//AwsStoragegatewayNfsFileShare version is 0
message AwsStoragegatewayNfsFileShare {
  string arn = 1;

  string audit_destination_arn = 2 [json_name = "audit_destination_arn"];

  repeated string client_list = 3 [json_name = "client_list"];

  string default_storage_class = 4 [json_name = "default_storage_class"];

  string file_share_name = 5 [json_name = "file_share_name"];

  string fileshare_id = 6 [json_name = "fileshare_id"];

  string gateway_arn = 7 [json_name = "gateway_arn"];

  bool guess_mime_type_enabled = 8 [json_name = "guess_mime_type_enabled"];

  string id = 9;

  bool kms_encrypted = 10 [json_name = "kms_encrypted"];

  string kms_key_arn = 11 [json_name = "kms_key_arn"];

  string location_arn = 12 [json_name = "location_arn"];

  string notification_policy = 13 [json_name = "notification_policy"];

  string object_acl = 14 [json_name = "object_acl"];

  string path = 15;

  bool read_only = 16 [json_name = "read_only"];

  bool requester_pays = 17 [json_name = "requester_pays"];

  string role_arn = 18 [json_name = "role_arn"];

  string squash = 19;

  map<string, string> tags = 20;

  map<string, string> tags_all = 21 [json_name = "tags_all"];

  CacheAttributes cache_attributes = 22 [json_name = "cache_attributes"];

  NfsFileShareDefaults nfs_file_share_defaults = 23 [json_name = "nfs_file_share_defaults"];

  repeated Timeouts timeouts = 24;

  repeated string depends_on = 25;

  int32 count = 26;

  map<string, string> for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message CacheAttributes {
    int64 cache_stale_timeout_in_seconds = 1 [json_name = "cache_stale_timeout_in_seconds"];
  }

  message NfsFileShareDefaults {
    string directory_mode = 1 [json_name = "directory_mode"];

    string file_mode = 2 [json_name = "file_mode"];

    string group_id = 3 [json_name = "group_id"];

    string owner_id = 4 [json_name = "owner_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsStoragegatewaySmbFileShare version is 0
message AwsStoragegatewaySmbFileShare {
  bool access_based_enumeration = 1 [json_name = "access_based_enumeration"];

  repeated string admin_user_list = 2 [json_name = "admin_user_list"];

  string arn = 3;

  string audit_destination_arn = 4 [json_name = "audit_destination_arn"];

  string authentication = 5;

  string bucket_region = 6 [json_name = "bucket_region"];

  string case_sensitivity = 7 [json_name = "case_sensitivity"];

  string default_storage_class = 8 [json_name = "default_storage_class"];

  string file_share_name = 9 [json_name = "file_share_name"];

  string fileshare_id = 10 [json_name = "fileshare_id"];

  string gateway_arn = 11 [json_name = "gateway_arn"];

  bool guess_mime_type_enabled = 12 [json_name = "guess_mime_type_enabled"];

  string id = 13;

  repeated string invalid_user_list = 14 [json_name = "invalid_user_list"];

  bool kms_encrypted = 15 [json_name = "kms_encrypted"];

  string kms_key_arn = 16 [json_name = "kms_key_arn"];

  string location_arn = 17 [json_name = "location_arn"];

  string notification_policy = 18 [json_name = "notification_policy"];

  string object_acl = 19 [json_name = "object_acl"];

  bool oplocks_enabled = 20 [json_name = "oplocks_enabled"];

  string path = 21;

  bool read_only = 22 [json_name = "read_only"];

  bool requester_pays = 23 [json_name = "requester_pays"];

  string role_arn = 24 [json_name = "role_arn"];

  bool smb_acl_enabled = 25 [json_name = "smb_acl_enabled"];

  map<string, string> tags = 26;

  map<string, string> tags_all = 27 [json_name = "tags_all"];

  repeated string valid_user_list = 28 [json_name = "valid_user_list"];

  string vpc_endpoint_dns_name = 29 [json_name = "vpc_endpoint_dns_name"];

  CacheAttributes cache_attributes = 30 [json_name = "cache_attributes"];

  repeated Timeouts timeouts = 31;

  repeated string depends_on = 32;

  int32 count = 33;

  map<string, string> for_each = 34;

  string provider = 35;

  terraform.meta.Lifecycle lifecycle = 36;

  message CacheAttributes {
    int64 cache_stale_timeout_in_seconds = 1 [json_name = "cache_stale_timeout_in_seconds"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsStoragegatewayStoredIscsiVolume version is 0
message AwsStoragegatewayStoredIscsiVolume {
  string arn = 1;

  bool chap_enabled = 2 [json_name = "chap_enabled"];

  string disk_id = 3 [json_name = "disk_id"];

  string gateway_arn = 4 [json_name = "gateway_arn"];

  string id = 5;

  bool kms_encrypted = 6 [json_name = "kms_encrypted"];

  string kms_key = 7 [json_name = "kms_key"];

  int64 lun_number = 8 [json_name = "lun_number"];

  string network_interface_id = 9 [json_name = "network_interface_id"];

  int64 network_interface_port = 10 [json_name = "network_interface_port"];

  bool preserve_existing_data = 11 [json_name = "preserve_existing_data"];

  string snapshot_id = 12 [json_name = "snapshot_id"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  string target_arn = 15 [json_name = "target_arn"];

  string target_name = 16 [json_name = "target_name"];

  string volume_attachment_status = 17 [json_name = "volume_attachment_status"];

  string volume_id = 18 [json_name = "volume_id"];

  int64 volume_size_in_bytes = 19 [json_name = "volume_size_in_bytes"];

  string volume_status = 20 [json_name = "volume_status"];

  string volume_type = 21 [json_name = "volume_type"];

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;
}

//AwsStoragegatewayTapePool version is 0
message AwsStoragegatewayTapePool {
  string arn = 1;

  string id = 2;

  string pool_name = 3 [json_name = "pool_name"];

  int64 retention_lock_time_in_days = 4 [json_name = "retention_lock_time_in_days"];

  string retention_lock_type = 5 [json_name = "retention_lock_type"];

  string storage_class = 6 [json_name = "storage_class"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsStoragegatewayUploadBuffer version is 0
message AwsStoragegatewayUploadBuffer {
  string disk_id = 1 [json_name = "disk_id"];

  string disk_path = 2 [json_name = "disk_path"];

  string gateway_arn = 3 [json_name = "gateway_arn"];

  string id = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsStoragegatewayWorkingStorage version is 0
message AwsStoragegatewayWorkingStorage {
  string disk_id = 1 [json_name = "disk_id"];

  string gateway_arn = 2 [json_name = "gateway_arn"];

  string id = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsSubnet version is 1
message AwsSubnet {
  string arn = 1;

  bool assign_ipv6_address_on_creation = 2 [json_name = "assign_ipv6_address_on_creation"];

  string availability_zone = 3 [json_name = "availability_zone"];

  string availability_zone_id = 4 [json_name = "availability_zone_id"];

  string cidr_block = 5 [json_name = "cidr_block"];

  string customer_owned_ipv4_pool = 6 [json_name = "customer_owned_ipv4_pool"];

  string id = 7;

  string ipv6_cidr_block = 8 [json_name = "ipv6_cidr_block"];

  string ipv6_cidr_block_association_id = 9 [json_name = "ipv6_cidr_block_association_id"];

  bool map_customer_owned_ip_on_launch = 10 [json_name = "map_customer_owned_ip_on_launch"];

  bool map_public_ip_on_launch = 11 [json_name = "map_public_ip_on_launch"];

  string outpost_arn = 12 [json_name = "outpost_arn"];

  string owner_id = 13 [json_name = "owner_id"];

  map<string, string> tags = 14;

  map<string, string> tags_all = 15 [json_name = "tags_all"];

  string vpc_id = 16 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 17;

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsSwfDomain version is 0
message AwsSwfDomain {
  string arn = 1;

  string description = 2;

  string id = 3;

  string name = 4;

  string name_prefix = 5 [json_name = "name_prefix"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  string workflow_execution_retention_period_in_days = 8 [json_name = "workflow_execution_retention_period_in_days"];

  repeated string depends_on = 9;

  int32 count = 10;

  map<string, string> for_each = 11;

  string provider = 12;

  terraform.meta.Lifecycle lifecycle = 13;
}

//AwsSyntheticsCanary version is 0
message AwsSyntheticsCanary {
  string arn = 1;

  string artifact_s3_location = 2 [json_name = "artifact_s3_location"];

  string engine_arn = 3 [json_name = "engine_arn"];

  string execution_role_arn = 4 [json_name = "execution_role_arn"];

  int64 failure_retention_period = 5 [json_name = "failure_retention_period"];

  string handler = 6;

  string id = 7;

  string name = 8;

  string runtime_version = 9 [json_name = "runtime_version"];

  string s3_bucket = 10 [json_name = "s3_bucket"];

  string s3_key = 11 [json_name = "s3_key"];

  string s3_version = 12 [json_name = "s3_version"];

  string source_location_arn = 13 [json_name = "source_location_arn"];

  bool start_canary = 14 [json_name = "start_canary"];

  string status = 15;

  int64 success_retention_period = 16 [json_name = "success_retention_period"];

  map<string, string> tags = 17;

  map<string, string> tags_all = 18 [json_name = "tags_all"];

  repeated Timeline timeline = 19;

  string zip_file = 20 [json_name = "zip_file"];

  ArtifactConfig artifact_config = 21 [json_name = "artifact_config"];

  RunConfig run_config = 22 [json_name = "run_config"];

  Schedule schedule = 23;

  VpcConfig vpc_config = 24 [json_name = "vpc_config"];

  repeated string depends_on = 25;

  int32 count = 26;

  map<string, string> for_each = 27;

  string provider = 28;

  terraform.meta.Lifecycle lifecycle = 29;

  message Timeline {
    //created: string
    string created = 1;

    //last_modified: string
    string last_modified = 2 [json_name = "last_modified"];

    //last_started: string
    string last_started = 3 [json_name = "last_started"];

    //last_stopped: string
    string last_stopped = 4 [json_name = "last_stopped"];
  }

  message ArtifactConfig {
    S3Encryption s3_encryption = 1 [json_name = "s3_encryption"];

    message S3Encryption {
      string encryption_mode = 1 [json_name = "encryption_mode"];

      string kms_key_arn = 2 [json_name = "kms_key_arn"];
    }
  }

  message RunConfig {
    bool active_tracing = 1 [json_name = "active_tracing"];

    int64 memory_in_mb = 2 [json_name = "memory_in_mb"];

    int64 timeout_in_seconds = 3 [json_name = "timeout_in_seconds"];
  }

  message Schedule {
    int64 duration_in_seconds = 1 [json_name = "duration_in_seconds"];

    string expression = 2;
  }

  message VpcConfig {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnet_ids = 2 [json_name = "subnet_ids"];

    string vpc_id = 3 [json_name = "vpc_id"];
  }
}

//AwsTimestreamwriteDatabase version is 0
message AwsTimestreamwriteDatabase {
  string arn = 1;

  string database_name = 2 [json_name = "database_name"];

  string id = 3;

  string kms_key_id = 4 [json_name = "kms_key_id"];

  int64 table_count = 5 [json_name = "table_count"];

  map<string, string> tags = 6;

  map<string, string> tags_all = 7 [json_name = "tags_all"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsTimestreamwriteTable version is 0
message AwsTimestreamwriteTable {
  string arn = 1;

  string database_name = 2 [json_name = "database_name"];

  string id = 3;

  string table_name = 4 [json_name = "table_name"];

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  RetentionProperties retention_properties = 7 [json_name = "retention_properties"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message RetentionProperties {
    int64 magnetic_store_retention_period_in_days = 1 [json_name = "magnetic_store_retention_period_in_days"];

    int64 memory_store_retention_period_in_hours = 2 [json_name = "memory_store_retention_period_in_hours"];
  }
}

//AwsTransferAccess version is 0
message AwsTransferAccess {
  string external_id = 1 [json_name = "external_id"];

  string home_directory = 2 [json_name = "home_directory"];

  string home_directory_type = 3 [json_name = "home_directory_type"];

  string id = 4;

  string policy = 5;

  string role = 6;

  string server_id = 7 [json_name = "server_id"];

  repeated HomeDirectoryMappings home_directory_mappings = 8 [json_name = "home_directory_mappings"];

  PosixProfile posix_profile = 9 [json_name = "posix_profile"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message HomeDirectoryMappings {
    string entry = 1;

    string target = 2;
  }

  message PosixProfile {
    int64 gid = 1;

    repeated int64 secondary_gids = 2 [json_name = "secondary_gids"];

    int64 uid = 3;
  }
}

//AwsTransferServer version is 0
message AwsTransferServer {
  string arn = 1;

  string certificate = 2;

  string directory_id = 3 [json_name = "directory_id"];

  string domain = 4;

  string endpoint = 5;

  string endpoint_type = 6 [json_name = "endpoint_type"];

  bool force_destroy = 7 [json_name = "force_destroy"];

  string function = 8;

  string host_key = 9 [json_name = "host_key"];

  string host_key_fingerprint = 10 [json_name = "host_key_fingerprint"];

  string id = 11;

  string identity_provider_type = 12 [json_name = "identity_provider_type"];

  string invocation_role = 13 [json_name = "invocation_role"];

  string logging_role = 14 [json_name = "logging_role"];

  repeated string protocols = 15;

  string security_policy_name = 16 [json_name = "security_policy_name"];

  map<string, string> tags = 17;

  map<string, string> tags_all = 18 [json_name = "tags_all"];

  string url = 19;

  EndpointDetails endpoint_details = 20 [json_name = "endpoint_details"];

  repeated string depends_on = 21;

  int32 count = 22;

  map<string, string> for_each = 23;

  string provider = 24;

  terraform.meta.Lifecycle lifecycle = 25;

  message EndpointDetails {
    repeated string address_allocation_ids = 1 [json_name = "address_allocation_ids"];

    repeated string security_group_ids = 2 [json_name = "security_group_ids"];

    repeated string subnet_ids = 3 [json_name = "subnet_ids"];

    string vpc_endpoint_id = 4 [json_name = "vpc_endpoint_id"];

    string vpc_id = 5 [json_name = "vpc_id"];
  }
}

//AwsTransferSshKey version is 0
message AwsTransferSshKey {
  string body = 1;

  string id = 2;

  string server_id = 3 [json_name = "server_id"];

  string user_name = 4 [json_name = "user_name"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsTransferUser version is 0
message AwsTransferUser {
  string arn = 1;

  string home_directory = 2 [json_name = "home_directory"];

  string home_directory_type = 3 [json_name = "home_directory_type"];

  string id = 4;

  string policy = 5;

  string role = 6;

  string server_id = 7 [json_name = "server_id"];

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  string user_name = 10 [json_name = "user_name"];

  repeated HomeDirectoryMappings home_directory_mappings = 11 [json_name = "home_directory_mappings"];

  PosixProfile posix_profile = 12 [json_name = "posix_profile"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message HomeDirectoryMappings {
    string entry = 1;

    string target = 2;
  }

  message PosixProfile {
    int64 gid = 1;

    repeated int64 secondary_gids = 2 [json_name = "secondary_gids"];

    int64 uid = 3;
  }
}

//AwsVolumeAttachment version is 0
message AwsVolumeAttachment {
  string device_name = 1 [json_name = "device_name"];

  bool force_detach = 2 [json_name = "force_detach"];

  string id = 3;

  string instance_id = 4 [json_name = "instance_id"];

  bool skip_destroy = 5 [json_name = "skip_destroy"];

  bool stop_instance_before_detaching = 6 [json_name = "stop_instance_before_detaching"];

  string volume_id = 7 [json_name = "volume_id"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsVpc version is 1
message AwsVpc {
  string arn = 1;

  bool assign_generated_ipv6_cidr_block = 2 [json_name = "assign_generated_ipv6_cidr_block"];

  string cidr_block = 3 [json_name = "cidr_block"];

  string default_network_acl_id = 4 [json_name = "default_network_acl_id"];

  string default_route_table_id = 5 [json_name = "default_route_table_id"];

  string default_security_group_id = 6 [json_name = "default_security_group_id"];

  string dhcp_options_id = 7 [json_name = "dhcp_options_id"];

  bool enable_classiclink = 8 [json_name = "enable_classiclink"];

  bool enable_classiclink_dns_support = 9 [json_name = "enable_classiclink_dns_support"];

  bool enable_dns_hostnames = 10 [json_name = "enable_dns_hostnames"];

  bool enable_dns_support = 11 [json_name = "enable_dns_support"];

  string id = 12;

  string instance_tenancy = 13 [json_name = "instance_tenancy"];

  string ipv4_ipam_pool_id = 14 [json_name = "ipv4_ipam_pool_id"];

  int64 ipv4_netmask_length = 15 [json_name = "ipv4_netmask_length"];

  string ipv6_association_id = 16 [json_name = "ipv6_association_id"];

  string ipv6_cidr_block = 17 [json_name = "ipv6_cidr_block"];

  string ipv6_ipam_pool_id = 18 [json_name = "ipv6_ipam_pool_id"];

  int64 ipv6_netmask_length = 19 [json_name = "ipv6_netmask_length"];

  string main_route_table_id = 20 [json_name = "main_route_table_id"];

  string owner_id = 21 [json_name = "owner_id"];

  map<string, string> tags = 22;

  map<string, string> tags_all = 23 [json_name = "tags_all"];

  repeated string depends_on = 24;

  int32 count = 25;

  map<string, string> for_each = 26;

  string provider = 27;

  terraform.meta.Lifecycle lifecycle = 28;
}

//AwsVpcDhcpOptions version is 0
message AwsVpcDhcpOptions {
  string arn = 1;

  string domain_name = 2 [json_name = "domain_name"];

  repeated string domain_name_servers = 3 [json_name = "domain_name_servers"];

  string id = 4;

  repeated string netbios_name_servers = 5 [json_name = "netbios_name_servers"];

  string netbios_node_type = 6 [json_name = "netbios_node_type"];

  repeated string ntp_servers = 7 [json_name = "ntp_servers"];

  string owner_id = 8 [json_name = "owner_id"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsVpcDhcpOptionsAssociation version is 0
message AwsVpcDhcpOptionsAssociation {
  string dhcp_options_id = 1 [json_name = "dhcp_options_id"];

  string id = 2;

  string vpc_id = 3 [json_name = "vpc_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsVpcEndpoint version is 0
message AwsVpcEndpoint {
  string arn = 1;

  bool auto_accept = 2 [json_name = "auto_accept"];

  repeated string cidr_blocks = 3 [json_name = "cidr_blocks"];

  repeated DnsEntry dns_entry = 4 [json_name = "dns_entry"];

  string id = 5;

  repeated string network_interface_ids = 6 [json_name = "network_interface_ids"];

  string owner_id = 7 [json_name = "owner_id"];

  string policy = 8;

  string prefix_list_id = 9 [json_name = "prefix_list_id"];

  bool private_dns_enabled = 10 [json_name = "private_dns_enabled"];

  bool requester_managed = 11 [json_name = "requester_managed"];

  repeated string route_table_ids = 12 [json_name = "route_table_ids"];

  repeated string security_group_ids = 13 [json_name = "security_group_ids"];

  string service_name = 14 [json_name = "service_name"];

  string state = 15;

  repeated string subnet_ids = 16 [json_name = "subnet_ids"];

  map<string, string> tags = 17;

  map<string, string> tags_all = 18 [json_name = "tags_all"];

  string vpc_endpoint_type = 19 [json_name = "vpc_endpoint_type"];

  string vpc_id = 20 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 21;

  repeated string depends_on = 22;

  int32 count = 23;

  map<string, string> for_each = 24;

  string provider = 25;

  terraform.meta.Lifecycle lifecycle = 26;

  message DnsEntry {
    //dns_name: string
    string dns_name = 1 [json_name = "dns_name"];

    //hosted_zone_id: string
    string hosted_zone_id = 2 [json_name = "hosted_zone_id"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsVpcEndpointConnectionNotification version is 0
message AwsVpcEndpointConnectionNotification {
  repeated string connection_events = 1 [json_name = "connection_events"];

  string connection_notification_arn = 2 [json_name = "connection_notification_arn"];

  string id = 3;

  string notification_type = 4 [json_name = "notification_type"];

  string state = 5;

  string vpc_endpoint_id = 6 [json_name = "vpc_endpoint_id"];

  string vpc_endpoint_service_id = 7 [json_name = "vpc_endpoint_service_id"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsVpcEndpointRouteTableAssociation version is 0
message AwsVpcEndpointRouteTableAssociation {
  string id = 1;

  string route_table_id = 2 [json_name = "route_table_id"];

  string vpc_endpoint_id = 3 [json_name = "vpc_endpoint_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsVpcEndpointService version is 0
message AwsVpcEndpointService {
  bool acceptance_required = 1 [json_name = "acceptance_required"];

  repeated string allowed_principals = 2 [json_name = "allowed_principals"];

  string arn = 3;

  repeated string availability_zones = 4 [json_name = "availability_zones"];

  repeated string base_endpoint_dns_names = 5 [json_name = "base_endpoint_dns_names"];

  repeated string gateway_load_balancer_arns = 6 [json_name = "gateway_load_balancer_arns"];

  string id = 7;

  bool manages_vpc_endpoints = 8 [json_name = "manages_vpc_endpoints"];

  repeated string network_load_balancer_arns = 9 [json_name = "network_load_balancer_arns"];

  string private_dns_name = 10 [json_name = "private_dns_name"];

  repeated PrivateDnsNameConfiguration private_dns_name_configuration = 11 [json_name = "private_dns_name_configuration"];

  string service_name = 12 [json_name = "service_name"];

  string service_type = 13 [json_name = "service_type"];

  string state = 14;

  map<string, string> tags = 15;

  map<string, string> tags_all = 16 [json_name = "tags_all"];

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;

  message PrivateDnsNameConfiguration {
    //name: string
    string name = 1;

    //state: string
    string state = 2;

    //type: string
    string type = 3;

    //value: string
    string value = 4;
  }
}

//AwsVpcEndpointServiceAllowedPrincipal version is 0
message AwsVpcEndpointServiceAllowedPrincipal {
  string id = 1;

  string principal_arn = 2 [json_name = "principal_arn"];

  string vpc_endpoint_service_id = 3 [json_name = "vpc_endpoint_service_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsVpcEndpointSubnetAssociation version is 0
message AwsVpcEndpointSubnetAssociation {
  string id = 1;

  string subnet_id = 2 [json_name = "subnet_id"];

  string vpc_endpoint_id = 3 [json_name = "vpc_endpoint_id"];

  repeated Timeouts timeouts = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsVpcIpam version is 0
message AwsVpcIpam {
  string arn = 1;

  string description = 2;

  string id = 3;

  string private_default_scope_id = 4 [json_name = "private_default_scope_id"];

  string public_default_scope_id = 5 [json_name = "public_default_scope_id"];

  int64 scope_count = 6 [json_name = "scope_count"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated OperatingRegions operating_regions = 9 [json_name = "operating_regions"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message OperatingRegions {
    string region_name = 1 [json_name = "region_name"];
  }
}

//AwsVpcIpamPool version is 0
message AwsVpcIpamPool {
  string address_family = 1 [json_name = "address_family"];

  int64 allocation_default_netmask_length = 2 [json_name = "allocation_default_netmask_length"];

  int64 allocation_max_netmask_length = 3 [json_name = "allocation_max_netmask_length"];

  int64 allocation_min_netmask_length = 4 [json_name = "allocation_min_netmask_length"];

  map<string, string> allocation_resource_tags = 5 [json_name = "allocation_resource_tags"];

  string arn = 6;

  bool auto_import = 7 [json_name = "auto_import"];

  string aws_service = 8 [json_name = "aws_service"];

  string description = 9;

  string id = 10;

  string ipam_scope_id = 11 [json_name = "ipam_scope_id"];

  string ipam_scope_type = 12 [json_name = "ipam_scope_type"];

  string locale = 13;

  int64 pool_depth = 14 [json_name = "pool_depth"];

  bool publicly_advertisable = 15 [json_name = "publicly_advertisable"];

  string source_ipam_pool_id = 16 [json_name = "source_ipam_pool_id"];

  string state = 17;

  map<string, string> tags = 18;

  map<string, string> tags_all = 19 [json_name = "tags_all"];

  repeated string depends_on = 20;

  int32 count = 21;

  map<string, string> for_each = 22;

  string provider = 23;

  terraform.meta.Lifecycle lifecycle = 24;
}

//AwsVpcIpamPoolCidr version is 0
message AwsVpcIpamPoolCidr {
  string cidr = 1;

  string id = 2;

  string ipam_pool_id = 3 [json_name = "ipam_pool_id"];

  CidrAuthorizationContext cidr_authorization_context = 4 [json_name = "cidr_authorization_context"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message CidrAuthorizationContext {
    string message = 1;

    string signature = 2;
  }
}

//AwsVpcIpamPoolCidrAllocation version is 0
message AwsVpcIpamPoolCidrAllocation {
  string cidr = 1;

  string description = 2;

  string id = 3;

  string ipam_pool_allocation_id = 4 [json_name = "ipam_pool_allocation_id"];

  string ipam_pool_id = 5 [json_name = "ipam_pool_id"];

  int64 netmask_length = 6 [json_name = "netmask_length"];

  string resource_id = 7 [json_name = "resource_id"];

  string resource_owner = 8 [json_name = "resource_owner"];

  string resource_type = 9 [json_name = "resource_type"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;
}

//AwsVpcIpamScope version is 0
message AwsVpcIpamScope {
  string arn = 1;

  string description = 2;

  string id = 3;

  string ipam_arn = 4 [json_name = "ipam_arn"];

  string ipam_id = 5 [json_name = "ipam_id"];

  string ipam_scope_type = 6 [json_name = "ipam_scope_type"];

  bool is_default = 7 [json_name = "is_default"];

  int64 pool_count = 8 [json_name = "pool_count"];

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsVpcIpv4CidrBlockAssociation version is 0
message AwsVpcIpv4CidrBlockAssociation {
  string cidr_block = 1 [json_name = "cidr_block"];

  string id = 2;

  string ipv4_ipam_pool_id = 3 [json_name = "ipv4_ipam_pool_id"];

  int64 ipv4_netmask_length = 4 [json_name = "ipv4_netmask_length"];

  string vpc_id = 5 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsVpcIpv6CidrBlockAssociation version is 0
message AwsVpcIpv6CidrBlockAssociation {
  string id = 1;

  string ipv6_cidr_block = 2 [json_name = "ipv6_cidr_block"];

  string ipv6_ipam_pool_id = 3 [json_name = "ipv6_ipam_pool_id"];

  int64 ipv6_netmask_length = 4 [json_name = "ipv6_netmask_length"];

  string vpc_id = 5 [json_name = "vpc_id"];

  repeated Timeouts timeouts = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsVpcPeeringConnection version is 0
message AwsVpcPeeringConnection {
  string accept_status = 1 [json_name = "accept_status"];

  bool auto_accept = 2 [json_name = "auto_accept"];

  string id = 3;

  string peer_owner_id = 4 [json_name = "peer_owner_id"];

  string peer_region = 5 [json_name = "peer_region"];

  string peer_vpc_id = 6 [json_name = "peer_vpc_id"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string vpc_id = 9 [json_name = "vpc_id"];

  Accepter accepter = 10;

  Requester requester = 11;

  repeated Timeouts timeouts = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Accepter {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }

  message Requester {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }
}

//AwsVpcPeeringConnectionAccepter version is 0
message AwsVpcPeeringConnectionAccepter {
  string accept_status = 1 [json_name = "accept_status"];

  bool auto_accept = 2 [json_name = "auto_accept"];

  string id = 3;

  string peer_owner_id = 4 [json_name = "peer_owner_id"];

  string peer_region = 5 [json_name = "peer_region"];

  string peer_vpc_id = 6 [json_name = "peer_vpc_id"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  string vpc_id = 9 [json_name = "vpc_id"];

  string vpc_peering_connection_id = 10 [json_name = "vpc_peering_connection_id"];

  Accepter accepter = 11;

  Requester requester = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message Accepter {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }

  message Requester {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }
}

//AwsVpcPeeringConnectionOptions version is 0
message AwsVpcPeeringConnectionOptions {
  string id = 1;

  string vpc_peering_connection_id = 2 [json_name = "vpc_peering_connection_id"];

  Accepter accepter = 3;

  Requester requester = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Accepter {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }

  message Requester {
    bool allow_classic_link_to_remote_vpc = 1 [json_name = "allow_classic_link_to_remote_vpc"];

    bool allow_remote_vpc_dns_resolution = 2 [json_name = "allow_remote_vpc_dns_resolution"];

    bool allow_vpc_to_remote_classic_link = 3 [json_name = "allow_vpc_to_remote_classic_link"];
  }
}

//AwsVpnConnection version is 0
message AwsVpnConnection {
  string arn = 1;

  string customer_gateway_configuration = 2 [json_name = "customer_gateway_configuration"];

  string customer_gateway_id = 3 [json_name = "customer_gateway_id"];

  bool enable_acceleration = 4 [json_name = "enable_acceleration"];

  string id = 5;

  string local_ipv4_network_cidr = 6 [json_name = "local_ipv4_network_cidr"];

  string local_ipv6_network_cidr = 7 [json_name = "local_ipv6_network_cidr"];

  string remote_ipv4_network_cidr = 8 [json_name = "remote_ipv4_network_cidr"];

  string remote_ipv6_network_cidr = 9 [json_name = "remote_ipv6_network_cidr"];

  repeated Routes routes = 10;

  bool static_routes_only = 11 [json_name = "static_routes_only"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string transit_gateway_attachment_id = 14 [json_name = "transit_gateway_attachment_id"];

  string transit_gateway_id = 15 [json_name = "transit_gateway_id"];

  string tunnel1_address = 16 [json_name = "tunnel1_address"];

  string tunnel1_bgp_asn = 17 [json_name = "tunnel1_bgp_asn"];

  int64 tunnel1_bgp_holdtime = 18 [json_name = "tunnel1_bgp_holdtime"];

  string tunnel1_cgw_inside_address = 19 [json_name = "tunnel1_cgw_inside_address"];

  string tunnel1_dpd_timeout_action = 20 [json_name = "tunnel1_dpd_timeout_action"];

  int64 tunnel1_dpd_timeout_seconds = 21 [json_name = "tunnel1_dpd_timeout_seconds"];

  repeated string tunnel1_ike_versions = 22 [json_name = "tunnel1_ike_versions"];

  string tunnel1_inside_cidr = 23 [json_name = "tunnel1_inside_cidr"];

  string tunnel1_inside_ipv6_cidr = 24 [json_name = "tunnel1_inside_ipv6_cidr"];

  repeated int64 tunnel1_phase1_dh_group_numbers = 25 [json_name = "tunnel1_phase1_dh_group_numbers"];

  repeated string tunnel1_phase1_encryption_algorithms = 26 [json_name = "tunnel1_phase1_encryption_algorithms"];

  repeated string tunnel1_phase1_integrity_algorithms = 27 [json_name = "tunnel1_phase1_integrity_algorithms"];

  int64 tunnel1_phase1_lifetime_seconds = 28 [json_name = "tunnel1_phase1_lifetime_seconds"];

  repeated int64 tunnel1_phase2_dh_group_numbers = 29 [json_name = "tunnel1_phase2_dh_group_numbers"];

  repeated string tunnel1_phase2_encryption_algorithms = 30 [json_name = "tunnel1_phase2_encryption_algorithms"];

  repeated string tunnel1_phase2_integrity_algorithms = 31 [json_name = "tunnel1_phase2_integrity_algorithms"];

  int64 tunnel1_phase2_lifetime_seconds = 32 [json_name = "tunnel1_phase2_lifetime_seconds"];

  string tunnel1_preshared_key = 33 [json_name = "tunnel1_preshared_key"];

  int64 tunnel1_rekey_fuzz_percentage = 34 [json_name = "tunnel1_rekey_fuzz_percentage"];

  int64 tunnel1_rekey_margin_time_seconds = 35 [json_name = "tunnel1_rekey_margin_time_seconds"];

  int64 tunnel1_replay_window_size = 36 [json_name = "tunnel1_replay_window_size"];

  string tunnel1_startup_action = 37 [json_name = "tunnel1_startup_action"];

  string tunnel1_vgw_inside_address = 38 [json_name = "tunnel1_vgw_inside_address"];

  string tunnel2_address = 39 [json_name = "tunnel2_address"];

  string tunnel2_bgp_asn = 40 [json_name = "tunnel2_bgp_asn"];

  int64 tunnel2_bgp_holdtime = 41 [json_name = "tunnel2_bgp_holdtime"];

  string tunnel2_cgw_inside_address = 42 [json_name = "tunnel2_cgw_inside_address"];

  string tunnel2_dpd_timeout_action = 43 [json_name = "tunnel2_dpd_timeout_action"];

  int64 tunnel2_dpd_timeout_seconds = 44 [json_name = "tunnel2_dpd_timeout_seconds"];

  repeated string tunnel2_ike_versions = 45 [json_name = "tunnel2_ike_versions"];

  string tunnel2_inside_cidr = 46 [json_name = "tunnel2_inside_cidr"];

  string tunnel2_inside_ipv6_cidr = 47 [json_name = "tunnel2_inside_ipv6_cidr"];

  repeated int64 tunnel2_phase1_dh_group_numbers = 48 [json_name = "tunnel2_phase1_dh_group_numbers"];

  repeated string tunnel2_phase1_encryption_algorithms = 49 [json_name = "tunnel2_phase1_encryption_algorithms"];

  repeated string tunnel2_phase1_integrity_algorithms = 50 [json_name = "tunnel2_phase1_integrity_algorithms"];

  int64 tunnel2_phase1_lifetime_seconds = 51 [json_name = "tunnel2_phase1_lifetime_seconds"];

  repeated int64 tunnel2_phase2_dh_group_numbers = 52 [json_name = "tunnel2_phase2_dh_group_numbers"];

  repeated string tunnel2_phase2_encryption_algorithms = 53 [json_name = "tunnel2_phase2_encryption_algorithms"];

  repeated string tunnel2_phase2_integrity_algorithms = 54 [json_name = "tunnel2_phase2_integrity_algorithms"];

  int64 tunnel2_phase2_lifetime_seconds = 55 [json_name = "tunnel2_phase2_lifetime_seconds"];

  string tunnel2_preshared_key = 56 [json_name = "tunnel2_preshared_key"];

  int64 tunnel2_rekey_fuzz_percentage = 57 [json_name = "tunnel2_rekey_fuzz_percentage"];

  int64 tunnel2_rekey_margin_time_seconds = 58 [json_name = "tunnel2_rekey_margin_time_seconds"];

  int64 tunnel2_replay_window_size = 59 [json_name = "tunnel2_replay_window_size"];

  string tunnel2_startup_action = 60 [json_name = "tunnel2_startup_action"];

  string tunnel2_vgw_inside_address = 61 [json_name = "tunnel2_vgw_inside_address"];

  string tunnel_inside_ip_version = 62 [json_name = "tunnel_inside_ip_version"];

  string type = 63;

  repeated VgwTelemetry vgw_telemetry = 64 [json_name = "vgw_telemetry"];

  string vpn_gateway_id = 65 [json_name = "vpn_gateway_id"];

  repeated string depends_on = 66;

  int32 count = 67;

  map<string, string> for_each = 68;

  string provider = 69;

  terraform.meta.Lifecycle lifecycle = 70;

  message Routes {
    //destination_cidr_block: string
    string destination_cidr_block = 1 [json_name = "destination_cidr_block"];

    //source: string
    string source = 2;

    //state: string
    string state = 3;
  }

  message VgwTelemetry {
    //accepted_route_count: number
    int64 accepted_route_count = 1 [json_name = "accepted_route_count"];

    //last_status_change: string
    string last_status_change = 2 [json_name = "last_status_change"];

    //outside_ip_address: string
    string outside_ip_address = 3 [json_name = "outside_ip_address"];

    //status: string
    string status = 4;

    //status_message: string
    string status_message = 5 [json_name = "status_message"];
  }
}

//AwsVpnConnectionRoute version is 0
message AwsVpnConnectionRoute {
  string destination_cidr_block = 1 [json_name = "destination_cidr_block"];

  string id = 2;

  string vpn_connection_id = 3 [json_name = "vpn_connection_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsVpnGateway version is 0
message AwsVpnGateway {
  string amazon_side_asn = 1 [json_name = "amazon_side_asn"];

  string arn = 2;

  string availability_zone = 3 [json_name = "availability_zone"];

  string id = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  string vpc_id = 7 [json_name = "vpc_id"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;
}

//AwsVpnGatewayAttachment version is 0
message AwsVpnGatewayAttachment {
  string id = 1;

  string vpc_id = 2 [json_name = "vpc_id"];

  string vpn_gateway_id = 3 [json_name = "vpn_gateway_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsVpnGatewayRoutePropagation version is 0
message AwsVpnGatewayRoutePropagation {
  string id = 1;

  string route_table_id = 2 [json_name = "route_table_id"];

  string vpn_gateway_id = 3 [json_name = "vpn_gateway_id"];

  repeated Timeouts timeouts = 4;

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message Timeouts {
    string create = 1;

    string delete = 2;
  }
}

//AwsWafByteMatchSet version is 0
message AwsWafByteMatchSet {
  string id = 1;

  string name = 2;

  repeated ByteMatchTuples byte_match_tuples = 3 [json_name = "byte_match_tuples"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message ByteMatchTuples {
    string positional_constraint = 1 [json_name = "positional_constraint"];

    string target_string = 2 [json_name = "target_string"];

    string text_transformation = 3 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 4 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafGeoMatchSet version is 0
message AwsWafGeoMatchSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated GeoMatchConstraint geo_match_constraint = 4 [json_name = "geo_match_constraint"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message GeoMatchConstraint {
    string type = 1;

    string value = 2;
  }
}

//AwsWafIpset version is 0
message AwsWafIpset {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated IpSetDescriptors ip_set_descriptors = 4 [json_name = "ip_set_descriptors"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message IpSetDescriptors {
    string type = 1;

    string value = 2;
  }
}

//AwsWafRateBasedRule version is 0
message AwsWafRateBasedRule {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  string rate_key = 5 [json_name = "rate_key"];

  int64 rate_limit = 6 [json_name = "rate_limit"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated Predicates predicates = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Predicates {
    string data_id = 1 [json_name = "data_id"];

    bool negated = 2;

    string type = 3;
  }
}

//AwsWafRegexMatchSet version is 0
message AwsWafRegexMatchSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated RegexMatchTuple regex_match_tuple = 4 [json_name = "regex_match_tuple"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message RegexMatchTuple {
    string regex_pattern_set_id = 1 [json_name = "regex_pattern_set_id"];

    string text_transformation = 2 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafRegexPatternSet version is 0
message AwsWafRegexPatternSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated string regex_pattern_strings = 4 [json_name = "regex_pattern_strings"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;
}

//AwsWafRule version is 0
message AwsWafRule {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated Predicates predicates = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Predicates {
    string data_id = 1 [json_name = "data_id"];

    bool negated = 2;

    string type = 3;
  }
}

//AwsWafRuleGroup version is 0
message AwsWafRuleGroup {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated ActivatedRule activated_rule = 7 [json_name = "activated_rule"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message ActivatedRule {
    int64 priority = 1;

    string rule_id = 2 [json_name = "rule_id"];

    string type = 3;

    Action action = 4;

    message Action {
      string type = 1;
    }
  }
}

//AwsWafSizeConstraintSet version is 0
message AwsWafSizeConstraintSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated SizeConstraints size_constraints = 4 [json_name = "size_constraints"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message SizeConstraints {
    string comparison_operator = 1 [json_name = "comparison_operator"];

    int64 size = 2;

    string text_transformation = 3 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 4 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafSqlInjectionMatchSet version is 0
message AwsWafSqlInjectionMatchSet {
  string id = 1;

  string name = 2;

  repeated SqlInjectionMatchTuples sql_injection_match_tuples = 3 [json_name = "sql_injection_match_tuples"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message SqlInjectionMatchTuples {
    string text_transformation = 1 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafWebAcl version is 0
message AwsWafWebAcl {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  DefaultAction default_action = 7 [json_name = "default_action"];

  LoggingConfiguration logging_configuration = 8 [json_name = "logging_configuration"];

  repeated Rules rules = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message DefaultAction {
    string type = 1;
  }

  message LoggingConfiguration {
    string log_destination = 1 [json_name = "log_destination"];

    RedactedFields redacted_fields = 2 [json_name = "redacted_fields"];

    message RedactedFields {
      repeated FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

      message FieldToMatch {
        string data = 1;

        string type = 2;
      }
    }
  }

  message Rules {
    int64 priority = 1;

    string rule_id = 2 [json_name = "rule_id"];

    string type = 3;

    Action action = 4;

    OverrideAction override_action = 5 [json_name = "override_action"];

    message Action {
      string type = 1;
    }

    message OverrideAction {
      string type = 1;
    }
  }
}

//AwsWafXssMatchSet version is 0
message AwsWafXssMatchSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated XssMatchTuples xss_match_tuples = 4 [json_name = "xss_match_tuples"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message XssMatchTuples {
    string text_transformation = 1 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafregionalByteMatchSet version is 0
message AwsWafregionalByteMatchSet {
  string id = 1;

  string name = 2;

  repeated ByteMatchTuples byte_match_tuples = 3 [json_name = "byte_match_tuples"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message ByteMatchTuples {
    string positional_constraint = 1 [json_name = "positional_constraint"];

    string target_string = 2 [json_name = "target_string"];

    string text_transformation = 3 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 4 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafregionalGeoMatchSet version is 0
message AwsWafregionalGeoMatchSet {
  string id = 1;

  string name = 2;

  repeated GeoMatchConstraint geo_match_constraint = 3 [json_name = "geo_match_constraint"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message GeoMatchConstraint {
    string type = 1;

    string value = 2;
  }
}

//AwsWafregionalIpset version is 0
message AwsWafregionalIpset {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated IpSetDescriptor ip_set_descriptor = 4 [json_name = "ip_set_descriptor"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message IpSetDescriptor {
    string type = 1;

    string value = 2;
  }
}

//AwsWafregionalRateBasedRule version is 0
message AwsWafregionalRateBasedRule {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  string rate_key = 5 [json_name = "rate_key"];

  int64 rate_limit = 6 [json_name = "rate_limit"];

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated Predicate predicate = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message Predicate {
    string data_id = 1 [json_name = "data_id"];

    bool negated = 2;

    string type = 3;
  }
}

//AwsWafregionalRegexMatchSet version is 0
message AwsWafregionalRegexMatchSet {
  string id = 1;

  string name = 2;

  repeated RegexMatchTuple regex_match_tuple = 3 [json_name = "regex_match_tuple"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message RegexMatchTuple {
    string regex_pattern_set_id = 1 [json_name = "regex_pattern_set_id"];

    string text_transformation = 2 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafregionalRegexPatternSet version is 0
message AwsWafregionalRegexPatternSet {
  string id = 1;

  string name = 2;

  repeated string regex_pattern_strings = 3 [json_name = "regex_pattern_strings"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsWafregionalRule version is 0
message AwsWafregionalRule {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated Predicate predicate = 7;

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message Predicate {
    string data_id = 1 [json_name = "data_id"];

    bool negated = 2;

    string type = 3;
  }
}

//AwsWafregionalRuleGroup version is 0
message AwsWafregionalRuleGroup {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated ActivatedRule activated_rule = 7 [json_name = "activated_rule"];

  repeated string depends_on = 8;

  int32 count = 9;

  map<string, string> for_each = 10;

  string provider = 11;

  terraform.meta.Lifecycle lifecycle = 12;

  message ActivatedRule {
    int64 priority = 1;

    string rule_id = 2 [json_name = "rule_id"];

    string type = 3;

    Action action = 4;

    message Action {
      string type = 1;
    }
  }
}

//AwsWafregionalSizeConstraintSet version is 0
message AwsWafregionalSizeConstraintSet {
  string arn = 1;

  string id = 2;

  string name = 3;

  repeated SizeConstraints size_constraints = 4 [json_name = "size_constraints"];

  repeated string depends_on = 5;

  int32 count = 6;

  map<string, string> for_each = 7;

  string provider = 8;

  terraform.meta.Lifecycle lifecycle = 9;

  message SizeConstraints {
    string comparison_operator = 1 [json_name = "comparison_operator"];

    int64 size = 2;

    string text_transformation = 3 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 4 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafregionalSqlInjectionMatchSet version is 0
message AwsWafregionalSqlInjectionMatchSet {
  string id = 1;

  string name = 2;

  repeated SqlInjectionMatchTuple sql_injection_match_tuple = 3 [json_name = "sql_injection_match_tuple"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message SqlInjectionMatchTuple {
    string text_transformation = 1 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafregionalWebAcl version is 0
message AwsWafregionalWebAcl {
  string arn = 1;

  string id = 2;

  string metric_name = 3 [json_name = "metric_name"];

  string name = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  DefaultAction default_action = 7 [json_name = "default_action"];

  LoggingConfiguration logging_configuration = 8 [json_name = "logging_configuration"];

  repeated Rule rule = 9;

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message DefaultAction {
    string type = 1;
  }

  message LoggingConfiguration {
    string log_destination = 1 [json_name = "log_destination"];

    RedactedFields redacted_fields = 2 [json_name = "redacted_fields"];

    message RedactedFields {
      repeated FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

      message FieldToMatch {
        string data = 1;

        string type = 2;
      }
    }
  }

  message Rule {
    int64 priority = 1;

    string rule_id = 2 [json_name = "rule_id"];

    string type = 3;

    Action action = 4;

    OverrideAction override_action = 5 [json_name = "override_action"];

    message Action {
      string type = 1;
    }

    message OverrideAction {
      string type = 1;
    }
  }
}

//AwsWafregionalWebAclAssociation version is 0
message AwsWafregionalWebAclAssociation {
  string id = 1;

  string resource_arn = 2 [json_name = "resource_arn"];

  string web_acl_id = 3 [json_name = "web_acl_id"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsWafregionalXssMatchSet version is 0
message AwsWafregionalXssMatchSet {
  string id = 1;

  string name = 2;

  repeated XssMatchTuple xss_match_tuple = 3 [json_name = "xss_match_tuple"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;

  message XssMatchTuple {
    string text_transformation = 1 [json_name = "text_transformation"];

    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

    message FieldToMatch {
      string data = 1;

      string type = 2;
    }
  }
}

//AwsWafv2IpSet version is 0
message AwsWafv2IpSet {
  repeated string addresses = 1;

  string arn = 2;

  string description = 3;

  string id = 4;

  string ip_address_version = 5 [json_name = "ip_address_version"];

  string lock_token = 6 [json_name = "lock_token"];

  string name = 7;

  string scope = 8;

  map<string, string> tags = 9;

  map<string, string> tags_all = 10 [json_name = "tags_all"];

  repeated string depends_on = 11;

  int32 count = 12;

  map<string, string> for_each = 13;

  string provider = 14;

  terraform.meta.Lifecycle lifecycle = 15;
}

//AwsWafv2RegexPatternSet version is 0
message AwsWafv2RegexPatternSet {
  string arn = 1;

  string description = 2;

  string id = 3;

  string lock_token = 4 [json_name = "lock_token"];

  string name = 5;

  string scope = 6;

  map<string, string> tags = 7;

  map<string, string> tags_all = 8 [json_name = "tags_all"];

  repeated RegularExpression regular_expression = 9 [json_name = "regular_expression"];

  repeated string depends_on = 10;

  int32 count = 11;

  map<string, string> for_each = 12;

  string provider = 13;

  terraform.meta.Lifecycle lifecycle = 14;

  message RegularExpression {
    string regex_string = 1 [json_name = "regex_string"];
  }
}

//AwsWafv2RuleGroup version is 0
message AwsWafv2RuleGroup {
  string arn = 1;

  int64 capacity = 2;

  string description = 3;

  string id = 4;

  string lock_token = 5 [json_name = "lock_token"];

  string name = 6;

  string scope = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated CustomResponseBody custom_response_body = 10 [json_name = "custom_response_body"];

  repeated Rule rule = 11;

  VisibilityConfig visibility_config = 12 [json_name = "visibility_config"];

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message CustomResponseBody {
    string content = 1;

    string content_type = 2 [json_name = "content_type"];

    string key = 3;
  }

  message Rule {
    string name = 1;

    int64 priority = 2;

    Action action = 3;

    repeated RuleLabel rule_label = 4 [json_name = "rule_label"];

    Statement statement = 5;

    VisibilityConfig visibility_config = 6 [json_name = "visibility_config"];

    message Action {
      Allow allow = 1;

      Block block = 2;

      Count count = 3;

      message Allow {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Block {
        CustomResponse custom_response = 1 [json_name = "custom_response"];

        message CustomResponse {
          string custom_response_body_key = 1 [json_name = "custom_response_body_key"];

          int64 response_code = 2 [json_name = "response_code"];

          repeated ResponseHeader response_header = 3 [json_name = "response_header"];

          message ResponseHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Count {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }
    }

    message RuleLabel {
      string name = 1;
    }

    message Statement {
      AndStatement and_statement = 1 [json_name = "and_statement"];

      ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

      GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

      IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

      LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

      NotStatement not_statement = 6 [json_name = "not_statement"];

      OrStatement or_statement = 7 [json_name = "or_statement"];

      RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

      SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

      SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

      XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

      message AndStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

          SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message ByteMatchStatement {
        string positional_constraint = 1 [json_name = "positional_constraint"];

        string search_string = 2 [json_name = "search_string"];

        FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Method method = 3;

          QueryString query_string = 4 [json_name = "query_string"];

          SingleHeader single_header = 5 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

          UriPath uri_path = 7 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message GeoMatchStatement {
        repeated string country_codes = 1 [json_name = "country_codes"];

        ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

        message ForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];
        }
      }

      message IpSetReferenceStatement {
        string arn = 1;

        IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

        message IpSetForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];

          string position = 3;
        }
      }

      message LabelMatchStatement {
        string key = 1;

        string scope = 2;
      }

      message NotStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

          SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message OrStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

          SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message RegexPatternSetReferenceStatement {
        string arn = 1;

        FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Method method = 3;

          QueryString query_string = 4 [json_name = "query_string"];

          SingleHeader single_header = 5 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

          UriPath uri_path = 7 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message SizeConstraintStatement {
        string comparison_operator = 1 [json_name = "comparison_operator"];

        int64 size = 2;

        FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Method method = 3;

          QueryString query_string = 4 [json_name = "query_string"];

          SingleHeader single_header = 5 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

          UriPath uri_path = 7 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message SqliMatchStatement {
        FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Method method = 3;

          QueryString query_string = 4 [json_name = "query_string"];

          SingleHeader single_header = 5 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

          UriPath uri_path = 7 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message XssMatchStatement {
        FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Method method = 3;

          QueryString query_string = 4 [json_name = "query_string"];

          SingleHeader single_header = 5 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

          UriPath uri_path = 7 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }
    }

    message VisibilityConfig {
      bool cloudwatch_metrics_enabled = 1 [json_name = "cloudwatch_metrics_enabled"];

      string metric_name = 2 [json_name = "metric_name"];

      bool sampled_requests_enabled = 3 [json_name = "sampled_requests_enabled"];
    }
  }

  message VisibilityConfig {
    bool cloudwatch_metrics_enabled = 1 [json_name = "cloudwatch_metrics_enabled"];

    string metric_name = 2 [json_name = "metric_name"];

    bool sampled_requests_enabled = 3 [json_name = "sampled_requests_enabled"];
  }
}

//AwsWafv2WebAcl version is 0
message AwsWafv2WebAcl {
  string arn = 1;

  int64 capacity = 2;

  string description = 3;

  string id = 4;

  string lock_token = 5 [json_name = "lock_token"];

  string name = 6;

  string scope = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  repeated CustomResponseBody custom_response_body = 10 [json_name = "custom_response_body"];

  DefaultAction default_action = 11 [json_name = "default_action"];

  repeated Rule rule = 12;

  VisibilityConfig visibility_config = 13 [json_name = "visibility_config"];

  repeated string depends_on = 14;

  int32 count = 15;

  map<string, string> for_each = 16;

  string provider = 17;

  terraform.meta.Lifecycle lifecycle = 18;

  message CustomResponseBody {
    string content = 1;

    string content_type = 2 [json_name = "content_type"];

    string key = 3;
  }

  message DefaultAction {
    Allow allow = 1;

    Block block = 2;

    message Allow {
      CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

      message CustomRequestHandling {
        repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

        message InsertHeader {
          string name = 1;

          string value = 2;
        }
      }
    }

    message Block {
      CustomResponse custom_response = 1 [json_name = "custom_response"];

      message CustomResponse {
        string custom_response_body_key = 1 [json_name = "custom_response_body_key"];

        int64 response_code = 2 [json_name = "response_code"];

        repeated ResponseHeader response_header = 3 [json_name = "response_header"];

        message ResponseHeader {
          string name = 1;

          string value = 2;
        }
      }
    }
  }

  message Rule {
    string name = 1;

    int64 priority = 2;

    Action action = 3;

    OverrideAction override_action = 4 [json_name = "override_action"];

    repeated RuleLabel rule_label = 5 [json_name = "rule_label"];

    Statement statement = 6;

    VisibilityConfig visibility_config = 7 [json_name = "visibility_config"];

    message Action {
      Allow allow = 1;

      Block block = 2;

      Count count = 3;

      message Allow {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Block {
        CustomResponse custom_response = 1 [json_name = "custom_response"];

        message CustomResponse {
          string custom_response_body_key = 1 [json_name = "custom_response_body_key"];

          int64 response_code = 2 [json_name = "response_code"];

          repeated ResponseHeader response_header = 3 [json_name = "response_header"];

          message ResponseHeader {
            string name = 1;

            string value = 2;
          }
        }
      }

      message Count {
        CustomRequestHandling custom_request_handling = 1 [json_name = "custom_request_handling"];

        message CustomRequestHandling {
          repeated InsertHeader insert_header = 1 [json_name = "insert_header"];

          message InsertHeader {
            string name = 1;

            string value = 2;
          }
        }
      }
    }

    message OverrideAction {
      Count count = 1;

      None none = 2;

      message Count {
      }

      message None {
      }
    }

    message RuleLabel {
      string name = 1;
    }

    message Statement {
      AndStatement and_statement = 1 [json_name = "and_statement"];

      ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

      GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

      IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

      LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

      ManagedRuleGroupStatement managed_rule_group_statement = 6 [json_name = "managed_rule_group_statement"];

      NotStatement not_statement = 7 [json_name = "not_statement"];

      OrStatement or_statement = 8 [json_name = "or_statement"];

      RateBasedStatement rate_based_statement = 9 [json_name = "rate_based_statement"];

      RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 10 [json_name = "regex_pattern_set_reference_statement"];

      RuleGroupReferenceStatement rule_group_reference_statement = 11 [json_name = "rule_group_reference_statement"];

      SizeConstraintStatement size_constraint_statement = 12 [json_name = "size_constraint_statement"];

      SqliMatchStatement sqli_match_statement = 13 [json_name = "sqli_match_statement"];

      XssMatchStatement xss_match_statement = 14 [json_name = "xss_match_statement"];

      message AndStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

          SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message ByteMatchStatement {
        string positional_constraint = 1 [json_name = "positional_constraint"];

        string search_string = 2 [json_name = "search_string"];

        FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Method method = 3;

          QueryString query_string = 4 [json_name = "query_string"];

          SingleHeader single_header = 5 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

          UriPath uri_path = 7 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message GeoMatchStatement {
        repeated string country_codes = 1 [json_name = "country_codes"];

        ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

        message ForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];
        }
      }

      message IpSetReferenceStatement {
        string arn = 1;

        IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

        message IpSetForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];

          string position = 3;
        }
      }

      message LabelMatchStatement {
        string key = 1;

        string scope = 2;
      }

      message ManagedRuleGroupStatement {
        string name = 1;

        string vendor_name = 2 [json_name = "vendor_name"];

        repeated ExcludedRule excluded_rule = 3 [json_name = "excluded_rule"];

        ScopeDownStatement scope_down_statement = 4 [json_name = "scope_down_statement"];

        message ExcludedRule {
          string name = 1;
        }

        message ScopeDownStatement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

          SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message NotStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

          SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message OrStatement {
        repeated Statement statement = 1;

        message Statement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

          SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message RateBasedStatement {
        string aggregate_key_type = 1 [json_name = "aggregate_key_type"];

        int64 limit = 2;

        ForwardedIpConfig forwarded_ip_config = 3 [json_name = "forwarded_ip_config"];

        ScopeDownStatement scope_down_statement = 4 [json_name = "scope_down_statement"];

        message ForwardedIpConfig {
          string fallback_behavior = 1 [json_name = "fallback_behavior"];

          string header_name = 2 [json_name = "header_name"];
        }

        message ScopeDownStatement {
          AndStatement and_statement = 1 [json_name = "and_statement"];

          ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

          GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

          IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

          LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

          NotStatement not_statement = 6 [json_name = "not_statement"];

          OrStatement or_statement = 7 [json_name = "or_statement"];

          RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

          SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

          SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

          XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

          message AndStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message ByteMatchStatement {
            string positional_constraint = 1 [json_name = "positional_constraint"];

            string search_string = 2 [json_name = "search_string"];

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message GeoMatchStatement {
            repeated string country_codes = 1 [json_name = "country_codes"];

            ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

            message ForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];
            }
          }

          message IpSetReferenceStatement {
            string arn = 1;

            IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

            message IpSetForwardedIpConfig {
              string fallback_behavior = 1 [json_name = "fallback_behavior"];

              string header_name = 2 [json_name = "header_name"];

              string position = 3;
            }
          }

          message LabelMatchStatement {
            string key = 1;

            string scope = 2;
          }

          message NotStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message OrStatement {
            repeated Statement statement = 1;

            message Statement {
              AndStatement and_statement = 1 [json_name = "and_statement"];

              ByteMatchStatement byte_match_statement = 2 [json_name = "byte_match_statement"];

              GeoMatchStatement geo_match_statement = 3 [json_name = "geo_match_statement"];

              IpSetReferenceStatement ip_set_reference_statement = 4 [json_name = "ip_set_reference_statement"];

              LabelMatchStatement label_match_statement = 5 [json_name = "label_match_statement"];

              NotStatement not_statement = 6 [json_name = "not_statement"];

              OrStatement or_statement = 7 [json_name = "or_statement"];

              RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 8 [json_name = "regex_pattern_set_reference_statement"];

              SizeConstraintStatement size_constraint_statement = 9 [json_name = "size_constraint_statement"];

              SqliMatchStatement sqli_match_statement = 10 [json_name = "sqli_match_statement"];

              XssMatchStatement xss_match_statement = 11 [json_name = "xss_match_statement"];

              message AndStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message ByteMatchStatement {
                string positional_constraint = 1 [json_name = "positional_constraint"];

                string search_string = 2 [json_name = "search_string"];

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message GeoMatchStatement {
                repeated string country_codes = 1 [json_name = "country_codes"];

                ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                message ForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];
                }
              }

              message IpSetReferenceStatement {
                string arn = 1;

                IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                message IpSetForwardedIpConfig {
                  string fallback_behavior = 1 [json_name = "fallback_behavior"];

                  string header_name = 2 [json_name = "header_name"];

                  string position = 3;
                }
              }

              message LabelMatchStatement {
                string key = 1;

                string scope = 2;
              }

              message NotStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message OrStatement {
                repeated Statement statement = 1;

                message Statement {
                  ByteMatchStatement byte_match_statement = 1 [json_name = "byte_match_statement"];

                  GeoMatchStatement geo_match_statement = 2 [json_name = "geo_match_statement"];

                  IpSetReferenceStatement ip_set_reference_statement = 3 [json_name = "ip_set_reference_statement"];

                  LabelMatchStatement label_match_statement = 4 [json_name = "label_match_statement"];

                  RegexPatternSetReferenceStatement regex_pattern_set_reference_statement = 5 [json_name = "regex_pattern_set_reference_statement"];

                  SizeConstraintStatement size_constraint_statement = 6 [json_name = "size_constraint_statement"];

                  SqliMatchStatement sqli_match_statement = 7 [json_name = "sqli_match_statement"];

                  XssMatchStatement xss_match_statement = 8 [json_name = "xss_match_statement"];

                  message ByteMatchStatement {
                    string positional_constraint = 1 [json_name = "positional_constraint"];

                    string search_string = 2 [json_name = "search_string"];

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message GeoMatchStatement {
                    repeated string country_codes = 1 [json_name = "country_codes"];

                    ForwardedIpConfig forwarded_ip_config = 2 [json_name = "forwarded_ip_config"];

                    message ForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];
                    }
                  }

                  message IpSetReferenceStatement {
                    string arn = 1;

                    IpSetForwardedIpConfig ip_set_forwarded_ip_config = 2 [json_name = "ip_set_forwarded_ip_config"];

                    message IpSetForwardedIpConfig {
                      string fallback_behavior = 1 [json_name = "fallback_behavior"];

                      string header_name = 2 [json_name = "header_name"];

                      string position = 3;
                    }
                  }

                  message LabelMatchStatement {
                    string key = 1;

                    string scope = 2;
                  }

                  message RegexPatternSetReferenceStatement {
                    string arn = 1;

                    FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SizeConstraintStatement {
                    string comparison_operator = 1 [json_name = "comparison_operator"];

                    int64 size = 2;

                    FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message SqliMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }

                  message XssMatchStatement {
                    FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                    repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                    message FieldToMatch {
                      AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                      Body body = 2;

                      Method method = 3;

                      QueryString query_string = 4 [json_name = "query_string"];

                      SingleHeader single_header = 5 [json_name = "single_header"];

                      SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                      UriPath uri_path = 7 [json_name = "uri_path"];

                      message AllQueryArguments {
                      }

                      message Body {
                      }

                      message Method {
                      }

                      message QueryString {
                      }

                      message SingleHeader {
                        string name = 1;
                      }

                      message SingleQueryArgument {
                        string name = 1;
                      }

                      message UriPath {
                      }
                    }

                    message TextTransformation {
                      int64 priority = 1;

                      string type = 2;
                    }
                  }
                }
              }

              message RegexPatternSetReferenceStatement {
                string arn = 1;

                FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SizeConstraintStatement {
                string comparison_operator = 1 [json_name = "comparison_operator"];

                int64 size = 2;

                FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message SqliMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }

              message XssMatchStatement {
                FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

                repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

                message FieldToMatch {
                  AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

                  Body body = 2;

                  Method method = 3;

                  QueryString query_string = 4 [json_name = "query_string"];

                  SingleHeader single_header = 5 [json_name = "single_header"];

                  SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

                  UriPath uri_path = 7 [json_name = "uri_path"];

                  message AllQueryArguments {
                  }

                  message Body {
                  }

                  message Method {
                  }

                  message QueryString {
                  }

                  message SingleHeader {
                    string name = 1;
                  }

                  message SingleQueryArgument {
                    string name = 1;
                  }

                  message UriPath {
                  }
                }

                message TextTransformation {
                  int64 priority = 1;

                  string type = 2;
                }
              }
            }
          }

          message RegexPatternSetReferenceStatement {
            string arn = 1;

            FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SizeConstraintStatement {
            string comparison_operator = 1 [json_name = "comparison_operator"];

            int64 size = 2;

            FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message SqliMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }

          message XssMatchStatement {
            FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

            repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

            message FieldToMatch {
              AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

              Body body = 2;

              Method method = 3;

              QueryString query_string = 4 [json_name = "query_string"];

              SingleHeader single_header = 5 [json_name = "single_header"];

              SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

              UriPath uri_path = 7 [json_name = "uri_path"];

              message AllQueryArguments {
              }

              message Body {
              }

              message Method {
              }

              message QueryString {
              }

              message SingleHeader {
                string name = 1;
              }

              message SingleQueryArgument {
                string name = 1;
              }

              message UriPath {
              }
            }

            message TextTransformation {
              int64 priority = 1;

              string type = 2;
            }
          }
        }
      }

      message RegexPatternSetReferenceStatement {
        string arn = 1;

        FieldToMatch field_to_match = 2 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 3 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Method method = 3;

          QueryString query_string = 4 [json_name = "query_string"];

          SingleHeader single_header = 5 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

          UriPath uri_path = 7 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message RuleGroupReferenceStatement {
        string arn = 1;

        repeated ExcludedRule excluded_rule = 2 [json_name = "excluded_rule"];

        message ExcludedRule {
          string name = 1;
        }
      }

      message SizeConstraintStatement {
        string comparison_operator = 1 [json_name = "comparison_operator"];

        int64 size = 2;

        FieldToMatch field_to_match = 3 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 4 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Method method = 3;

          QueryString query_string = 4 [json_name = "query_string"];

          SingleHeader single_header = 5 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

          UriPath uri_path = 7 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message SqliMatchStatement {
        FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Method method = 3;

          QueryString query_string = 4 [json_name = "query_string"];

          SingleHeader single_header = 5 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

          UriPath uri_path = 7 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }

      message XssMatchStatement {
        FieldToMatch field_to_match = 1 [json_name = "field_to_match"];

        repeated TextTransformation text_transformation = 2 [json_name = "text_transformation"];

        message FieldToMatch {
          AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

          Body body = 2;

          Method method = 3;

          QueryString query_string = 4 [json_name = "query_string"];

          SingleHeader single_header = 5 [json_name = "single_header"];

          SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

          UriPath uri_path = 7 [json_name = "uri_path"];

          message AllQueryArguments {
          }

          message Body {
          }

          message Method {
          }

          message QueryString {
          }

          message SingleHeader {
            string name = 1;
          }

          message SingleQueryArgument {
            string name = 1;
          }

          message UriPath {
          }
        }

        message TextTransformation {
          int64 priority = 1;

          string type = 2;
        }
      }
    }

    message VisibilityConfig {
      bool cloudwatch_metrics_enabled = 1 [json_name = "cloudwatch_metrics_enabled"];

      string metric_name = 2 [json_name = "metric_name"];

      bool sampled_requests_enabled = 3 [json_name = "sampled_requests_enabled"];
    }
  }

  message VisibilityConfig {
    bool cloudwatch_metrics_enabled = 1 [json_name = "cloudwatch_metrics_enabled"];

    string metric_name = 2 [json_name = "metric_name"];

    bool sampled_requests_enabled = 3 [json_name = "sampled_requests_enabled"];
  }
}

//AwsWafv2WebAclAssociation version is 0
message AwsWafv2WebAclAssociation {
  string id = 1;

  string resource_arn = 2 [json_name = "resource_arn"];

  string web_acl_arn = 3 [json_name = "web_acl_arn"];

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsWafv2WebAclLoggingConfiguration version is 0
message AwsWafv2WebAclLoggingConfiguration {
  string id = 1;

  //AWS Kinesis Firehose Delivery Stream ARNs
  repeated string log_destination_configs = 2 [json_name = "log_destination_configs"];

  //AWS WebACL ARN
  string resource_arn = 3 [json_name = "resource_arn"];

  LoggingFilter logging_filter = 4 [json_name = "logging_filter"];

  repeated RedactedFields redacted_fields = 5 [json_name = "redacted_fields"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;

  message LoggingFilter {
    string default_behavior = 1 [json_name = "default_behavior"];

    repeated Filter filter = 2;

    message Filter {
      string behavior = 1;

      string requirement = 2;

      repeated Condition condition = 3;

      message Condition {
        ActionCondition action_condition = 1 [json_name = "action_condition"];

        LabelNameCondition label_name_condition = 2 [json_name = "label_name_condition"];

        message ActionCondition {
          string action = 1;
        }

        message LabelNameCondition {
          string label_name = 1 [json_name = "label_name"];
        }
      }
    }
  }

  message RedactedFields {
    AllQueryArguments all_query_arguments = 1 [json_name = "all_query_arguments"];

    Body body = 2;

    Method method = 3;

    QueryString query_string = 4 [json_name = "query_string"];

    SingleHeader single_header = 5 [json_name = "single_header"];

    SingleQueryArgument single_query_argument = 6 [json_name = "single_query_argument"];

    UriPath uri_path = 7 [json_name = "uri_path"];

    message AllQueryArguments {
    }

    message Body {
    }

    message Method {
    }

    message QueryString {
    }

    message SingleHeader {
      string name = 1;
    }

    message SingleQueryArgument {
      string name = 1;
    }

    message UriPath {
    }
  }
}

//AwsWorklinkFleet version is 0
message AwsWorklinkFleet {
  string arn = 1;

  string audit_stream_arn = 2 [json_name = "audit_stream_arn"];

  string company_code = 3 [json_name = "company_code"];

  string created_time = 4 [json_name = "created_time"];

  string device_ca_certificate = 5 [json_name = "device_ca_certificate"];

  string display_name = 6 [json_name = "display_name"];

  string id = 7;

  string last_updated_time = 8 [json_name = "last_updated_time"];

  string name = 9;

  bool optimize_for_end_user_location = 10 [json_name = "optimize_for_end_user_location"];

  IdentityProvider identity_provider = 11 [json_name = "identity_provider"];

  Network network = 12;

  repeated string depends_on = 13;

  int32 count = 14;

  map<string, string> for_each = 15;

  string provider = 16;

  terraform.meta.Lifecycle lifecycle = 17;

  message IdentityProvider {
    string saml_metadata = 1 [json_name = "saml_metadata"];

    string type = 2;
  }

  message Network {
    repeated string security_group_ids = 1 [json_name = "security_group_ids"];

    repeated string subnet_ids = 2 [json_name = "subnet_ids"];

    string vpc_id = 3 [json_name = "vpc_id"];
  }
}

//AwsWorklinkWebsiteCertificateAuthorityAssociation version is 0
message AwsWorklinkWebsiteCertificateAuthorityAssociation {
  string certificate = 1;

  string display_name = 2 [json_name = "display_name"];

  string fleet_arn = 3 [json_name = "fleet_arn"];

  string id = 4;

  string website_ca_id = 5 [json_name = "website_ca_id"];

  repeated string depends_on = 6;

  int32 count = 7;

  map<string, string> for_each = 8;

  string provider = 9;

  terraform.meta.Lifecycle lifecycle = 10;
}

//AwsWorkspacesDirectory version is 0
message AwsWorkspacesDirectory {
  string alias = 1;

  string customer_user_name = 2 [json_name = "customer_user_name"];

  string directory_id = 3 [json_name = "directory_id"];

  string directory_name = 4 [json_name = "directory_name"];

  string directory_type = 5 [json_name = "directory_type"];

  repeated string dns_ip_addresses = 6 [json_name = "dns_ip_addresses"];

  string iam_role_id = 7 [json_name = "iam_role_id"];

  string id = 8;

  repeated string ip_group_ids = 9 [json_name = "ip_group_ids"];

  string registration_code = 10 [json_name = "registration_code"];

  repeated string subnet_ids = 11 [json_name = "subnet_ids"];

  map<string, string> tags = 12;

  map<string, string> tags_all = 13 [json_name = "tags_all"];

  string workspace_security_group_id = 14 [json_name = "workspace_security_group_id"];

  SelfServicePermissions self_service_permissions = 15 [json_name = "self_service_permissions"];

  WorkspaceAccessProperties workspace_access_properties = 16 [json_name = "workspace_access_properties"];

  WorkspaceCreationProperties workspace_creation_properties = 17 [json_name = "workspace_creation_properties"];

  repeated string depends_on = 18;

  int32 count = 19;

  map<string, string> for_each = 20;

  string provider = 21;

  terraform.meta.Lifecycle lifecycle = 22;

  message SelfServicePermissions {
    bool change_compute_type = 1 [json_name = "change_compute_type"];

    bool increase_volume_size = 2 [json_name = "increase_volume_size"];

    bool rebuild_workspace = 3 [json_name = "rebuild_workspace"];

    bool restart_workspace = 4 [json_name = "restart_workspace"];

    bool switch_running_mode = 5 [json_name = "switch_running_mode"];
  }

  message WorkspaceAccessProperties {
    string device_type_android = 1 [json_name = "device_type_android"];

    string device_type_chromeos = 2 [json_name = "device_type_chromeos"];

    string device_type_ios = 3 [json_name = "device_type_ios"];

    string device_type_linux = 4 [json_name = "device_type_linux"];

    string device_type_osx = 5 [json_name = "device_type_osx"];

    string device_type_web = 6 [json_name = "device_type_web"];

    string device_type_windows = 7 [json_name = "device_type_windows"];

    string device_type_zeroclient = 8 [json_name = "device_type_zeroclient"];
  }

  message WorkspaceCreationProperties {
    string custom_security_group_id = 1 [json_name = "custom_security_group_id"];

    string default_ou = 2 [json_name = "default_ou"];

    bool enable_internet_access = 3 [json_name = "enable_internet_access"];

    bool enable_maintenance_mode = 4 [json_name = "enable_maintenance_mode"];

    bool user_enabled_as_local_administrator = 5 [json_name = "user_enabled_as_local_administrator"];
  }
}

//AwsWorkspacesIpGroup version is 0
message AwsWorkspacesIpGroup {
  string description = 1;

  string id = 2;

  string name = 3;

  map<string, string> tags = 4;

  map<string, string> tags_all = 5 [json_name = "tags_all"];

  repeated Rules rules = 6;

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;

  message Rules {
    string description = 1;

    string source = 2;
  }
}

//AwsWorkspacesWorkspace version is 0
message AwsWorkspacesWorkspace {
  string bundle_id = 1 [json_name = "bundle_id"];

  string computer_name = 2 [json_name = "computer_name"];

  string directory_id = 3 [json_name = "directory_id"];

  string id = 4;

  string ip_address = 5 [json_name = "ip_address"];

  bool root_volume_encryption_enabled = 6 [json_name = "root_volume_encryption_enabled"];

  string state = 7;

  map<string, string> tags = 8;

  map<string, string> tags_all = 9 [json_name = "tags_all"];

  string user_name = 10 [json_name = "user_name"];

  bool user_volume_encryption_enabled = 11 [json_name = "user_volume_encryption_enabled"];

  string volume_encryption_key = 12 [json_name = "volume_encryption_key"];

  repeated Timeouts timeouts = 13;

  WorkspaceProperties workspace_properties = 14 [json_name = "workspace_properties"];

  repeated string depends_on = 15;

  int32 count = 16;

  map<string, string> for_each = 17;

  string provider = 18;

  terraform.meta.Lifecycle lifecycle = 19;

  message Timeouts {
    string create = 1;

    string delete = 2;

    string update = 3;
  }

  message WorkspaceProperties {
    string compute_type_name = 1 [json_name = "compute_type_name"];

    int64 root_volume_size_gib = 2 [json_name = "root_volume_size_gib"];

    string running_mode = 3 [json_name = "running_mode"];

    int64 running_mode_auto_stop_timeout_in_minutes = 4 [json_name = "running_mode_auto_stop_timeout_in_minutes"];

    int64 user_volume_size_gib = 5 [json_name = "user_volume_size_gib"];
  }
}

//AwsXrayEncryptionConfig version is 0
message AwsXrayEncryptionConfig {
  string id = 1;

  string key_id = 2 [json_name = "key_id"];

  string type = 3;

  repeated string depends_on = 4;

  int32 count = 5;

  map<string, string> for_each = 6;

  string provider = 7;

  terraform.meta.Lifecycle lifecycle = 8;
}

//AwsXrayGroup version is 0
message AwsXrayGroup {
  string arn = 1;

  string filter_expression = 2 [json_name = "filter_expression"];

  string group_name = 3 [json_name = "group_name"];

  string id = 4;

  map<string, string> tags = 5;

  map<string, string> tags_all = 6 [json_name = "tags_all"];

  repeated string depends_on = 7;

  int32 count = 8;

  map<string, string> for_each = 9;

  string provider = 10;

  terraform.meta.Lifecycle lifecycle = 11;
}

//AwsXraySamplingRule version is 0
message AwsXraySamplingRule {
  string arn = 1;

  map<string, string> attributes = 2;

  int64 fixed_rate = 3 [json_name = "fixed_rate"];

  string host = 4;

  string http_method = 5 [json_name = "http_method"];

  string id = 6;

  int64 priority = 7;

  int64 reservoir_size = 8 [json_name = "reservoir_size"];

  string resource_arn = 9 [json_name = "resource_arn"];

  string rule_name = 10 [json_name = "rule_name"];

  string service_name = 11 [json_name = "service_name"];

  string service_type = 12 [json_name = "service_type"];

  map<string, string> tags = 13;

  map<string, string> tags_all = 14 [json_name = "tags_all"];

  string url_path = 15 [json_name = "url_path"];

  int64 version = 16;

  repeated string depends_on = 17;

  int32 count = 18;

  map<string, string> for_each = 19;

  string provider = 20;

  terraform.meta.Lifecycle lifecycle = 21;
}
